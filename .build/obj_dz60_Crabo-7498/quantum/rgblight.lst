   1               		.file	"rgblight.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_effect_dummy,"ax",@progbits
  12               	rgblight_effect_dummy:
  13               	.LVL0:
  14               	.LFB174:
  15               		.file 1 "quantum/rgblight.c"
   1:quantum/rgblight.c **** /* Copyright 2016-2017 Yang Liu
   2:quantum/rgblight.c ****  *
   3:quantum/rgblight.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgblight.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgblight.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgblight.c ****  * (at your option) any later version.
   7:quantum/rgblight.c ****  *
   8:quantum/rgblight.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgblight.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgblight.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgblight.c ****  * GNU General Public License for more details.
  12:quantum/rgblight.c ****  *
  13:quantum/rgblight.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgblight.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgblight.c ****  */
  16:quantum/rgblight.c **** #include <math.h>
  17:quantum/rgblight.c **** #include <string.h>
  18:quantum/rgblight.c **** #include <stdlib.h>
  19:quantum/rgblight.c **** #ifdef __AVR__
  20:quantum/rgblight.c **** #    include <avr/eeprom.h>
  21:quantum/rgblight.c **** #    include <avr/interrupt.h>
  22:quantum/rgblight.c **** #endif
  23:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
  24:quantum/rgblight.c **** #    include "eeprom.h"
  25:quantum/rgblight.c **** #endif
  26:quantum/rgblight.c **** #ifdef STM32_EEPROM_ENABLE
  27:quantum/rgblight.c **** #    include <hal.h>
  28:quantum/rgblight.c **** #    include "eeprom_stm32.h"
  29:quantum/rgblight.c **** #endif
  30:quantum/rgblight.c **** #include "wait.h"
  31:quantum/rgblight.c **** #include "progmem.h"
  32:quantum/rgblight.c **** #include "sync_timer.h"
  33:quantum/rgblight.c **** #include "rgblight.h"
  34:quantum/rgblight.c **** #include "color.h"
  35:quantum/rgblight.c **** #include "debug.h"
  36:quantum/rgblight.c **** #include "led_tables.h"
  37:quantum/rgblight.c **** #include <lib/lib8tion/lib8tion.h>
  38:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
  39:quantum/rgblight.c **** #    include "velocikey.h"
  40:quantum/rgblight.c **** #endif
  41:quantum/rgblight.c **** 
  42:quantum/rgblight.c **** #ifndef MIN
  43:quantum/rgblight.c **** #    define MIN(a, b) (((a) < (b)) ? (a) : (b))
  44:quantum/rgblight.c **** #endif
  45:quantum/rgblight.c **** #ifndef MAX
  46:quantum/rgblight.c **** #    define MAX(a, b) (((a) > (b)) ? (a) : (b))
  47:quantum/rgblight.c **** #endif
  48:quantum/rgblight.c **** 
  49:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
  50:quantum/rgblight.c **** /* for split keyboard */
  51:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_M
  52:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_H
  53:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS rgblight_status.change_flags |= (RGBLIGHT_STATUS_CHA
  54:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_LAYERS rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE
  55:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE rgblight_status.change_flags |= RGBLIGHT_STATUS_
  56:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK rgblight_status.change_flags |= RGBLIGHT_STATUS_ANIMATION
  57:quantum/rgblight.c **** #else
  58:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE
  59:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS
  60:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS
  61:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_LAYERS
  62:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE
  63:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK
  64:quantum/rgblight.c **** #endif
  65:quantum/rgblight.c **** 
  66:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  67:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym)
  68:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  69:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym)
  70:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##sym,
  71:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym)
  72:quantum/rgblight.c **** static uint8_t static_effect_table[] = {
  73:quantum/rgblight.c **** #include "rgblight_modes.h"
  74:quantum/rgblight.c **** };
  75:quantum/rgblight.c **** 
  76:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  77:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  78:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  79:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  80:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##msym,
  81:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym) RGBLIGHT_MODE_##msym,
  82:quantum/rgblight.c **** static uint8_t mode_base_table[] = {
  83:quantum/rgblight.c ****     0,  // RGBLIGHT_MODE_zero
  84:quantum/rgblight.c **** #include "rgblight_modes.h"
  85:quantum/rgblight.c **** };
  86:quantum/rgblight.c **** 
  87:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_MODE)
  88:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_MODE RGBLIGHT_MODE_STATIC_LIGHT
  89:quantum/rgblight.c **** #endif
  90:quantum/rgblight.c **** 
  91:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_HUE)
  92:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_HUE 0
  93:quantum/rgblight.c **** #endif
  94:quantum/rgblight.c **** 
  95:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_SAT)
  96:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_SAT UINT8_MAX
  97:quantum/rgblight.c **** #endif
  98:quantum/rgblight.c **** 
  99:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_VAL)
 100:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_VAL RGBLIGHT_LIMIT_VAL
 101:quantum/rgblight.c **** #endif
 102:quantum/rgblight.c **** 
 103:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_SPD)
 104:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_SPD 0
 105:quantum/rgblight.c **** #endif
 106:quantum/rgblight.c **** 
 107:quantum/rgblight.c **** static inline int is_static_effect(uint8_t mode) { return memchr(static_effect_table, mode, sizeof(
 108:quantum/rgblight.c **** 
 109:quantum/rgblight.c **** #ifdef RGBLIGHT_LED_MAP
 110:quantum/rgblight.c **** const uint8_t led_map[] PROGMEM = RGBLIGHT_LED_MAP;
 111:quantum/rgblight.c **** #endif
 112:quantum/rgblight.c **** 
 113:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
 114:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_GRADIENT_RANGES[] PROGMEM = {255, 170, 127, 85, 64};
 115:quantum/rgblight.c **** #endif
 116:quantum/rgblight.c **** 
 117:quantum/rgblight.c **** rgblight_config_t rgblight_config;
 118:quantum/rgblight.c **** rgblight_status_t rgblight_status         = {.timer_enabled = false};
 119:quantum/rgblight.c **** bool              is_rgblight_initialized = false;
 120:quantum/rgblight.c **** 
 121:quantum/rgblight.c **** #ifdef RGBLIGHT_SLEEP
 122:quantum/rgblight.c **** static bool is_suspended;
 123:quantum/rgblight.c **** static bool pre_suspend_enabled;
 124:quantum/rgblight.c **** #endif
 125:quantum/rgblight.c **** 
 126:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 127:quantum/rgblight.c **** animation_status_t animation_status = {};
 128:quantum/rgblight.c **** #endif
 129:quantum/rgblight.c **** 
 130:quantum/rgblight.c **** #ifndef LED_ARRAY
 131:quantum/rgblight.c **** LED_TYPE led[RGBLED_NUM];
 132:quantum/rgblight.c **** #    define LED_ARRAY led
 133:quantum/rgblight.c **** #endif
 134:quantum/rgblight.c **** 
 135:quantum/rgblight.c **** #ifdef RGBLIGHT_LAYERS
 136:quantum/rgblight.c **** rgblight_segment_t const *const *rgblight_layers = NULL;
 137:quantum/rgblight.c **** #endif
 138:quantum/rgblight.c **** 
 139:quantum/rgblight.c **** rgblight_ranges_t rgblight_ranges = {0, RGBLED_NUM, 0, RGBLED_NUM, RGBLED_NUM};
 140:quantum/rgblight.c **** 
 141:quantum/rgblight.c **** void rgblight_set_clipping_range(uint8_t start_pos, uint8_t num_leds) {
 142:quantum/rgblight.c ****     rgblight_ranges.clipping_start_pos = start_pos;
 143:quantum/rgblight.c ****     rgblight_ranges.clipping_num_leds  = num_leds;
 144:quantum/rgblight.c **** }
 145:quantum/rgblight.c **** 
 146:quantum/rgblight.c **** void rgblight_set_effect_range(uint8_t start_pos, uint8_t num_leds) {
 147:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
 148:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
 149:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
 150:quantum/rgblight.c ****     rgblight_ranges.effect_end_pos   = start_pos + num_leds;
 151:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
 152:quantum/rgblight.c **** }
 153:quantum/rgblight.c **** 
 154:quantum/rgblight.c **** __attribute__((weak)) RGB rgblight_hsv_to_rgb(HSV hsv) { return hsv_to_rgb(hsv); }
 155:quantum/rgblight.c **** 
 156:quantum/rgblight.c **** void sethsv_raw(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) {
 157:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 158:quantum/rgblight.c ****     RGB rgb = rgblight_hsv_to_rgb(hsv);
 159:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 160:quantum/rgblight.c **** }
 161:quantum/rgblight.c **** 
 162:quantum/rgblight.c **** void sethsv(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) { sethsv_raw(hue, sat, val > RGB
 163:quantum/rgblight.c **** 
 164:quantum/rgblight.c **** void setrgb(uint8_t r, uint8_t g, uint8_t b, LED_TYPE *led1) {
 165:quantum/rgblight.c ****     led1->r = r;
 166:quantum/rgblight.c ****     led1->g = g;
 167:quantum/rgblight.c ****     led1->b = b;
 168:quantum/rgblight.c **** #ifdef RGBW
 169:quantum/rgblight.c ****     led1->w = 0;
 170:quantum/rgblight.c **** #endif
 171:quantum/rgblight.c **** }
 172:quantum/rgblight.c **** 
 173:quantum/rgblight.c **** void rgblight_check_config(void) {
 174:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 175:quantum/rgblight.c **** 
 176:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 177:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 178:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 179:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 180:quantum/rgblight.c ****     }
 181:quantum/rgblight.c **** 
 182:quantum/rgblight.c ****     if (rgblight_config.val > RGBLIGHT_LIMIT_VAL) {
 183:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 184:quantum/rgblight.c ****     }
 185:quantum/rgblight.c **** }
 186:quantum/rgblight.c **** 
 187:quantum/rgblight.c **** uint32_t eeconfig_read_rgblight(void) {
 188:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 189:quantum/rgblight.c ****     return eeprom_read_dword(EECONFIG_RGBLIGHT);
 190:quantum/rgblight.c **** #else
 191:quantum/rgblight.c ****     return 0;
 192:quantum/rgblight.c **** #endif
 193:quantum/rgblight.c **** }
 194:quantum/rgblight.c **** 
 195:quantum/rgblight.c **** void eeconfig_update_rgblight(uint32_t val) {
 196:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 197:quantum/rgblight.c ****     rgblight_check_config();
 198:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 199:quantum/rgblight.c **** #endif
 200:quantum/rgblight.c **** }
 201:quantum/rgblight.c **** 
 202:quantum/rgblight.c **** void eeconfig_update_rgblight_current(void) { eeconfig_update_rgblight(rgblight_config.raw); }
 203:quantum/rgblight.c **** 
 204:quantum/rgblight.c **** void eeconfig_update_rgblight_default(void) {
 205:quantum/rgblight.c ****     rgblight_config.enable = 1;
 206:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_DEFAULT_MODE;
 207:quantum/rgblight.c ****     rgblight_config.hue    = RGBLIGHT_DEFAULT_HUE;
 208:quantum/rgblight.c ****     rgblight_config.sat    = RGBLIGHT_DEFAULT_SAT;
 209:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_DEFAULT_VAL;
 210:quantum/rgblight.c ****     rgblight_config.speed  = RGBLIGHT_DEFAULT_SPD;
 211:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 212:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 213:quantum/rgblight.c **** }
 214:quantum/rgblight.c **** 
 215:quantum/rgblight.c **** void eeconfig_debug_rgblight(void) {
 216:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 217:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 218:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 219:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 220:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 221:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 222:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 223:quantum/rgblight.c **** }
 224:quantum/rgblight.c **** 
 225:quantum/rgblight.c **** void rgblight_init(void) {
 226:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 227:quantum/rgblight.c ****        If you must do it again, extern this and set to false, first.
 228:quantum/rgblight.c ****        This is a dirty, dirty hack until proper hooks can be added for keyboard startup. */
 229:quantum/rgblight.c ****     if (is_rgblight_initialized) {
 230:quantum/rgblight.c ****         return;
 231:quantum/rgblight.c ****     }
 232:quantum/rgblight.c **** 
 233:quantum/rgblight.c ****     dprintf("rgblight_init called.\n");
 234:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 235:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 236:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 237:quantum/rgblight.c ****         eeconfig_init();
 238:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 239:quantum/rgblight.c ****     }
 240:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 241:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 242:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 243:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 244:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 245:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 246:quantum/rgblight.c ****     }
 247:quantum/rgblight.c ****     rgblight_check_config();
 248:quantum/rgblight.c **** 
 249:quantum/rgblight.c ****     eeconfig_debug_rgblight();  // display current eeprom values
 250:quantum/rgblight.c **** 
 251:quantum/rgblight.c ****     rgblight_timer_init();  // setup the timer
 252:quantum/rgblight.c **** 
 253:quantum/rgblight.c ****     if (rgblight_config.enable) {
 254:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 255:quantum/rgblight.c ****     }
 256:quantum/rgblight.c **** 
 257:quantum/rgblight.c ****     is_rgblight_initialized = true;
 258:quantum/rgblight.c **** }
 259:quantum/rgblight.c **** 
 260:quantum/rgblight.c **** void rgblight_reload_from_eeprom(void) {
 261:quantum/rgblight.c ****     /* Reset back to what we have in eeprom */
 262:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 263:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 264:quantum/rgblight.c ****     rgblight_check_config();
 265:quantum/rgblight.c ****     eeconfig_debug_rgblight();  // display current eeprom values
 266:quantum/rgblight.c ****     if (rgblight_config.enable) {
 267:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 268:quantum/rgblight.c ****     }
 269:quantum/rgblight.c **** }
 270:quantum/rgblight.c **** 
 271:quantum/rgblight.c **** uint32_t rgblight_read_dword(void) { return rgblight_config.raw; }
 272:quantum/rgblight.c **** 
 273:quantum/rgblight.c **** void rgblight_update_dword(uint32_t dword) {
 274:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 275:quantum/rgblight.c ****     rgblight_config.raw = dword;
 276:quantum/rgblight.c ****     if (rgblight_config.enable)
 277:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 278:quantum/rgblight.c ****     else {
 279:quantum/rgblight.c ****         rgblight_timer_disable();
 280:quantum/rgblight.c ****         rgblight_set();
 281:quantum/rgblight.c ****     }
 282:quantum/rgblight.c **** }
 283:quantum/rgblight.c **** 
 284:quantum/rgblight.c **** void rgblight_increase(void) {
 285:quantum/rgblight.c ****     uint8_t mode = 0;
 286:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 287:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 288:quantum/rgblight.c ****     }
 289:quantum/rgblight.c ****     rgblight_mode(mode);
 290:quantum/rgblight.c **** }
 291:quantum/rgblight.c **** void rgblight_decrease(void) {
 292:quantum/rgblight.c ****     uint8_t mode = 0;
 293:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 294:quantum/rgblight.c ****     if (rgblight_config.mode > RGBLIGHT_MODE_STATIC_LIGHT) {
 295:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 296:quantum/rgblight.c ****     }
 297:quantum/rgblight.c ****     rgblight_mode(mode);
 298:quantum/rgblight.c **** }
 299:quantum/rgblight.c **** void rgblight_step_helper(bool write_to_eeprom) {
 300:quantum/rgblight.c ****     uint8_t mode = 0;
 301:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 302:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 303:quantum/rgblight.c ****         mode = 1;
 304:quantum/rgblight.c ****     }
 305:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 306:quantum/rgblight.c **** }
 307:quantum/rgblight.c **** void rgblight_step_noeeprom(void) { rgblight_step_helper(false); }
 308:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 309:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 310:quantum/rgblight.c ****     uint8_t mode = 0;
 311:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 312:quantum/rgblight.c ****     if (mode < 1) {
 313:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 314:quantum/rgblight.c ****     }
 315:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 316:quantum/rgblight.c **** }
 317:quantum/rgblight.c **** void rgblight_step_reverse_noeeprom(void) { rgblight_step_reverse_helper(false); }
 318:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 319:quantum/rgblight.c **** 
 320:quantum/rgblight.c **** uint8_t rgblight_get_mode(void) {
 321:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 322:quantum/rgblight.c ****         return false;
 323:quantum/rgblight.c ****     }
 324:quantum/rgblight.c **** 
 325:quantum/rgblight.c ****     return rgblight_config.mode;
 326:quantum/rgblight.c **** }
 327:quantum/rgblight.c **** 
 328:quantum/rgblight.c **** void rgblight_mode_eeprom_helper(uint8_t mode, bool write_to_eeprom) {
 329:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 330:quantum/rgblight.c ****         return;
 331:quantum/rgblight.c ****     }
 332:quantum/rgblight.c ****     if (mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 333:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 334:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 335:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 336:quantum/rgblight.c ****     } else {
 337:quantum/rgblight.c ****         rgblight_config.mode = mode;
 338:quantum/rgblight.c ****     }
 339:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 340:quantum/rgblight.c ****     if (write_to_eeprom) {
 341:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 342:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 343:quantum/rgblight.c ****     } else {
 344:quantum/rgblight.c ****         dprintf("rgblight mode [NOEEPROM]: %u\n", rgblight_config.mode);
 345:quantum/rgblight.c ****     }
 346:quantum/rgblight.c ****     if (is_static_effect(rgblight_config.mode)) {
 347:quantum/rgblight.c ****         rgblight_timer_disable();
 348:quantum/rgblight.c ****     } else {
 349:quantum/rgblight.c ****         rgblight_timer_enable();
 350:quantum/rgblight.c ****     }
 351:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 352:quantum/rgblight.c ****     animation_status.restart = true;
 353:quantum/rgblight.c **** #endif
 354:quantum/rgblight.c ****     rgblight_sethsv_noeeprom(rgblight_config.hue, rgblight_config.sat, rgblight_config.val);
 355:quantum/rgblight.c **** }
 356:quantum/rgblight.c **** 
 357:quantum/rgblight.c **** void rgblight_mode(uint8_t mode) { rgblight_mode_eeprom_helper(mode, true); }
 358:quantum/rgblight.c **** 
 359:quantum/rgblight.c **** void rgblight_mode_noeeprom(uint8_t mode) { rgblight_mode_eeprom_helper(mode, false); }
 360:quantum/rgblight.c **** 
 361:quantum/rgblight.c **** void rgblight_toggle(void) {
 362:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 363:quantum/rgblight.c ****     if (rgblight_config.enable) {
 364:quantum/rgblight.c ****         rgblight_disable();
 365:quantum/rgblight.c ****     } else {
 366:quantum/rgblight.c ****         rgblight_enable();
 367:quantum/rgblight.c ****     }
 368:quantum/rgblight.c **** }
 369:quantum/rgblight.c **** 
 370:quantum/rgblight.c **** void rgblight_toggle_noeeprom(void) {
 371:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 372:quantum/rgblight.c ****     if (rgblight_config.enable) {
 373:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 374:quantum/rgblight.c ****     } else {
 375:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 376:quantum/rgblight.c ****     }
 377:quantum/rgblight.c **** }
 378:quantum/rgblight.c **** 
 379:quantum/rgblight.c **** void rgblight_enable(void) {
 380:quantum/rgblight.c ****     rgblight_config.enable = 1;
 381:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 382:quantum/rgblight.c ****     // eeconfig_update_rgblight(rgblight_config.raw);
 383:quantum/rgblight.c ****     dprintf("rgblight enable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 384:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 385:quantum/rgblight.c **** }
 386:quantum/rgblight.c **** 
 387:quantum/rgblight.c **** void rgblight_enable_noeeprom(void) {
 388:quantum/rgblight.c ****     rgblight_config.enable = 1;
 389:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 390:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 391:quantum/rgblight.c **** }
 392:quantum/rgblight.c **** 
 393:quantum/rgblight.c **** void rgblight_disable(void) {
 394:quantum/rgblight.c ****     rgblight_config.enable = 0;
 395:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 396:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 397:quantum/rgblight.c ****     rgblight_timer_disable();
 398:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 399:quantum/rgblight.c ****     wait_ms(50);
 400:quantum/rgblight.c ****     rgblight_set();
 401:quantum/rgblight.c **** }
 402:quantum/rgblight.c **** 
 403:quantum/rgblight.c **** void rgblight_disable_noeeprom(void) {
 404:quantum/rgblight.c ****     rgblight_config.enable = 0;
 405:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 406:quantum/rgblight.c ****     rgblight_timer_disable();
 407:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 408:quantum/rgblight.c ****     wait_ms(50);
 409:quantum/rgblight.c ****     rgblight_set();
 410:quantum/rgblight.c **** }
 411:quantum/rgblight.c **** 
 412:quantum/rgblight.c **** bool rgblight_is_enabled(void) { return rgblight_config.enable; }
 413:quantum/rgblight.c **** 
 414:quantum/rgblight.c **** void rgblight_increase_hue_helper(bool write_to_eeprom) {
 415:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 416:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 417:quantum/rgblight.c **** }
 418:quantum/rgblight.c **** void rgblight_increase_hue_noeeprom(void) { rgblight_increase_hue_helper(false); }
 419:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 420:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 421:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 422:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 423:quantum/rgblight.c **** }
 424:quantum/rgblight.c **** void rgblight_decrease_hue_noeeprom(void) { rgblight_decrease_hue_helper(false); }
 425:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 426:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 427:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 428:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 429:quantum/rgblight.c **** }
 430:quantum/rgblight.c **** void rgblight_increase_sat_noeeprom(void) { rgblight_increase_sat_helper(false); }
 431:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 432:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 433:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 434:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 435:quantum/rgblight.c **** }
 436:quantum/rgblight.c **** void rgblight_decrease_sat_noeeprom(void) { rgblight_decrease_sat_helper(false); }
 437:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 438:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 439:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 440:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 441:quantum/rgblight.c **** }
 442:quantum/rgblight.c **** void rgblight_increase_val_noeeprom(void) { rgblight_increase_val_helper(false); }
 443:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 444:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 445:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 446:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 447:quantum/rgblight.c **** }
 448:quantum/rgblight.c **** void rgblight_decrease_val_noeeprom(void) { rgblight_decrease_val_helper(false); }
 449:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 450:quantum/rgblight.c **** 
 451:quantum/rgblight.c **** void rgblight_increase_speed_helper(bool write_to_eeprom) {
 452:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 453:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 454:quantum/rgblight.c ****     if (write_to_eeprom) {
 455:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 456:quantum/rgblight.c ****     }
 457:quantum/rgblight.c **** }
 458:quantum/rgblight.c **** void rgblight_increase_speed(void) { rgblight_increase_speed_helper(true); }
 459:quantum/rgblight.c **** void rgblight_increase_speed_noeeprom(void) { rgblight_increase_speed_helper(false); }
 460:quantum/rgblight.c **** 
 461:quantum/rgblight.c **** void rgblight_decrease_speed_helper(bool write_to_eeprom) {
 462:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 463:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 464:quantum/rgblight.c ****     if (write_to_eeprom) {
 465:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 466:quantum/rgblight.c ****     }
 467:quantum/rgblight.c **** }
 468:quantum/rgblight.c **** void rgblight_decrease_speed(void) { rgblight_decrease_speed_helper(true); }
 469:quantum/rgblight.c **** void rgblight_decrease_speed_noeeprom(void) { rgblight_decrease_speed_helper(false); }
 470:quantum/rgblight.c **** 
 471:quantum/rgblight.c **** void rgblight_sethsv_noeeprom_old(uint8_t hue, uint8_t sat, uint8_t val) {
 472:quantum/rgblight.c ****     if (rgblight_config.enable) {
 473:quantum/rgblight.c ****         LED_TYPE tmp_led;
 474:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 475:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 476:quantum/rgblight.c ****     }
 477:quantum/rgblight.c **** }
 478:quantum/rgblight.c **** 
 479:quantum/rgblight.c **** void rgblight_sethsv_eeprom_helper(uint8_t hue, uint8_t sat, uint8_t val, bool write_to_eeprom) {
 480:quantum/rgblight.c ****     if (rgblight_config.enable) {
 481:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 482:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 483:quantum/rgblight.c ****             // same static color
 484:quantum/rgblight.c ****             LED_TYPE tmp_led;
 485:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 486:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 487:quantum/rgblight.c ****         } else {
 488:quantum/rgblight.c ****             // all LEDs in same color
 489:quantum/rgblight.c ****             if (1 == 0) {  // dummy
 490:quantum/rgblight.c ****             }
 491:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 492:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 493:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 494:quantum/rgblight.c ****                 val = rgblight_config.val;
 495:quantum/rgblight.c ****             }
 496:quantum/rgblight.c **** #endif
 497:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 498:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 499:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 500:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 501:quantum/rgblight.c ****             }
 502:quantum/rgblight.c **** #endif
 503:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 504:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 505:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 506:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 507:quantum/rgblight.c ****             }
 508:quantum/rgblight.c **** #endif
 509:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
 510:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_STATIC_GRADIENT) {
 511:quantum/rgblight.c ****                 // static gradient
 512:quantum/rgblight.c ****                 uint8_t delta     = rgblight_config.mode - rgblight_status.base_mode;
 513:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 514:quantum/rgblight.c **** #    ifdef __AVR__
 515:quantum/rgblight.c ****                 // probably due to how pgm_read_word is defined for ARM, but the ARM compiler reall
 516:quantum/rgblight.c ****                 uint8_t range = pgm_read_word(&RGBLED_GRADIENT_RANGES[delta / 2]);
 517:quantum/rgblight.c **** #    else
 518:quantum/rgblight.c ****                 uint8_t range = RGBLED_GRADIENT_RANGES[delta / 2];
 519:quantum/rgblight.c **** #    endif
 520:quantum/rgblight.c ****                 for (uint8_t i = 0; i < rgblight_ranges.effect_num_leds; i++) {
 521:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 522:quantum/rgblight.c ****                     if (direction) {
 523:quantum/rgblight.c ****                         _hue = hue + _hue;
 524:quantum/rgblight.c ****                     } else {
 525:quantum/rgblight.c ****                         _hue = hue - _hue;
 526:quantum/rgblight.c ****                     }
 527:quantum/rgblight.c ****                     dprintf("rgblight rainbow set hsv: %d,%d,%d,%u\n", i, _hue, direction, range);
 528:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_start_pos]);
 529:quantum/rgblight.c ****                 }
 530:quantum/rgblight.c ****                 rgblight_set();
 531:quantum/rgblight.c ****             }
 532:quantum/rgblight.c **** #endif
 533:quantum/rgblight.c ****         }
 534:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 535:quantum/rgblight.c ****         if (rgblight_config.hue != hue || rgblight_config.sat != sat || rgblight_config.val != val)
 536:quantum/rgblight.c ****             RGBLIGHT_SPLIT_SET_CHANGE_HSVS;
 537:quantum/rgblight.c ****         }
 538:quantum/rgblight.c **** #endif
 539:quantum/rgblight.c ****         rgblight_config.hue = hue;
 540:quantum/rgblight.c ****         rgblight_config.sat = sat;
 541:quantum/rgblight.c ****         rgblight_config.val = val;
 542:quantum/rgblight.c ****         if (write_to_eeprom) {
 543:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 544:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 545:quantum/rgblight.c ****         } else {
 546:quantum/rgblight.c ****             dprintf("rgblight set hsv [NOEEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config
 547:quantum/rgblight.c ****         }
 548:quantum/rgblight.c ****     }
 549:quantum/rgblight.c **** }
 550:quantum/rgblight.c **** 
 551:quantum/rgblight.c **** void rgblight_sethsv(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helper(hue, sa
 552:quantum/rgblight.c **** 
 553:quantum/rgblight.c **** void rgblight_sethsv_noeeprom(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helpe
 554:quantum/rgblight.c **** 
 555:quantum/rgblight.c **** uint8_t rgblight_get_speed(void) { return rgblight_config.speed; }
 556:quantum/rgblight.c **** 
 557:quantum/rgblight.c **** void rgblight_set_speed_eeprom_helper(uint8_t speed, bool write_to_eeprom) {
 558:quantum/rgblight.c ****     rgblight_config.speed = speed;
 559:quantum/rgblight.c ****     if (write_to_eeprom) {
 560:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 561:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 562:quantum/rgblight.c ****     } else {
 563:quantum/rgblight.c ****         dprintf("rgblight set speed [NOEEPROM]: %u\n", rgblight_config.speed);
 564:quantum/rgblight.c ****     }
 565:quantum/rgblight.c **** }
 566:quantum/rgblight.c **** 
 567:quantum/rgblight.c **** void rgblight_set_speed(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, true); }
 568:quantum/rgblight.c **** 
 569:quantum/rgblight.c **** void rgblight_set_speed_noeeprom(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, false); }
 570:quantum/rgblight.c **** 
 571:quantum/rgblight.c **** uint8_t rgblight_get_hue(void) { return rgblight_config.hue; }
 572:quantum/rgblight.c **** 
 573:quantum/rgblight.c **** uint8_t rgblight_get_sat(void) { return rgblight_config.sat; }
 574:quantum/rgblight.c **** 
 575:quantum/rgblight.c **** uint8_t rgblight_get_val(void) { return rgblight_config.val; }
 576:quantum/rgblight.c **** 
 577:quantum/rgblight.c **** HSV rgblight_get_hsv(void) { return (HSV){rgblight_config.hue, rgblight_config.sat, rgblight_config
 578:quantum/rgblight.c **** 
 579:quantum/rgblight.c **** void rgblight_setrgb(uint8_t r, uint8_t g, uint8_t b) {
 580:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 581:quantum/rgblight.c ****         return;
 582:quantum/rgblight.c ****     }
 583:quantum/rgblight.c **** 
 584:quantum/rgblight.c ****     for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++) {
 585:quantum/rgblight.c ****         led[i].r = r;
 586:quantum/rgblight.c ****         led[i].g = g;
 587:quantum/rgblight.c ****         led[i].b = b;
 588:quantum/rgblight.c **** #ifdef RGBW
 589:quantum/rgblight.c ****         led[i].w = 0;
 590:quantum/rgblight.c **** #endif
 591:quantum/rgblight.c ****     }
 592:quantum/rgblight.c ****     rgblight_set();
 593:quantum/rgblight.c **** }
 594:quantum/rgblight.c **** 
 595:quantum/rgblight.c **** void rgblight_setrgb_at(uint8_t r, uint8_t g, uint8_t b, uint8_t index) {
 596:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 597:quantum/rgblight.c ****         return;
 598:quantum/rgblight.c ****     }
 599:quantum/rgblight.c **** 
 600:quantum/rgblight.c ****     led[index].r = r;
 601:quantum/rgblight.c ****     led[index].g = g;
 602:quantum/rgblight.c ****     led[index].b = b;
 603:quantum/rgblight.c **** #ifdef RGBW
 604:quantum/rgblight.c ****     led[index].w = 0;
 605:quantum/rgblight.c **** #endif
 606:quantum/rgblight.c ****     rgblight_set();
 607:quantum/rgblight.c **** }
 608:quantum/rgblight.c **** 
 609:quantum/rgblight.c **** void rgblight_sethsv_at(uint8_t hue, uint8_t sat, uint8_t val, uint8_t index) {
 610:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 611:quantum/rgblight.c ****         return;
 612:quantum/rgblight.c ****     }
 613:quantum/rgblight.c **** 
 614:quantum/rgblight.c ****     LED_TYPE tmp_led;
 615:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 616:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 617:quantum/rgblight.c **** }
 618:quantum/rgblight.c **** 
 619:quantum/rgblight.c **** #if defined(RGBLIGHT_EFFECT_BREATHING) || defined(RGBLIGHT_EFFECT_RAINBOW_MOOD) || defined(RGBLIGHT
 620:quantum/rgblight.c **** 
 621:quantum/rgblight.c **** static uint8_t get_interval_time(const uint8_t *default_interval_address, uint8_t velocikey_min, ui
 622:quantum/rgblight.c ****     return
 623:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 624:quantum/rgblight.c ****         velocikey_enabled() ? velocikey_match_speed(velocikey_min, velocikey_max) :
 625:quantum/rgblight.c **** #    endif
 626:quantum/rgblight.c ****                             pgm_read_byte(default_interval_address);
 627:quantum/rgblight.c **** }
 628:quantum/rgblight.c **** 
 629:quantum/rgblight.c **** #endif
 630:quantum/rgblight.c **** 
 631:quantum/rgblight.c **** void rgblight_setrgb_range(uint8_t r, uint8_t g, uint8_t b, uint8_t start, uint8_t end) {
 632:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 633:quantum/rgblight.c ****         return;
 634:quantum/rgblight.c ****     }
 635:quantum/rgblight.c **** 
 636:quantum/rgblight.c ****     for (uint8_t i = start; i < end; i++) {
 637:quantum/rgblight.c ****         led[i].r = r;
 638:quantum/rgblight.c ****         led[i].g = g;
 639:quantum/rgblight.c ****         led[i].b = b;
 640:quantum/rgblight.c **** #ifdef RGBW
 641:quantum/rgblight.c ****         led[i].w = 0;
 642:quantum/rgblight.c **** #endif
 643:quantum/rgblight.c ****     }
 644:quantum/rgblight.c ****     rgblight_set();
 645:quantum/rgblight.c ****     wait_ms(1);
 646:quantum/rgblight.c **** }
 647:quantum/rgblight.c **** 
 648:quantum/rgblight.c **** void rgblight_sethsv_range(uint8_t hue, uint8_t sat, uint8_t val, uint8_t start, uint8_t end) {
 649:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 650:quantum/rgblight.c ****         return;
 651:quantum/rgblight.c ****     }
 652:quantum/rgblight.c **** 
 653:quantum/rgblight.c ****     LED_TYPE tmp_led;
 654:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 655:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 656:quantum/rgblight.c **** }
 657:quantum/rgblight.c **** 
 658:quantum/rgblight.c **** #ifndef RGBLIGHT_SPLIT
 659:quantum/rgblight.c **** void rgblight_setrgb_master(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, 0, (u
 660:quantum/rgblight.c **** 
 661:quantum/rgblight.c **** void rgblight_setrgb_slave(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, (uint8
 662:quantum/rgblight.c **** 
 663:quantum/rgblight.c **** void rgblight_sethsv_master(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat
 664:quantum/rgblight.c **** 
 665:quantum/rgblight.c **** void rgblight_sethsv_slave(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat,
 666:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 667:quantum/rgblight.c **** 
 668:quantum/rgblight.c **** #ifdef RGBLIGHT_LAYERS
 669:quantum/rgblight.c **** void rgblight_set_layer_state(uint8_t layer, bool enabled) {
 670:quantum/rgblight.c ****     rgblight_layer_mask_t mask = (rgblight_layer_mask_t)1 << layer;
 671:quantum/rgblight.c ****     if (enabled) {
 672:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask |= mask;
 673:quantum/rgblight.c ****     } else {
 674:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask &= ~mask;
 675:quantum/rgblight.c ****     }
 676:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_LAYERS;
 677:quantum/rgblight.c ****     // Static modes don't have a ticker running to update the LEDs
 678:quantum/rgblight.c ****     if (rgblight_status.timer_enabled == false) {
 679:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 680:quantum/rgblight.c ****     }
 681:quantum/rgblight.c **** 
 682:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS_OVERRIDE_RGB_OFF
 683:quantum/rgblight.c ****     // If not enabled, then nothing else will actually set the LEDs...
 684:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 685:quantum/rgblight.c ****         rgblight_set();
 686:quantum/rgblight.c ****     }
 687:quantum/rgblight.c **** #    endif
 688:quantum/rgblight.c **** }
 689:quantum/rgblight.c **** 
 690:quantum/rgblight.c **** bool rgblight_get_layer_state(uint8_t layer) {
 691:quantum/rgblight.c ****     rgblight_layer_mask_t mask = (rgblight_layer_mask_t)1 << layer;
 692:quantum/rgblight.c ****     return (rgblight_status.enabled_layer_mask & mask) != 0;
 693:quantum/rgblight.c **** }
 694:quantum/rgblight.c **** 
 695:quantum/rgblight.c **** // Write any enabled LED layers into the buffer
 696:quantum/rgblight.c **** static void rgblight_layers_write(void) {
 697:quantum/rgblight.c ****     uint8_t i = 0;
 698:quantum/rgblight.c ****     // For each layer
 699:quantum/rgblight.c ****     for (const rgblight_segment_t *const *layer_ptr = rgblight_layers; i < RGBLIGHT_MAX_LAYERS; lay
 700:quantum/rgblight.c ****         if (!rgblight_get_layer_state(i)) {
 701:quantum/rgblight.c ****             continue;  // Layer is disabled
 702:quantum/rgblight.c ****         }
 703:quantum/rgblight.c ****         const rgblight_segment_t *segment_ptr = pgm_read_ptr(layer_ptr);
 704:quantum/rgblight.c ****         if (segment_ptr == NULL) {
 705:quantum/rgblight.c ****             break;  // No more layers
 706:quantum/rgblight.c ****         }
 707:quantum/rgblight.c ****         // For each segment
 708:quantum/rgblight.c ****         while (1) {
 709:quantum/rgblight.c ****             rgblight_segment_t segment;
 710:quantum/rgblight.c ****             memcpy_P(&segment, segment_ptr, sizeof(rgblight_segment_t));
 711:quantum/rgblight.c ****             if (segment.index == RGBLIGHT_END_SEGMENT_INDEX) {
 712:quantum/rgblight.c ****                 break;  // No more segments
 713:quantum/rgblight.c ****             }
 714:quantum/rgblight.c ****             // Write segment.count LEDs
 715:quantum/rgblight.c ****             LED_TYPE *const limit = &led[MIN(segment.index + segment.count, RGBLED_NUM)];
 716:quantum/rgblight.c ****             for (LED_TYPE *led_ptr = &led[segment.index]; led_ptr < limit; led_ptr++) {
 717:quantum/rgblight.c ****                 sethsv(segment.hue, segment.sat, segment.val, led_ptr);
 718:quantum/rgblight.c ****             }
 719:quantum/rgblight.c ****             segment_ptr++;
 720:quantum/rgblight.c ****         }
 721:quantum/rgblight.c ****     }
 722:quantum/rgblight.c **** }
 723:quantum/rgblight.c **** 
 724:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYER_BLINK
 725:quantum/rgblight.c **** rgblight_layer_mask_t _blinked_layer_mask = 0;
 726:quantum/rgblight.c **** static uint16_t       _blink_timer;
 727:quantum/rgblight.c **** 
 728:quantum/rgblight.c **** void rgblight_blink_layer(uint8_t layer, uint16_t duration_ms) {
 729:quantum/rgblight.c ****     rgblight_set_layer_state(layer, true);
 730:quantum/rgblight.c ****     _blinked_layer_mask |= (rgblight_layer_mask_t)1 << layer;
 731:quantum/rgblight.c ****     _blink_timer = sync_timer_read() + duration_ms;
 732:quantum/rgblight.c **** }
 733:quantum/rgblight.c **** 
 734:quantum/rgblight.c **** void rgblight_unblink_layers(void) {
 735:quantum/rgblight.c ****     if (_blinked_layer_mask != 0 && timer_expired(sync_timer_read(), _blink_timer)) {
 736:quantum/rgblight.c ****         for (uint8_t layer = 0; layer < RGBLIGHT_MAX_LAYERS; layer++) {
 737:quantum/rgblight.c ****             if ((_blinked_layer_mask & (rgblight_layer_mask_t)1 << layer) != 0) {
 738:quantum/rgblight.c ****                 rgblight_set_layer_state(layer, false);
 739:quantum/rgblight.c ****             }
 740:quantum/rgblight.c ****         }
 741:quantum/rgblight.c ****         _blinked_layer_mask = 0;
 742:quantum/rgblight.c ****     }
 743:quantum/rgblight.c **** }
 744:quantum/rgblight.c **** #    endif
 745:quantum/rgblight.c **** 
 746:quantum/rgblight.c **** #endif
 747:quantum/rgblight.c **** 
 748:quantum/rgblight.c **** #ifdef RGBLIGHT_SLEEP
 749:quantum/rgblight.c **** 
 750:quantum/rgblight.c **** void rgblight_suspend(void) {
 751:quantum/rgblight.c ****     rgblight_timer_disable();
 752:quantum/rgblight.c ****     if (!is_suspended) {
 753:quantum/rgblight.c ****         is_suspended        = true;
 754:quantum/rgblight.c ****         pre_suspend_enabled = rgblight_config.enable;
 755:quantum/rgblight.c **** 
 756:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYER_BLINK
 757:quantum/rgblight.c ****         // make sure any layer blinks don't come back after suspend
 758:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask &= ~_blinked_layer_mask;
 759:quantum/rgblight.c ****         _blinked_layer_mask = 0;
 760:quantum/rgblight.c **** #    endif
 761:quantum/rgblight.c **** 
 762:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 763:quantum/rgblight.c ****     }
 764:quantum/rgblight.c **** }
 765:quantum/rgblight.c **** 
 766:quantum/rgblight.c **** void rgblight_wakeup(void) {
 767:quantum/rgblight.c ****     is_suspended = false;
 768:quantum/rgblight.c **** 
 769:quantum/rgblight.c ****     if (pre_suspend_enabled) {
 770:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 771:quantum/rgblight.c ****     }
 772:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS_OVERRIDE_RGB_OFF
 773:quantum/rgblight.c ****     // Need this or else the LEDs won't be set
 774:quantum/rgblight.c ****     else if (rgblight_status.enabled_layer_mask != 0) {
 775:quantum/rgblight.c ****         rgblight_set();
 776:quantum/rgblight.c ****     }
 777:quantum/rgblight.c **** #    endif
 778:quantum/rgblight.c **** 
 779:quantum/rgblight.c ****     rgblight_timer_enable();
 780:quantum/rgblight.c **** }
 781:quantum/rgblight.c **** 
 782:quantum/rgblight.c **** #endif
 783:quantum/rgblight.c **** 
 784:quantum/rgblight.c **** __attribute__((weak)) void rgblight_call_driver(LED_TYPE *start_led, uint8_t num_leds) { ws2812_set
 785:quantum/rgblight.c **** 
 786:quantum/rgblight.c **** #ifndef RGBLIGHT_CUSTOM_DRIVER
 787:quantum/rgblight.c **** 
 788:quantum/rgblight.c **** void rgblight_set(void) {
 789:quantum/rgblight.c ****     LED_TYPE *start_led;
 790:quantum/rgblight.c ****     uint8_t   num_leds = rgblight_ranges.clipping_num_leds;
 791:quantum/rgblight.c **** 
 792:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 793:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 794:quantum/rgblight.c ****             led[i].r = 0;
 795:quantum/rgblight.c ****             led[i].g = 0;
 796:quantum/rgblight.c ****             led[i].b = 0;
 797:quantum/rgblight.c **** #    ifdef RGBW
 798:quantum/rgblight.c ****             led[i].w = 0;
 799:quantum/rgblight.c **** #    endif
 800:quantum/rgblight.c ****         }
 801:quantum/rgblight.c ****     }
 802:quantum/rgblight.c **** 
 803:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS
 804:quantum/rgblight.c ****     if (rgblight_layers != NULL
 805:quantum/rgblight.c **** #        if !defined(RGBLIGHT_LAYERS_OVERRIDE_RGB_OFF)
 806:quantum/rgblight.c ****         && rgblight_config.enable
 807:quantum/rgblight.c **** #        elif defined(RGBLIGHT_SLEEP)
 808:quantum/rgblight.c ****         && !is_suspended
 809:quantum/rgblight.c **** #        endif
 810:quantum/rgblight.c ****     ) {
 811:quantum/rgblight.c ****         rgblight_layers_write();
 812:quantum/rgblight.c ****     }
 813:quantum/rgblight.c **** #    endif
 814:quantum/rgblight.c **** 
 815:quantum/rgblight.c **** #    ifdef RGBLIGHT_LED_MAP
 816:quantum/rgblight.c ****     LED_TYPE led0[RGBLED_NUM];
 817:quantum/rgblight.c ****     for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 818:quantum/rgblight.c ****         led0[i] = led[pgm_read_byte(&led_map[i])];
 819:quantum/rgblight.c ****     }
 820:quantum/rgblight.c ****     start_led = led0 + rgblight_ranges.clipping_start_pos;
 821:quantum/rgblight.c **** #    else
 822:quantum/rgblight.c ****     start_led = led + rgblight_ranges.clipping_start_pos;
 823:quantum/rgblight.c **** #    endif
 824:quantum/rgblight.c **** 
 825:quantum/rgblight.c **** #    ifdef RGBW
 826:quantum/rgblight.c ****     for (uint8_t i = 0; i < num_leds; i++) {
 827:quantum/rgblight.c ****         convert_rgb_to_rgbw(&start_led[i]);
 828:quantum/rgblight.c ****     }
 829:quantum/rgblight.c **** #    endif
 830:quantum/rgblight.c ****     rgblight_call_driver(start_led, num_leds);
 831:quantum/rgblight.c **** }
 832:quantum/rgblight.c **** #endif
 833:quantum/rgblight.c **** 
 834:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 835:quantum/rgblight.c **** /* for split keyboard master side */
 836:quantum/rgblight.c **** uint8_t rgblight_get_change_flags(void) { return rgblight_status.change_flags; }
 837:quantum/rgblight.c **** 
 838:quantum/rgblight.c **** void rgblight_clear_change_flags(void) { rgblight_status.change_flags = 0; }
 839:quantum/rgblight.c **** 
 840:quantum/rgblight.c **** void rgblight_get_syncinfo(rgblight_syncinfo_t *syncinfo) {
 841:quantum/rgblight.c ****     syncinfo->config = rgblight_config;
 842:quantum/rgblight.c ****     syncinfo->status = rgblight_status;
 843:quantum/rgblight.c **** }
 844:quantum/rgblight.c **** 
 845:quantum/rgblight.c **** /* for split keyboard slave side */
 846:quantum/rgblight.c **** void rgblight_update_sync(rgblight_syncinfo_t *syncinfo, bool write_to_eeprom) {
 847:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS
 848:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_LAYERS) {
 849:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask = syncinfo->status.enabled_layer_mask;
 850:quantum/rgblight.c ****     }
 851:quantum/rgblight.c **** #    endif
 852:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_MODE) {
 853:quantum/rgblight.c ****         if (syncinfo->config.enable) {
 854:quantum/rgblight.c ****             rgblight_config.enable = 1;  // == rgblight_enable_noeeprom();
 855:quantum/rgblight.c ****             rgblight_mode_eeprom_helper(syncinfo->config.mode, write_to_eeprom);
 856:quantum/rgblight.c ****         } else {
 857:quantum/rgblight.c ****             rgblight_disable_noeeprom();
 858:quantum/rgblight.c ****         }
 859:quantum/rgblight.c ****     }
 860:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_HSVS) {
 861:quantum/rgblight.c ****         rgblight_sethsv_eeprom_helper(syncinfo->config.hue, syncinfo->config.sat, syncinfo->config.
 862:quantum/rgblight.c ****         // rgblight_config.speed = config->speed; // NEED???
 863:quantum/rgblight.c ****     }
 864:quantum/rgblight.c **** #    ifdef RGBLIGHT_USE_TIMER
 865:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_TIMER) {
 866:quantum/rgblight.c ****         if (syncinfo->status.timer_enabled) {
 867:quantum/rgblight.c ****             rgblight_timer_enable();
 868:quantum/rgblight.c ****         } else {
 869:quantum/rgblight.c ****             rgblight_timer_disable();
 870:quantum/rgblight.c ****         }
 871:quantum/rgblight.c ****     }
 872:quantum/rgblight.c **** #        ifndef RGBLIGHT_SPLIT_NO_ANIMATION_SYNC
 873:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_ANIMATION_TICK) {
 874:quantum/rgblight.c ****         animation_status.restart = true;
 875:quantum/rgblight.c ****     }
 876:quantum/rgblight.c **** #        endif /* RGBLIGHT_SPLIT_NO_ANIMATION_SYNC */
 877:quantum/rgblight.c **** #    endif     /* RGBLIGHT_USE_TIMER */
 878:quantum/rgblight.c **** }
 879:quantum/rgblight.c **** #endif /* RGBLIGHT_SPLIT */
 880:quantum/rgblight.c **** 
 881:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 882:quantum/rgblight.c **** 
 883:quantum/rgblight.c **** typedef void (*effect_func_t)(animation_status_t *anim);
 884:quantum/rgblight.c **** 
 885:quantum/rgblight.c **** // Animation timer -- use system timer (AVR Timer0)
 886:quantum/rgblight.c **** void rgblight_timer_init(void) {
 887:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 888:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 889:quantum/rgblight.c **** }
 890:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 891:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 892:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 893:quantum/rgblight.c ****     }
 894:quantum/rgblight.c ****     animation_status.last_timer = sync_timer_read();
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 896:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 897:quantum/rgblight.c **** }
 898:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 899:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 900:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 901:quantum/rgblight.c ****     dprintf("rgblight timer disable.\n");
 902:quantum/rgblight.c **** }
 903:quantum/rgblight.c **** void rgblight_timer_toggle(void) {
 904:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 905:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 906:quantum/rgblight.c ****         rgblight_timer_disable();
 907:quantum/rgblight.c ****     } else {
 908:quantum/rgblight.c ****         rgblight_timer_enable();
 909:quantum/rgblight.c ****     }
 910:quantum/rgblight.c **** }
 911:quantum/rgblight.c **** 
 912:quantum/rgblight.c **** void rgblight_show_solid_color(uint8_t r, uint8_t g, uint8_t b) {
 913:quantum/rgblight.c ****     rgblight_enable();
 914:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 915:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 916:quantum/rgblight.c **** }
 917:quantum/rgblight.c **** 
 918:quantum/rgblight.c **** static void rgblight_effect_dummy(animation_status_t *anim) {
  16               		.loc 1 918 61 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 919:quantum/rgblight.c ****     // do nothing
 920:quantum/rgblight.c ****     /********
 921:quantum/rgblight.c ****     dprintf("rgblight_task() what happened?\n");
 922:quantum/rgblight.c ****     dprintf("is_static_effect %d\n", is_static_effect(rgblight_config.mode));
 923:quantum/rgblight.c ****     dprintf("mode = %d, base_mode = %d, timer_enabled %d, ",
 924:quantum/rgblight.c ****             rgblight_config.mode, rgblight_status.base_mode,
 925:quantum/rgblight.c ****             rgblight_status.timer_enabled);
 926:quantum/rgblight.c ****     dprintf("last_timer = %d\n",anim->last_timer);
 927:quantum/rgblight.c ****     **/
 928:quantum/rgblight.c **** }
  22               		.loc 1 928 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE174:
  28               		.section	.text.rgblight_set_clipping_range,"ax",@progbits
  29               	.global	rgblight_set_clipping_range
  31               	rgblight_set_clipping_range:
  32               	.LVL1:
  33               	.LFB84:
 141:quantum/rgblight.c ****     rgblight_ranges.clipping_start_pos = start_pos;
  34               		.loc 1 141 71 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
 142:quantum/rgblight.c ****     rgblight_ranges.clipping_num_leds  = num_leds;
  40               		.loc 1 142 5 view .LVU3
 142:quantum/rgblight.c ****     rgblight_ranges.clipping_num_leds  = num_leds;
  41               		.loc 1 142 40 is_stmt 0 view .LVU4
  42 0000 E0E0      		ldi r30,lo8(rgblight_ranges)
  43 0002 F0E0      		ldi r31,hi8(rgblight_ranges)
  44 0004 8083      		st Z,r24
 143:quantum/rgblight.c **** }
  45               		.loc 1 143 5 is_stmt 1 view .LVU5
 143:quantum/rgblight.c **** }
  46               		.loc 1 143 40 is_stmt 0 view .LVU6
  47 0006 6183      		std Z+1,r22
  48               	/* epilogue start */
 144:quantum/rgblight.c **** 
  49               		.loc 1 144 1 view .LVU7
  50 0008 0895      		ret
  51               		.cfi_endproc
  52               	.LFE84:
  54               		.section	.text.rgblight_set_effect_range,"ax",@progbits
  55               	.global	rgblight_set_effect_range
  57               	rgblight_set_effect_range:
  58               	.LVL2:
  59               	.LFB85:
 146:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
  60               		.loc 1 146 69 is_stmt 1 view -0
  61               		.cfi_startproc
  62               	/* prologue: function */
  63               	/* frame size = 0 */
  64               	/* stack size = 0 */
  65               	.L__stack_usage = 0
 147:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  66               		.loc 1 147 5 view .LVU9
 147:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  67               		.loc 1 147 8 is_stmt 0 view .LVU10
  68 0000 8031      		cpi r24,lo8(16)
  69 0002 00F4      		brsh .L3
 148:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
  70               		.loc 1 148 5 is_stmt 1 view .LVU11
 148:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
  71               		.loc 1 148 19 is_stmt 0 view .LVU12
  72 0004 482F      		mov r20,r24
  73 0006 460F      		add r20,r22
  74 0008 5527      		clr r21
  75 000a 551F      		rol r21
 148:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
  76               		.loc 1 148 8 view .LVU13
  77 000c 4131      		cpi r20,17
  78 000e 5105      		cpc r21,__zero_reg__
  79 0010 04F4      		brge .L3
 149:quantum/rgblight.c ****     rgblight_ranges.effect_end_pos   = start_pos + num_leds;
  80               		.loc 1 149 5 is_stmt 1 view .LVU14
 149:quantum/rgblight.c ****     rgblight_ranges.effect_end_pos   = start_pos + num_leds;
  81               		.loc 1 149 38 is_stmt 0 view .LVU15
  82 0012 8093 0000 		sts rgblight_ranges+2,r24
 150:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
  83               		.loc 1 150 5 is_stmt 1 view .LVU16
 150:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
  84               		.loc 1 150 50 is_stmt 0 view .LVU17
  85 0016 860F      		add r24,r22
  86               	.LVL3:
 150:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
  87               		.loc 1 150 38 view .LVU18
  88 0018 8093 0000 		sts rgblight_ranges+3,r24
 151:quantum/rgblight.c **** }
  89               		.loc 1 151 5 is_stmt 1 view .LVU19
 151:quantum/rgblight.c **** }
  90               		.loc 1 151 38 is_stmt 0 view .LVU20
  91 001c 6093 0000 		sts rgblight_ranges+4,r22
  92               	.LVL4:
  93               	.L3:
  94               	/* epilogue start */
 152:quantum/rgblight.c **** 
  95               		.loc 1 152 1 view .LVU21
  96 0020 0895      		ret
  97               		.cfi_endproc
  98               	.LFE85:
 100               		.section	.text.rgblight_hsv_to_rgb,"ax",@progbits
 101               		.weak	rgblight_hsv_to_rgb
 103               	rgblight_hsv_to_rgb:
 104               	.LVL5:
 105               	.LFB86:
 154:quantum/rgblight.c **** 
 106               		.loc 1 154 56 is_stmt 1 view -0
 107               		.cfi_startproc
 108               	/* prologue: function */
 109               	/* frame size = 0 */
 110               	/* stack size = 0 */
 111               	.L__stack_usage = 0
 154:quantum/rgblight.c **** 
 112               		.loc 1 154 58 view .LVU23
 154:quantum/rgblight.c **** 
 113               		.loc 1 154 65 is_stmt 0 view .LVU24
 114 0000 0C94 0000 		jmp hsv_to_rgb
 115               	.LVL6:
 154:quantum/rgblight.c **** 
 116               		.loc 1 154 65 view .LVU25
 117               		.cfi_endproc
 118               	.LFE86:
 120               		.section	.text.sethsv_raw,"ax",@progbits
 121               	.global	sethsv_raw
 123               	sethsv_raw:
 124               	.LVL7:
 125               	.LFB87:
 156:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 126               		.loc 1 156 72 is_stmt 1 view -0
 127               		.cfi_startproc
 156:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 128               		.loc 1 156 72 is_stmt 0 view .LVU27
 129 0000 CF93      		push r28
 130               	.LCFI0:
 131               		.cfi_def_cfa_offset 3
 132               		.cfi_offset 28, -2
 133 0002 DF93      		push r29
 134               	.LCFI1:
 135               		.cfi_def_cfa_offset 4
 136               		.cfi_offset 29, -3
 137               	/* prologue: function */
 138               	/* frame size = 0 */
 139               	/* stack size = 2 */
 140               	.L__stack_usage = 2
 141 0004 762F      		mov r23,r22
 142 0006 E901      		movw r28,r18
 157:quantum/rgblight.c ****     RGB rgb = rgblight_hsv_to_rgb(hsv);
 143               		.loc 1 157 5 is_stmt 1 view .LVU28
 158:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 144               		.loc 1 158 5 view .LVU29
 158:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 145               		.loc 1 158 15 is_stmt 0 view .LVU30
 146 0008 682F      		mov r22,r24
 147               	.LVL8:
 158:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 148               		.loc 1 158 15 view .LVU31
 149 000a 842F      		mov r24,r20
 150               	.LVL9:
 158:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 151               		.loc 1 158 15 view .LVU32
 152 000c 0E94 0000 		call rgblight_hsv_to_rgb
 153               	.LVL10:
 159:quantum/rgblight.c **** }
 154               		.loc 1 159 5 is_stmt 1 view .LVU33
 155               	.LBB20:
 156               	.LBI20:
 164:quantum/rgblight.c ****     led1->r = r;
 157               		.loc 1 164 6 view .LVU34
 158               	.LBB21:
 165:quantum/rgblight.c ****     led1->g = g;
 159               		.loc 1 165 5 view .LVU35
 165:quantum/rgblight.c ****     led1->g = g;
 160               		.loc 1 165 13 is_stmt 0 view .LVU36
 161 0010 7983      		std Y+1,r23
 166:quantum/rgblight.c ****     led1->b = b;
 162               		.loc 1 166 5 is_stmt 1 view .LVU37
 166:quantum/rgblight.c ****     led1->b = b;
 163               		.loc 1 166 13 is_stmt 0 view .LVU38
 164 0012 6883      		st Y,r22
 167:quantum/rgblight.c **** #ifdef RGBW
 165               		.loc 1 167 5 is_stmt 1 view .LVU39
 167:quantum/rgblight.c **** #ifdef RGBW
 166               		.loc 1 167 13 is_stmt 0 view .LVU40
 167 0014 8A83      		std Y+2,r24
 168               	.LVL11:
 169               	/* epilogue start */
 167:quantum/rgblight.c **** #ifdef RGBW
 170               		.loc 1 167 13 view .LVU41
 171               	.LBE21:
 172               	.LBE20:
 160:quantum/rgblight.c **** 
 173               		.loc 1 160 1 view .LVU42
 174 0016 DF91      		pop r29
 175 0018 CF91      		pop r28
 176               	.LVL12:
 160:quantum/rgblight.c **** 
 177               		.loc 1 160 1 view .LVU43
 178 001a 0895      		ret
 179               		.cfi_endproc
 180               	.LFE87:
 182               		.section	.text.sethsv,"ax",@progbits
 183               	.global	sethsv
 185               	sethsv:
 186               	.LVL13:
 187               	.LFB88:
 162:quantum/rgblight.c **** 
 188               		.loc 1 162 68 is_stmt 1 view -0
 189               		.cfi_startproc
 190               	/* prologue: function */
 191               	/* frame size = 0 */
 192               	/* stack size = 0 */
 193               	.L__stack_usage = 0
 162:quantum/rgblight.c **** 
 194               		.loc 1 162 70 view .LVU45
 195 0000 0C94 0000 		jmp sethsv_raw
 196               	.LVL14:
 162:quantum/rgblight.c **** 
 197               		.loc 1 162 70 is_stmt 0 view .LVU46
 198               		.cfi_endproc
 199               	.LFE88:
 201               		.section	.text.setrgb,"ax",@progbits
 202               	.global	setrgb
 204               	setrgb:
 205               	.LVL15:
 206               	.LFB89:
 164:quantum/rgblight.c ****     led1->r = r;
 207               		.loc 1 164 62 is_stmt 1 view -0
 208               		.cfi_startproc
 209               	/* prologue: function */
 210               	/* frame size = 0 */
 211               	/* stack size = 0 */
 212               	.L__stack_usage = 0
 164:quantum/rgblight.c ****     led1->r = r;
 213               		.loc 1 164 62 is_stmt 0 view .LVU48
 214 0000 F901      		movw r30,r18
 165:quantum/rgblight.c ****     led1->g = g;
 215               		.loc 1 165 5 is_stmt 1 view .LVU49
 165:quantum/rgblight.c ****     led1->g = g;
 216               		.loc 1 165 13 is_stmt 0 view .LVU50
 217 0002 8183      		std Z+1,r24
 166:quantum/rgblight.c ****     led1->b = b;
 218               		.loc 1 166 5 is_stmt 1 view .LVU51
 166:quantum/rgblight.c ****     led1->b = b;
 219               		.loc 1 166 13 is_stmt 0 view .LVU52
 220 0004 6083      		st Z,r22
 167:quantum/rgblight.c **** #ifdef RGBW
 221               		.loc 1 167 5 is_stmt 1 view .LVU53
 167:quantum/rgblight.c **** #ifdef RGBW
 222               		.loc 1 167 13 is_stmt 0 view .LVU54
 223 0006 4283      		std Z+2,r20
 224               	/* epilogue start */
 171:quantum/rgblight.c **** 
 225               		.loc 1 171 1 view .LVU55
 226 0008 0895      		ret
 227               		.cfi_endproc
 228               	.LFE89:
 230               		.section	.text.rgblight_check_config,"ax",@progbits
 231               	.global	rgblight_check_config
 233               	rgblight_check_config:
 234               	.LFB90:
 173:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 235               		.loc 1 173 34 is_stmt 1 view -0
 236               		.cfi_startproc
 237               	/* prologue: function */
 238               	/* frame size = 0 */
 239               	/* stack size = 0 */
 240               	.L__stack_usage = 0
 176:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 241               		.loc 1 176 5 view .LVU57
 176:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 242               		.loc 1 176 30 is_stmt 0 view .LVU58
 243 0000 8091 0000 		lds r24,rgblight_config
 244 0004 982F      		mov r25,r24
 245 0006 9E7F      		andi r25,lo8(-2)
 176:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 246               		.loc 1 176 8 view .LVU59
 247 0008 01F4      		brne .L10
 177:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 248               		.loc 1 177 9 is_stmt 1 view .LVU60
 177:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 249               		.loc 1 177 30 is_stmt 0 view .LVU61
 250 000a 8170      		andi r24,lo8(1)
 251 000c 8260      		ori r24,lo8(2)
 252               	.L12:
 179:quantum/rgblight.c ****     }
 253               		.loc 1 179 30 view .LVU62
 254 000e 8093 0000 		sts rgblight_config,r24
 182:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 255               		.loc 1 182 5 is_stmt 1 view .LVU63
 256               	.L9:
 257               	/* epilogue start */
 185:quantum/rgblight.c **** 
 258               		.loc 1 185 1 is_stmt 0 view .LVU64
 259 0012 0895      		ret
 260               	.L10:
 178:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 261               		.loc 1 178 12 is_stmt 1 view .LVU65
 178:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 262               		.loc 1 178 15 is_stmt 0 view .LVU66
 263 0014 8635      		cpi r24,lo8(86)
 264 0016 00F0      		brlo .L9
 179:quantum/rgblight.c ****     }
 265               		.loc 1 179 9 is_stmt 1 view .LVU67
 179:quantum/rgblight.c ****     }
 266               		.loc 1 179 30 is_stmt 0 view .LVU68
 267 0018 8170      		andi r24,lo8(1)
 268 001a 8465      		ori r24,lo8(84)
 269 001c 00C0      		rjmp .L12
 270               		.cfi_endproc
 271               	.LFE90:
 273               		.section	.text.eeconfig_read_rgblight,"ax",@progbits
 274               	.global	eeconfig_read_rgblight
 276               	eeconfig_read_rgblight:
 277               	.LFB91:
 187:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 278               		.loc 1 187 39 is_stmt 1 view -0
 279               		.cfi_startproc
 280               	/* prologue: function */
 281               	/* frame size = 0 */
 282               	/* stack size = 0 */
 283               	.L__stack_usage = 0
 189:quantum/rgblight.c **** #else
 284               		.loc 1 189 5 view .LVU70
 189:quantum/rgblight.c **** #else
 285               		.loc 1 189 12 is_stmt 0 view .LVU71
 286 0000 88E0      		ldi r24,lo8(8)
 287 0002 90E0      		ldi r25,0
 288 0004 0C94 0000 		jmp eeprom_read_dword
 289               	.LVL16:
 290               		.cfi_endproc
 291               	.LFE91:
 293               		.section	.text.eeconfig_update_rgblight,"ax",@progbits
 294               	.global	eeconfig_update_rgblight
 296               	eeconfig_update_rgblight:
 297               	.LVL17:
 298               	.LFB92:
 195:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 299               		.loc 1 195 45 is_stmt 1 view -0
 300               		.cfi_startproc
 195:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 301               		.loc 1 195 45 is_stmt 0 view .LVU73
 302 0000 CF92      		push r12
 303               	.LCFI2:
 304               		.cfi_def_cfa_offset 3
 305               		.cfi_offset 12, -2
 306 0002 DF92      		push r13
 307               	.LCFI3:
 308               		.cfi_def_cfa_offset 4
 309               		.cfi_offset 13, -3
 310 0004 EF92      		push r14
 311               	.LCFI4:
 312               		.cfi_def_cfa_offset 5
 313               		.cfi_offset 14, -4
 314 0006 FF92      		push r15
 315               	.LCFI5:
 316               		.cfi_def_cfa_offset 6
 317               		.cfi_offset 15, -5
 318               	/* prologue: function */
 319               	/* frame size = 0 */
 320               	/* stack size = 4 */
 321               	.L__stack_usage = 4
 322 0008 6B01      		movw r12,r22
 323 000a 7C01      		movw r14,r24
 197:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 324               		.loc 1 197 5 is_stmt 1 view .LVU74
 325 000c 0E94 0000 		call rgblight_check_config
 326               	.LVL18:
 198:quantum/rgblight.c **** #endif
 327               		.loc 1 198 5 view .LVU75
 328 0010 B701      		movw r22,r14
 329 0012 A601      		movw r20,r12
 330 0014 88E0      		ldi r24,lo8(8)
 331 0016 90E0      		ldi r25,0
 332               	/* epilogue start */
 200:quantum/rgblight.c **** 
 333               		.loc 1 200 1 is_stmt 0 view .LVU76
 334 0018 FF90      		pop r15
 335 001a EF90      		pop r14
 336 001c DF90      		pop r13
 337 001e CF90      		pop r12
 198:quantum/rgblight.c **** #endif
 338               		.loc 1 198 5 view .LVU77
 339 0020 0C94 0000 		jmp eeprom_update_dword
 340               	.LVL19:
 341               		.cfi_endproc
 342               	.LFE92:
 344               		.section	.text.eeconfig_update_rgblight_current,"ax",@progbits
 345               	.global	eeconfig_update_rgblight_current
 347               	eeconfig_update_rgblight_current:
 348               	.LFB93:
 202:quantum/rgblight.c **** 
 349               		.loc 1 202 45 is_stmt 1 view -0
 350               		.cfi_startproc
 351               	/* prologue: function */
 352               	/* frame size = 0 */
 353               	/* stack size = 0 */
 354               	.L__stack_usage = 0
 202:quantum/rgblight.c **** 
 355               		.loc 1 202 47 view .LVU79
 356 0000 6091 0000 		lds r22,rgblight_config
 357 0004 7091 0000 		lds r23,rgblight_config+1
 358 0008 8091 0000 		lds r24,rgblight_config+2
 359 000c 9091 0000 		lds r25,rgblight_config+3
 360 0010 0C94 0000 		jmp eeconfig_update_rgblight
 361               	.LVL20:
 362               		.cfi_endproc
 363               	.LFE93:
 365               		.section	.text.eeconfig_update_rgblight_default,"ax",@progbits
 366               	.global	eeconfig_update_rgblight_default
 368               	eeconfig_update_rgblight_default:
 369               	.LFB94:
 204:quantum/rgblight.c ****     rgblight_config.enable = 1;
 370               		.loc 1 204 45 view -0
 371               		.cfi_startproc
 372               	/* prologue: function */
 373               	/* frame size = 0 */
 374               	/* stack size = 0 */
 375               	.L__stack_usage = 0
 205:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_DEFAULT_MODE;
 376               		.loc 1 205 5 view .LVU81
 206:quantum/rgblight.c ****     rgblight_config.hue    = RGBLIGHT_DEFAULT_HUE;
 377               		.loc 1 206 5 view .LVU82
 207:quantum/rgblight.c ****     rgblight_config.sat    = RGBLIGHT_DEFAULT_SAT;
 378               		.loc 1 207 5 view .LVU83
 208:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_DEFAULT_VAL;
 379               		.loc 1 208 5 view .LVU84
 209:quantum/rgblight.c ****     rgblight_config.speed  = RGBLIGHT_DEFAULT_SPD;
 380               		.loc 1 209 5 view .LVU85
 210:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 381               		.loc 1 210 5 view .LVU86
 205:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_DEFAULT_MODE;
 382               		.loc 1 205 28 is_stmt 0 view .LVU87
 383 0000 E0E0      		ldi r30,lo8(rgblight_config)
 384 0002 F0E0      		ldi r31,hi8(rgblight_config)
 385 0004 83E0      		ldi r24,lo8(3)
 386 0006 8083      		st Z,r24
 207:quantum/rgblight.c ****     rgblight_config.sat    = RGBLIGHT_DEFAULT_SAT;
 387               		.loc 1 207 28 view .LVU88
 388 0008 1182      		std Z+1,__zero_reg__
 208:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_DEFAULT_VAL;
 389               		.loc 1 208 28 view .LVU89
 390 000a 8FEF      		ldi r24,lo8(-1)
 391 000c 8283      		std Z+2,r24
 209:quantum/rgblight.c ****     rgblight_config.speed  = RGBLIGHT_DEFAULT_SPD;
 392               		.loc 1 209 28 view .LVU90
 393 000e 8383      		std Z+3,r24
 210:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 394               		.loc 1 210 28 view .LVU91
 395 0010 1482      		std Z+4,__zero_reg__
 211:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 396               		.loc 1 211 39 is_stmt 1 view .LVU92
 212:quantum/rgblight.c **** }
 397               		.loc 1 212 5 view .LVU93
 398 0012 6081      		ld r22,Z
 399 0014 7181      		ldd r23,Z+1
 400 0016 8281      		ldd r24,Z+2
 401 0018 9381      		ldd r25,Z+3
 402 001a 0C94 0000 		jmp eeconfig_update_rgblight
 403               	.LVL21:
 404               		.cfi_endproc
 405               	.LFE94:
 407               		.section	.text.eeconfig_debug_rgblight,"ax",@progbits
 408               	.global	eeconfig_debug_rgblight
 410               	eeconfig_debug_rgblight:
 411               	.LFB95:
 215:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 412               		.loc 1 215 36 view -0
 413               		.cfi_startproc
 414               	/* prologue: function */
 415               	/* frame size = 0 */
 416               	/* stack size = 0 */
 417               	.L__stack_usage = 0
 216:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 418               		.loc 1 216 41 view .LVU95
 217:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 419               		.loc 1 217 69 view .LVU96
 218:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 420               		.loc 1 218 65 view .LVU97
 219:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 421               		.loc 1 219 63 view .LVU98
 220:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 422               		.loc 1 220 63 view .LVU99
 221:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 423               		.loc 1 221 63 view .LVU100
 222:quantum/rgblight.c **** }
 424               		.loc 1 222 67 view .LVU101
 425               	/* epilogue start */
 223:quantum/rgblight.c **** 
 426               		.loc 1 223 1 is_stmt 0 view .LVU102
 427 0000 0895      		ret
 428               		.cfi_endproc
 429               	.LFE95:
 431               		.section	.text.rgblight_read_dword,"ax",@progbits
 432               	.global	rgblight_read_dword
 434               	rgblight_read_dword:
 435               	.LFB98:
 271:quantum/rgblight.c **** 
 436               		.loc 1 271 36 is_stmt 1 view -0
 437               		.cfi_startproc
 438               	/* prologue: function */
 439               	/* frame size = 0 */
 440               	/* stack size = 0 */
 441               	.L__stack_usage = 0
 271:quantum/rgblight.c **** 
 442               		.loc 1 271 38 view .LVU104
 271:quantum/rgblight.c **** 
 443               		.loc 1 271 60 is_stmt 0 view .LVU105
 444 0000 6091 0000 		lds r22,rgblight_config
 445 0004 7091 0000 		lds r23,rgblight_config+1
 446 0008 8091 0000 		lds r24,rgblight_config+2
 447 000c 9091 0000 		lds r25,rgblight_config+3
 448               	/* epilogue start */
 271:quantum/rgblight.c **** 
 449               		.loc 1 271 1 view .LVU106
 450 0010 0895      		ret
 451               		.cfi_endproc
 452               	.LFE98:
 454               		.section	.text.rgblight_get_mode,"ax",@progbits
 455               	.global	rgblight_get_mode
 457               	rgblight_get_mode:
 458               	.LFB108:
 320:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 459               		.loc 1 320 33 is_stmt 1 view -0
 460               		.cfi_startproc
 461               	/* prologue: function */
 462               	/* frame size = 0 */
 463               	/* stack size = 0 */
 464               	.L__stack_usage = 0
 321:quantum/rgblight.c ****         return false;
 465               		.loc 1 321 5 view .LVU108
 321:quantum/rgblight.c ****         return false;
 466               		.loc 1 321 25 is_stmt 0 view .LVU109
 467 0000 8091 0000 		lds r24,rgblight_config
 321:quantum/rgblight.c ****         return false;
 468               		.loc 1 321 8 view .LVU110
 469 0004 80FF      		sbrs r24,0
 470 0006 00C0      		rjmp .L21
 325:quantum/rgblight.c **** }
 471               		.loc 1 325 5 is_stmt 1 view .LVU111
 325:quantum/rgblight.c **** }
 472               		.loc 1 325 27 is_stmt 0 view .LVU112
 473 0008 8695      		lsr r24
 474 000a 0895      		ret
 475               	.L21:
 322:quantum/rgblight.c ****     }
 476               		.loc 1 322 16 view .LVU113
 477 000c 80E0      		ldi r24,0
 478               	/* epilogue start */
 326:quantum/rgblight.c **** 
 479               		.loc 1 326 1 view .LVU114
 480 000e 0895      		ret
 481               		.cfi_endproc
 482               	.LFE108:
 484               		.section	.text.rgblight_is_enabled,"ax",@progbits
 485               	.global	rgblight_is_enabled
 487               	rgblight_is_enabled:
 488               	.LFB118:
 412:quantum/rgblight.c **** 
 489               		.loc 1 412 32 is_stmt 1 view -0
 490               		.cfi_startproc
 491               	/* prologue: function */
 492               	/* frame size = 0 */
 493               	/* stack size = 0 */
 494               	.L__stack_usage = 0
 412:quantum/rgblight.c **** 
 495               		.loc 1 412 34 view .LVU116
 412:quantum/rgblight.c **** 
 496               		.loc 1 412 56 is_stmt 0 view .LVU117
 497 0000 8091 0000 		lds r24,rgblight_config
 412:quantum/rgblight.c **** 
 498               		.loc 1 412 1 view .LVU118
 499 0004 8170      		andi r24,lo8(1)
 500               	/* epilogue start */
 501 0006 0895      		ret
 502               		.cfi_endproc
 503               	.LFE118:
 505               		.section	.text.rgblight_increase_speed_helper,"ax",@progbits
 506               	.global	rgblight_increase_speed_helper
 508               	rgblight_increase_speed_helper:
 509               	.LVL22:
 510               	.LFB137:
 451:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 511               		.loc 1 451 59 is_stmt 1 view -0
 512               		.cfi_startproc
 513               	/* prologue: function */
 514               	/* frame size = 0 */
 515               	/* stack size = 0 */
 516               	.L__stack_usage = 0
 452:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 517               		.loc 1 452 5 view .LVU120
 452:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 518               		.loc 1 452 24 is_stmt 0 view .LVU121
 519 0000 9091 0000 		lds r25,rgblight_config+4
 452:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 520               		.loc 1 452 8 view .LVU122
 521 0004 9330      		cpi r25,lo8(3)
 522 0006 00F4      		brsh .L24
 452:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 523               		.loc 1 452 36 is_stmt 1 discriminator 1 view .LVU123
 452:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 524               		.loc 1 452 57 is_stmt 0 discriminator 1 view .LVU124
 525 0008 9F5F      		subi r25,lo8(-(1))
 526 000a 9093 0000 		sts rgblight_config+4,r25
 527               	.L24:
 454:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 528               		.loc 1 454 5 is_stmt 1 view .LVU125
 454:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 529               		.loc 1 454 8 is_stmt 0 view .LVU126
 530 000e 8823      		tst r24
 531 0010 01F0      		breq .L23
 455:quantum/rgblight.c ****     }
 532               		.loc 1 455 9 is_stmt 1 view .LVU127
 533 0012 6091 0000 		lds r22,rgblight_config
 534 0016 7091 0000 		lds r23,rgblight_config+1
 535 001a 8091 0000 		lds r24,rgblight_config+2
 536 001e 9091 0000 		lds r25,rgblight_config+3
 537 0022 0C94 0000 		jmp eeconfig_update_rgblight
 538               	.LVL23:
 539               	.L23:
 540               	/* epilogue start */
 457:quantum/rgblight.c **** void rgblight_increase_speed(void) { rgblight_increase_speed_helper(true); }
 541               		.loc 1 457 1 is_stmt 0 view .LVU128
 542 0026 0895      		ret
 543               		.cfi_endproc
 544               	.LFE137:
 546               		.section	.text.rgblight_increase_speed,"ax",@progbits
 547               	.global	rgblight_increase_speed
 549               	rgblight_increase_speed:
 550               	.LFB138:
 458:quantum/rgblight.c **** void rgblight_increase_speed_noeeprom(void) { rgblight_increase_speed_helper(false); }
 551               		.loc 1 458 36 is_stmt 1 view -0
 552               		.cfi_startproc
 553               	/* prologue: function */
 554               	/* frame size = 0 */
 555               	/* stack size = 0 */
 556               	.L__stack_usage = 0
 458:quantum/rgblight.c **** void rgblight_increase_speed_noeeprom(void) { rgblight_increase_speed_helper(false); }
 557               		.loc 1 458 38 view .LVU130
 558 0000 81E0      		ldi r24,lo8(1)
 559 0002 0C94 0000 		jmp rgblight_increase_speed_helper
 560               	.LVL24:
 561               		.cfi_endproc
 562               	.LFE138:
 564               		.section	.text.rgblight_increase_speed_noeeprom,"ax",@progbits
 565               	.global	rgblight_increase_speed_noeeprom
 567               	rgblight_increase_speed_noeeprom:
 568               	.LFB139:
 459:quantum/rgblight.c **** 
 569               		.loc 1 459 45 view -0
 570               		.cfi_startproc
 571               	/* prologue: function */
 572               	/* frame size = 0 */
 573               	/* stack size = 0 */
 574               	.L__stack_usage = 0
 459:quantum/rgblight.c **** 
 575               		.loc 1 459 47 view .LVU132
 576 0000 80E0      		ldi r24,0
 577 0002 0C94 0000 		jmp rgblight_increase_speed_helper
 578               	.LVL25:
 579               		.cfi_endproc
 580               	.LFE139:
 582               		.section	.text.rgblight_decrease_speed_helper,"ax",@progbits
 583               	.global	rgblight_decrease_speed_helper
 585               	rgblight_decrease_speed_helper:
 586               	.LVL26:
 587               	.LFB140:
 461:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 588               		.loc 1 461 59 view -0
 589               		.cfi_startproc
 590               	/* prologue: function */
 591               	/* frame size = 0 */
 592               	/* stack size = 0 */
 593               	.L__stack_usage = 0
 462:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 594               		.loc 1 462 5 view .LVU134
 462:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 595               		.loc 1 462 24 is_stmt 0 view .LVU135
 596 0000 9091 0000 		lds r25,rgblight_config+4
 462:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 597               		.loc 1 462 8 view .LVU136
 598 0004 9923      		tst r25
 599 0006 01F0      		breq .L29
 462:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 600               		.loc 1 462 36 is_stmt 1 discriminator 1 view .LVU137
 462:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 601               		.loc 1 462 57 is_stmt 0 discriminator 1 view .LVU138
 602 0008 9150      		subi r25,lo8(-(-1))
 603 000a 9093 0000 		sts rgblight_config+4,r25
 604               	.L29:
 464:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 605               		.loc 1 464 5 is_stmt 1 view .LVU139
 464:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 606               		.loc 1 464 8 is_stmt 0 view .LVU140
 607 000e 8823      		tst r24
 608 0010 01F0      		breq .L28
 465:quantum/rgblight.c ****     }
 609               		.loc 1 465 9 is_stmt 1 view .LVU141
 610 0012 6091 0000 		lds r22,rgblight_config
 611 0016 7091 0000 		lds r23,rgblight_config+1
 612 001a 8091 0000 		lds r24,rgblight_config+2
 613 001e 9091 0000 		lds r25,rgblight_config+3
 614 0022 0C94 0000 		jmp eeconfig_update_rgblight
 615               	.LVL27:
 616               	.L28:
 617               	/* epilogue start */
 467:quantum/rgblight.c **** void rgblight_decrease_speed(void) { rgblight_decrease_speed_helper(true); }
 618               		.loc 1 467 1 is_stmt 0 view .LVU142
 619 0026 0895      		ret
 620               		.cfi_endproc
 621               	.LFE140:
 623               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 624               	.global	rgblight_decrease_speed
 626               	rgblight_decrease_speed:
 627               	.LFB141:
 468:quantum/rgblight.c **** void rgblight_decrease_speed_noeeprom(void) { rgblight_decrease_speed_helper(false); }
 628               		.loc 1 468 36 is_stmt 1 view -0
 629               		.cfi_startproc
 630               	/* prologue: function */
 631               	/* frame size = 0 */
 632               	/* stack size = 0 */
 633               	.L__stack_usage = 0
 468:quantum/rgblight.c **** void rgblight_decrease_speed_noeeprom(void) { rgblight_decrease_speed_helper(false); }
 634               		.loc 1 468 38 view .LVU144
 635 0000 81E0      		ldi r24,lo8(1)
 636 0002 0C94 0000 		jmp rgblight_decrease_speed_helper
 637               	.LVL28:
 638               		.cfi_endproc
 639               	.LFE141:
 641               		.section	.text.rgblight_decrease_speed_noeeprom,"ax",@progbits
 642               	.global	rgblight_decrease_speed_noeeprom
 644               	rgblight_decrease_speed_noeeprom:
 645               	.LFB142:
 469:quantum/rgblight.c **** 
 646               		.loc 1 469 45 view -0
 647               		.cfi_startproc
 648               	/* prologue: function */
 649               	/* frame size = 0 */
 650               	/* stack size = 0 */
 651               	.L__stack_usage = 0
 469:quantum/rgblight.c **** 
 652               		.loc 1 469 47 view .LVU146
 653 0000 80E0      		ldi r24,0
 654 0002 0C94 0000 		jmp rgblight_decrease_speed_helper
 655               	.LVL29:
 656               		.cfi_endproc
 657               	.LFE142:
 659               		.section	.text.rgblight_get_speed,"ax",@progbits
 660               	.global	rgblight_get_speed
 662               	rgblight_get_speed:
 663               	.LFB147:
 555:quantum/rgblight.c **** 
 664               		.loc 1 555 34 view -0
 665               		.cfi_startproc
 666               	/* prologue: function */
 667               	/* frame size = 0 */
 668               	/* stack size = 0 */
 669               	.L__stack_usage = 0
 555:quantum/rgblight.c **** 
 670               		.loc 1 555 36 view .LVU148
 555:quantum/rgblight.c **** 
 671               		.loc 1 555 1 is_stmt 0 view .LVU149
 672 0000 8091 0000 		lds r24,rgblight_config+4
 673               	/* epilogue start */
 674 0004 0895      		ret
 675               		.cfi_endproc
 676               	.LFE147:
 678               		.section	.text.rgblight_set_speed_eeprom_helper,"ax",@progbits
 679               	.global	rgblight_set_speed_eeprom_helper
 681               	rgblight_set_speed_eeprom_helper:
 682               	.LVL30:
 683               	.LFB148:
 557:quantum/rgblight.c ****     rgblight_config.speed = speed;
 684               		.loc 1 557 76 is_stmt 1 view -0
 685               		.cfi_startproc
 686               	/* prologue: function */
 687               	/* frame size = 0 */
 688               	/* stack size = 0 */
 689               	.L__stack_usage = 0
 558:quantum/rgblight.c ****     if (write_to_eeprom) {
 690               		.loc 1 558 5 view .LVU151
 558:quantum/rgblight.c ****     if (write_to_eeprom) {
 691               		.loc 1 558 27 is_stmt 0 view .LVU152
 692 0000 8093 0000 		sts rgblight_config+4,r24
 559:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 693               		.loc 1 559 5 is_stmt 1 view .LVU153
 559:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 694               		.loc 1 559 8 is_stmt 0 view .LVU154
 695 0004 6623      		tst r22
 696 0006 01F0      		breq .L37
 560:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 697               		.loc 1 560 9 is_stmt 1 view .LVU155
 698 0008 6091 0000 		lds r22,rgblight_config
 699 000c 7091 0000 		lds r23,rgblight_config+1
 700 0010 8091 0000 		lds r24,rgblight_config+2
 701 0014 9091 0000 		lds r25,rgblight_config+3
 702               	.LVL31:
 560:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 703               		.loc 1 560 9 is_stmt 0 view .LVU156
 704 0018 0C94 0000 		jmp eeconfig_update_rgblight
 705               	.LVL32:
 706               	.L37:
 707               	/* epilogue start */
 565:quantum/rgblight.c **** 
 708               		.loc 1 565 1 view .LVU157
 709 001c 0895      		ret
 710               		.cfi_endproc
 711               	.LFE148:
 713               		.section	.text.rgblight_set_speed,"ax",@progbits
 714               	.global	rgblight_set_speed
 716               	rgblight_set_speed:
 717               	.LVL33:
 718               	.LFB149:
 567:quantum/rgblight.c **** 
 719               		.loc 1 567 40 is_stmt 1 view -0
 720               		.cfi_startproc
 721               	/* prologue: function */
 722               	/* frame size = 0 */
 723               	/* stack size = 0 */
 724               	.L__stack_usage = 0
 567:quantum/rgblight.c **** 
 725               		.loc 1 567 42 view .LVU159
 726 0000 61E0      		ldi r22,lo8(1)
 727 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 728               	.LVL34:
 567:quantum/rgblight.c **** 
 729               		.loc 1 567 42 is_stmt 0 view .LVU160
 730               		.cfi_endproc
 731               	.LFE149:
 733               		.section	.text.rgblight_set_speed_noeeprom,"ax",@progbits
 734               	.global	rgblight_set_speed_noeeprom
 736               	rgblight_set_speed_noeeprom:
 737               	.LVL35:
 738               	.LFB150:
 569:quantum/rgblight.c **** 
 739               		.loc 1 569 49 is_stmt 1 view -0
 740               		.cfi_startproc
 741               	/* prologue: function */
 742               	/* frame size = 0 */
 743               	/* stack size = 0 */
 744               	.L__stack_usage = 0
 569:quantum/rgblight.c **** 
 745               		.loc 1 569 51 view .LVU162
 746 0000 60E0      		ldi r22,0
 747 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 748               	.LVL36:
 569:quantum/rgblight.c **** 
 749               		.loc 1 569 51 is_stmt 0 view .LVU163
 750               		.cfi_endproc
 751               	.LFE150:
 753               		.section	.text.rgblight_get_hue,"ax",@progbits
 754               	.global	rgblight_get_hue
 756               	rgblight_get_hue:
 757               	.LFB151:
 571:quantum/rgblight.c **** 
 758               		.loc 1 571 32 is_stmt 1 view -0
 759               		.cfi_startproc
 760               	/* prologue: function */
 761               	/* frame size = 0 */
 762               	/* stack size = 0 */
 763               	.L__stack_usage = 0
 571:quantum/rgblight.c **** 
 764               		.loc 1 571 34 view .LVU165
 571:quantum/rgblight.c **** 
 765               		.loc 1 571 1 is_stmt 0 view .LVU166
 766 0000 8091 0000 		lds r24,rgblight_config+1
 767               	/* epilogue start */
 768 0004 0895      		ret
 769               		.cfi_endproc
 770               	.LFE151:
 772               		.section	.text.rgblight_get_sat,"ax",@progbits
 773               	.global	rgblight_get_sat
 775               	rgblight_get_sat:
 776               	.LFB152:
 573:quantum/rgblight.c **** 
 777               		.loc 1 573 32 is_stmt 1 view -0
 778               		.cfi_startproc
 779               	/* prologue: function */
 780               	/* frame size = 0 */
 781               	/* stack size = 0 */
 782               	.L__stack_usage = 0
 573:quantum/rgblight.c **** 
 783               		.loc 1 573 34 view .LVU168
 573:quantum/rgblight.c **** 
 784               		.loc 1 573 1 is_stmt 0 view .LVU169
 785 0000 8091 0000 		lds r24,rgblight_config+2
 786               	/* epilogue start */
 787 0004 0895      		ret
 788               		.cfi_endproc
 789               	.LFE152:
 791               		.section	.text.rgblight_get_val,"ax",@progbits
 792               	.global	rgblight_get_val
 794               	rgblight_get_val:
 795               	.LFB153:
 575:quantum/rgblight.c **** 
 796               		.loc 1 575 32 is_stmt 1 view -0
 797               		.cfi_startproc
 798               	/* prologue: function */
 799               	/* frame size = 0 */
 800               	/* stack size = 0 */
 801               	.L__stack_usage = 0
 575:quantum/rgblight.c **** 
 802               		.loc 1 575 34 view .LVU171
 575:quantum/rgblight.c **** 
 803               		.loc 1 575 1 is_stmt 0 view .LVU172
 804 0000 8091 0000 		lds r24,rgblight_config+3
 805               	/* epilogue start */
 806 0004 0895      		ret
 807               		.cfi_endproc
 808               	.LFE153:
 810               		.section	.text.rgblight_get_hsv,"ax",@progbits
 811               	.global	rgblight_get_hsv
 813               	rgblight_get_hsv:
 814               	.LFB154:
 577:quantum/rgblight.c **** 
 815               		.loc 1 577 28 is_stmt 1 view -0
 816               		.cfi_startproc
 817               	/* prologue: function */
 818               	/* frame size = 0 */
 819               	/* stack size = 0 */
 820               	.L__stack_usage = 0
 577:quantum/rgblight.c **** 
 821               		.loc 1 577 30 view .LVU174
 577:quantum/rgblight.c **** 
 822               		.loc 1 577 79 is_stmt 0 view .LVU175
 823 0000 E0E0      		ldi r30,lo8(rgblight_config)
 824 0002 F0E0      		ldi r31,hi8(rgblight_config)
 825 0004 7281      		ldd r23,Z+2
 577:quantum/rgblight.c **** 
 826               		.loc 1 577 37 view .LVU176
 827 0006 6181      		ldd r22,Z+1
 577:quantum/rgblight.c **** 
 828               		.loc 1 577 1 view .LVU177
 829 0008 8381      		ldd r24,Z+3
 830               	/* epilogue start */
 831 000a 0895      		ret
 832               		.cfi_endproc
 833               	.LFE154:
 835               		.section	.text.rgblight_call_driver,"ax",@progbits
 836               		.weak	rgblight_call_driver
 838               	rgblight_call_driver:
 839               	.LVL37:
 840               	.LFB167:
 784:quantum/rgblight.c **** 
 841               		.loc 1 784 88 is_stmt 1 view -0
 842               		.cfi_startproc
 843               	/* prologue: function */
 844               	/* frame size = 0 */
 845               	/* stack size = 0 */
 846               	.L__stack_usage = 0
 784:quantum/rgblight.c **** 
 847               		.loc 1 784 90 view .LVU179
 848 0000 70E0      		ldi r23,0
 849 0002 0C94 0000 		jmp ws2812_setleds
 850               	.LVL38:
 784:quantum/rgblight.c **** 
 851               		.loc 1 784 90 is_stmt 0 view .LVU180
 852               		.cfi_endproc
 853               	.LFE167:
 855               		.section	.text.rgblight_set,"ax",@progbits
 856               	.global	rgblight_set
 858               	rgblight_set:
 859               	.LFB168:
 788:quantum/rgblight.c ****     LED_TYPE *start_led;
 860               		.loc 1 788 25 is_stmt 1 view -0
 861               		.cfi_startproc
 862               	/* prologue: function */
 863               	/* frame size = 0 */
 864               	/* stack size = 0 */
 865               	.L__stack_usage = 0
 789:quantum/rgblight.c ****     uint8_t   num_leds = rgblight_ranges.clipping_num_leds;
 866               		.loc 1 789 5 view .LVU182
 790:quantum/rgblight.c **** 
 867               		.loc 1 790 5 view .LVU183
 790:quantum/rgblight.c **** 
 868               		.loc 1 790 15 is_stmt 0 view .LVU184
 869 0000 6091 0000 		lds r22,rgblight_ranges+1
 870               	.LVL39:
 792:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 871               		.loc 1 792 5 is_stmt 1 view .LVU185
 792:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 872               		.loc 1 792 25 is_stmt 0 view .LVU186
 873 0004 8091 0000 		lds r24,rgblight_config
 792:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 874               		.loc 1 792 8 view .LVU187
 875 0008 80FF      		sbrs r24,0
 876 000a 00C0      		rjmp .L47
 877               	.L50:
 822:quantum/rgblight.c **** #    endif
 878               		.loc 1 822 5 is_stmt 1 view .LVU188
 879               	.LVL40:
 830:quantum/rgblight.c **** }
 880               		.loc 1 830 5 view .LVU189
 822:quantum/rgblight.c **** #    endif
 881               		.loc 1 822 21 is_stmt 0 view .LVU190
 882 000c 8091 0000 		lds r24,rgblight_ranges
 883 0010 23E0      		ldi r18,lo8(3)
 884 0012 829F      		mul r24,r18
 885 0014 C001      		movw r24,r0
 886 0016 1124      		clr __zero_reg__
 830:quantum/rgblight.c **** }
 887               		.loc 1 830 5 view .LVU191
 888 0018 8050      		subi r24,lo8(-(led))
 889 001a 9040      		sbci r25,hi8(-(led))
 890 001c 0C94 0000 		jmp rgblight_call_driver
 891               	.LVL41:
 892               	.L47:
 793:quantum/rgblight.c ****             led[i].r = 0;
 893               		.loc 1 793 9 is_stmt 1 view .LVU192
 894               	.LBB22:
 793:quantum/rgblight.c ****             led[i].r = 0;
 895               		.loc 1 793 14 view .LVU193
 793:quantum/rgblight.c ****             led[i].r = 0;
 896               		.loc 1 793 22 is_stmt 0 view .LVU194
 897 0020 8091 0000 		lds r24,rgblight_ranges+2
 898               	.LVL42:
 793:quantum/rgblight.c ****             led[i].r = 0;
 899               		.loc 1 793 79 view .LVU195
 900 0024 9091 0000 		lds r25,rgblight_ranges+3
 901 0028 23E0      		ldi r18,lo8(3)
 902 002a 829F      		mul r24,r18
 903 002c F001      		movw r30,r0
 904 002e 1124      		clr __zero_reg__
 905 0030 E050      		subi r30,lo8(-(led))
 906 0032 F040      		sbci r31,hi8(-(led))
 907               	.L48:
 793:quantum/rgblight.c ****             led[i].r = 0;
 908               		.loc 1 793 60 is_stmt 1 discriminator 1 view .LVU196
 793:quantum/rgblight.c ****             led[i].r = 0;
 909               		.loc 1 793 9 is_stmt 0 discriminator 1 view .LVU197
 910 0034 8917      		cp r24,r25
 911 0036 00F4      		brsh .L50
 794:quantum/rgblight.c ****             led[i].g = 0;
 912               		.loc 1 794 13 is_stmt 1 discriminator 3 view .LVU198
 794:quantum/rgblight.c ****             led[i].g = 0;
 913               		.loc 1 794 22 is_stmt 0 discriminator 3 view .LVU199
 914 0038 1182      		std Z+1,__zero_reg__
 795:quantum/rgblight.c ****             led[i].b = 0;
 915               		.loc 1 795 13 is_stmt 1 discriminator 3 view .LVU200
 795:quantum/rgblight.c ****             led[i].b = 0;
 916               		.loc 1 795 22 is_stmt 0 discriminator 3 view .LVU201
 917 003a 1082      		st Z,__zero_reg__
 796:quantum/rgblight.c **** #    ifdef RGBW
 918               		.loc 1 796 13 is_stmt 1 discriminator 3 view .LVU202
 796:quantum/rgblight.c **** #    ifdef RGBW
 919               		.loc 1 796 22 is_stmt 0 discriminator 3 view .LVU203
 920 003c 1282      		std Z+2,__zero_reg__
 793:quantum/rgblight.c ****             led[i].r = 0;
 921               		.loc 1 793 96 is_stmt 1 discriminator 3 view .LVU204
 793:quantum/rgblight.c ****             led[i].r = 0;
 922               		.loc 1 793 97 is_stmt 0 discriminator 3 view .LVU205
 923 003e 8F5F      		subi r24,lo8(-(1))
 924               	.LVL43:
 793:quantum/rgblight.c ****             led[i].r = 0;
 925               		.loc 1 793 97 discriminator 3 view .LVU206
 926 0040 3396      		adiw r30,3
 927 0042 00C0      		rjmp .L48
 928               	.LBE22:
 929               		.cfi_endproc
 930               	.LFE168:
 932               		.section	.text.rgblight_setrgb,"ax",@progbits
 933               	.global	rgblight_setrgb
 935               	rgblight_setrgb:
 936               	.LVL44:
 937               	.LFB155:
 579:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 938               		.loc 1 579 55 is_stmt 1 view -0
 939               		.cfi_startproc
 940               	/* prologue: function */
 941               	/* frame size = 0 */
 942               	/* stack size = 0 */
 943               	.L__stack_usage = 0
 580:quantum/rgblight.c ****         return;
 944               		.loc 1 580 5 view .LVU208
 580:quantum/rgblight.c ****         return;
 945               		.loc 1 580 25 is_stmt 0 view .LVU209
 946 0000 9091 0000 		lds r25,rgblight_config
 580:quantum/rgblight.c ****         return;
 947               		.loc 1 580 8 view .LVU210
 948 0004 90FF      		sbrs r25,0
 949 0006 00C0      		rjmp .L51
 584:quantum/rgblight.c ****         led[i].r = r;
 950               		.loc 1 584 5 is_stmt 1 view .LVU211
 951               	.LBB23:
 584:quantum/rgblight.c ****         led[i].r = r;
 952               		.loc 1 584 10 view .LVU212
 584:quantum/rgblight.c ****         led[i].r = r;
 953               		.loc 1 584 18 is_stmt 0 view .LVU213
 954 0008 9091 0000 		lds r25,rgblight_ranges+2
 955               	.LVL45:
 584:quantum/rgblight.c ****         led[i].r = r;
 956               		.loc 1 584 75 view .LVU214
 957 000c 2091 0000 		lds r18,rgblight_ranges+3
 958 0010 33E0      		ldi r19,lo8(3)
 959 0012 939F      		mul r25,r19
 960 0014 F001      		movw r30,r0
 961 0016 1124      		clr __zero_reg__
 962 0018 E050      		subi r30,lo8(-(led))
 963 001a F040      		sbci r31,hi8(-(led))
 964               	.L53:
 584:quantum/rgblight.c ****         led[i].r = r;
 965               		.loc 1 584 56 is_stmt 1 discriminator 1 view .LVU215
 584:quantum/rgblight.c ****         led[i].r = r;
 966               		.loc 1 584 5 is_stmt 0 discriminator 1 view .LVU216
 967 001c 9217      		cp r25,r18
 968 001e 00F0      		brlo .L54
 584:quantum/rgblight.c ****         led[i].r = r;
 969               		.loc 1 584 5 discriminator 1 view .LVU217
 970               	.LBE23:
 592:quantum/rgblight.c **** }
 971               		.loc 1 592 5 is_stmt 1 view .LVU218
 972 0020 0C94 0000 		jmp rgblight_set
 973               	.LVL46:
 974               	.L54:
 975               	.LBB24:
 585:quantum/rgblight.c ****         led[i].g = g;
 976               		.loc 1 585 9 discriminator 3 view .LVU219
 585:quantum/rgblight.c ****         led[i].g = g;
 977               		.loc 1 585 18 is_stmt 0 discriminator 3 view .LVU220
 978 0024 8183      		std Z+1,r24
 586:quantum/rgblight.c ****         led[i].b = b;
 979               		.loc 1 586 9 is_stmt 1 discriminator 3 view .LVU221
 586:quantum/rgblight.c ****         led[i].b = b;
 980               		.loc 1 586 18 is_stmt 0 discriminator 3 view .LVU222
 981 0026 6083      		st Z,r22
 587:quantum/rgblight.c **** #ifdef RGBW
 982               		.loc 1 587 9 is_stmt 1 discriminator 3 view .LVU223
 587:quantum/rgblight.c **** #ifdef RGBW
 983               		.loc 1 587 18 is_stmt 0 discriminator 3 view .LVU224
 984 0028 4283      		std Z+2,r20
 584:quantum/rgblight.c ****         led[i].r = r;
 985               		.loc 1 584 92 is_stmt 1 discriminator 3 view .LVU225
 584:quantum/rgblight.c ****         led[i].r = r;
 986               		.loc 1 584 93 is_stmt 0 discriminator 3 view .LVU226
 987 002a 9F5F      		subi r25,lo8(-(1))
 988               	.LVL47:
 584:quantum/rgblight.c ****         led[i].r = r;
 989               		.loc 1 584 93 discriminator 3 view .LVU227
 990 002c 3396      		adiw r30,3
 991 002e 00C0      		rjmp .L53
 992               	.LVL48:
 993               	.L51:
 994               	/* epilogue start */
 584:quantum/rgblight.c ****         led[i].r = r;
 995               		.loc 1 584 93 discriminator 3 view .LVU228
 996               	.LBE24:
 593:quantum/rgblight.c **** 
 997               		.loc 1 593 1 view .LVU229
 998 0030 0895      		ret
 999               		.cfi_endproc
 1000               	.LFE155:
 1002               		.section	.text.rgblight_sethsv_noeeprom_old,"ax",@progbits
 1003               	.global	rgblight_sethsv_noeeprom_old
 1005               	rgblight_sethsv_noeeprom_old:
 1006               	.LVL49:
 1007               	.LFB143:
 471:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1008               		.loc 1 471 74 is_stmt 1 view -0
 1009               		.cfi_startproc
 471:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1010               		.loc 1 471 74 is_stmt 0 view .LVU231
 1011 0000 CF93      		push r28
 1012               	.LCFI6:
 1013               		.cfi_def_cfa_offset 3
 1014               		.cfi_offset 28, -2
 1015 0002 DF93      		push r29
 1016               	.LCFI7:
 1017               		.cfi_def_cfa_offset 4
 1018               		.cfi_offset 29, -3
 1019 0004 00D0      		rcall .
 1020 0006 0F92      		push __tmp_reg__
 1021               	.LCFI8:
 1022               		.cfi_def_cfa_offset 7
 1023 0008 CDB7      		in r28,__SP_L__
 1024 000a DEB7      		in r29,__SP_H__
 1025               	.LCFI9:
 1026               		.cfi_def_cfa_register 28
 1027               	/* prologue: function */
 1028               	/* frame size = 3 */
 1029               	/* stack size = 5 */
 1030               	.L__stack_usage = 5
 472:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1031               		.loc 1 472 5 is_stmt 1 view .LVU232
 472:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1032               		.loc 1 472 9 is_stmt 0 view .LVU233
 1033 000c 9091 0000 		lds r25,rgblight_config
 472:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1034               		.loc 1 472 8 view .LVU234
 1035 0010 90FF      		sbrs r25,0
 1036 0012 00C0      		rjmp .L55
 1037               	.LBB28:
 473:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 1038               		.loc 1 473 9 is_stmt 1 view .LVU235
 474:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1039               		.loc 1 474 9 view .LVU236
 1040               	.LVL50:
 1041               	.LBB29:
 1042               	.LBI29:
 162:quantum/rgblight.c **** 
 1043               		.loc 1 162 6 view .LVU237
 1044               	.LBB30:
 162:quantum/rgblight.c **** 
 1045               		.loc 1 162 70 view .LVU238
 1046 0014 9E01      		movw r18,r28
 1047 0016 2F5F      		subi r18,-1
 1048 0018 3F4F      		sbci r19,-1
 1049 001a 0E94 0000 		call sethsv_raw
 1050               	.LVL51:
 162:quantum/rgblight.c **** 
 1051               		.loc 1 162 70 is_stmt 0 view .LVU239
 1052               	.LBE30:
 1053               	.LBE29:
 475:quantum/rgblight.c ****     }
 1054               		.loc 1 475 9 is_stmt 1 view .LVU240
 1055 001e 4B81      		ldd r20,Y+3
 1056 0020 6981      		ldd r22,Y+1
 1057 0022 8A81      		ldd r24,Y+2
 1058 0024 0E94 0000 		call rgblight_setrgb
 1059               	.LVL52:
 1060               	.L55:
 1061               	/* epilogue start */
 1062               	.LBE28:
 477:quantum/rgblight.c **** 
 1063               		.loc 1 477 1 is_stmt 0 view .LVU241
 1064 0028 0F90      		pop __tmp_reg__
 1065 002a 0F90      		pop __tmp_reg__
 1066 002c 0F90      		pop __tmp_reg__
 1067 002e DF91      		pop r29
 1068 0030 CF91      		pop r28
 1069 0032 0895      		ret
 1070               		.cfi_endproc
 1071               	.LFE143:
 1073               		.section	.text.rgblight_effect_breathing,"ax",@progbits
 1074               	.global	rgblight_effect_breathing
 1076               	rgblight_effect_breathing:
 1077               	.LVL53:
 1078               	.LFB177:
 929:quantum/rgblight.c **** 
 930:quantum/rgblight.c **** void rgblight_task(void) {
 931:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 932:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 933:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 934:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 935:quantum/rgblight.c ****         animation_status.delta      = delta;
 936:quantum/rgblight.c **** 
 937:quantum/rgblight.c ****         // static light mode, do nothing here
 938:quantum/rgblight.c ****         if (1 == 0) {  // dummy
 939:quantum/rgblight.c ****         }
 940:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHING
 941:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 942:quantum/rgblight.c ****             // breathing mode
 943:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_BREATHING_INTERVALS[delta], 1, 100);
 944:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 945:quantum/rgblight.c ****         }
 946:quantum/rgblight.c **** #    endif
 947:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 948:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 949:quantum/rgblight.c ****             // rainbow mood mode
 950:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_MOOD_INTERVALS[delta], 5, 100);
 951:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 952:quantum/rgblight.c ****         }
 953:quantum/rgblight.c **** #    endif
 954:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 955:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 956:quantum/rgblight.c ****             // rainbow swirl mode
 957:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_SWIRL_INTERVALS[delta / 2], 1, 100);
 958:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 959:quantum/rgblight.c ****         }
 960:quantum/rgblight.c **** #    endif
 961:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_SNAKE
 962:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_SNAKE) {
 963:quantum/rgblight.c ****             // snake mode
 964:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_SNAKE_INTERVALS[delta / 2], 1, 200);
 965:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 966:quantum/rgblight.c ****         }
 967:quantum/rgblight.c **** #    endif
 968:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_KNIGHT
 969:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_KNIGHT) {
 970:quantum/rgblight.c ****             // knight mode
 971:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_KNIGHT_INTERVALS[delta], 5, 100);
 972:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 973:quantum/rgblight.c ****         }
 974:quantum/rgblight.c **** #    endif
 975:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_CHRISTMAS
 976:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_CHRISTMAS) {
 977:quantum/rgblight.c ****             // christmas mode
 978:quantum/rgblight.c ****             interval_time = RGBLIGHT_EFFECT_CHRISTMAS_INTERVAL;
 979:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 980:quantum/rgblight.c ****         }
 981:quantum/rgblight.c **** #    endif
 982:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RGB_TEST
 983:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RGB_TEST) {
 984:quantum/rgblight.c ****             // RGB test mode
 985:quantum/rgblight.c ****             interval_time = pgm_read_word(&RGBLED_RGBTEST_INTERVALS[0]);
 986:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 987:quantum/rgblight.c ****         }
 988:quantum/rgblight.c **** #    endif
 989:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_ALTERNATING
 990:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_ALTERNATING) {
 991:quantum/rgblight.c ****             interval_time = 500;
 992:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_alternating;
 993:quantum/rgblight.c ****         }
 994:quantum/rgblight.c **** #    endif
 995:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_TWINKLE
 996:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_TWINKLE) {
 997:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_TWINKLE_INTERVALS[delta % 3], 5, 30);
 998:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 999:quantum/rgblight.c ****         }
1000:quantum/rgblight.c **** #    endif
1001:quantum/rgblight.c ****         if (animation_status.restart) {
1002:quantum/rgblight.c ****             animation_status.restart    = false;
1003:quantum/rgblight.c ****             animation_status.last_timer = sync_timer_read();
1004:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
1005:quantum/rgblight.c ****         }
1006:quantum/rgblight.c ****         uint16_t now = sync_timer_read();
1007:quantum/rgblight.c ****         if (timer_expired(now, animation_status.last_timer)) {
1008:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1009:quantum/rgblight.c ****             static uint16_t report_last_timer = 0;
1010:quantum/rgblight.c ****             static bool     tick_flag         = false;
1011:quantum/rgblight.c ****             uint16_t        oldpos16;
1012:quantum/rgblight.c ****             if (tick_flag) {
1013:quantum/rgblight.c ****                 tick_flag = false;
1014:quantum/rgblight.c ****                 if (timer_expired(now, report_last_timer)) {
1015:quantum/rgblight.c ****                     report_last_timer += 30000;
1016:quantum/rgblight.c ****                     dprintf("rgblight animation tick report to slave\n");
1017:quantum/rgblight.c ****                     RGBLIGHT_SPLIT_ANIMATION_TICK;
1018:quantum/rgblight.c ****                 }
1019:quantum/rgblight.c ****             }
1020:quantum/rgblight.c ****             oldpos16 = animation_status.pos16;
1021:quantum/rgblight.c **** #    endif
1022:quantum/rgblight.c ****             animation_status.last_timer += interval_time;
1023:quantum/rgblight.c ****             effect_func(&animation_status);
1024:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1025:quantum/rgblight.c ****             if (animation_status.pos16 == 0 && oldpos16 != 0) {
1026:quantum/rgblight.c ****                 tick_flag = true;
1027:quantum/rgblight.c ****             }
1028:quantum/rgblight.c **** #    endif
1029:quantum/rgblight.c ****         }
1030:quantum/rgblight.c ****     }
1031:quantum/rgblight.c **** 
1032:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYER_BLINK
1033:quantum/rgblight.c ****     rgblight_unblink_layers();
1034:quantum/rgblight.c **** #    endif
1035:quantum/rgblight.c **** }
1036:quantum/rgblight.c **** 
1037:quantum/rgblight.c **** #endif /* RGBLIGHT_USE_TIMER */
1038:quantum/rgblight.c **** 
1039:quantum/rgblight.c **** #if defined(RGBLIGHT_EFFECT_BREATHING) || defined(RGBLIGHT_EFFECT_TWINKLE)
1040:quantum/rgblight.c **** 
1041:quantum/rgblight.c **** #    ifndef RGBLIGHT_EFFECT_BREATHE_CENTER
1042:quantum/rgblight.c **** #        ifndef RGBLIGHT_BREATHE_TABLE_SIZE
1043:quantum/rgblight.c **** #            define RGBLIGHT_BREATHE_TABLE_SIZE 256  // 256 or 128 or 64
1044:quantum/rgblight.c **** #        endif
1045:quantum/rgblight.c **** #        include <rgblight_breathe_table.h>
1046:quantum/rgblight.c **** #    endif
1047:quantum/rgblight.c **** 
1048:quantum/rgblight.c **** static uint8_t breathe_calc(uint8_t pos) {
1049:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
1050:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHE_TABLE
1051:quantum/rgblight.c ****     return pgm_read_byte(&rgblight_effect_breathe_table[pos / table_scale]);
1052:quantum/rgblight.c **** #    else
1053:quantum/rgblight.c ****     return (exp(sin((pos / 255.0) * M_PI)) - RGBLIGHT_EFFECT_BREATHE_CENTER / M_E) * (RGBLIGHT_EFFE
1054:quantum/rgblight.c **** #    endif
1055:quantum/rgblight.c **** }
1056:quantum/rgblight.c **** 
1057:quantum/rgblight.c **** #endif
1058:quantum/rgblight.c **** 
1059:quantum/rgblight.c **** // Effects
1060:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
1061:quantum/rgblight.c **** 
1062:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_BREATHING_INTERVALS[] PROGMEM = {30, 20, 10, 5};
1063:quantum/rgblight.c **** 
1064:quantum/rgblight.c **** void rgblight_effect_breathing(animation_status_t *anim) {
 1079               		.loc 1 1064 58 is_stmt 1 view -0
 1080               		.cfi_startproc
 1081               		.loc 1 1064 58 is_stmt 0 view .LVU243
 1082 0000 CF93      		push r28
 1083               	.LCFI10:
 1084               		.cfi_def_cfa_offset 3
 1085               		.cfi_offset 28, -2
 1086 0002 DF93      		push r29
 1087               	.LCFI11:
 1088               		.cfi_def_cfa_offset 4
 1089               		.cfi_offset 29, -3
 1090               	/* prologue: function */
 1091               	/* frame size = 0 */
 1092               	/* stack size = 2 */
 1093               	.L__stack_usage = 2
 1094 0004 EC01      		movw r28,r24
1065:quantum/rgblight.c ****     uint8_t val = breathe_calc(anim->pos);
 1095               		.loc 1 1065 5 is_stmt 1 view .LVU244
 1096               	.LVL54:
 1097               	.LBB34:
 1098               	.LBI34:
1048:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 1099               		.loc 1 1048 16 view .LVU245
 1100               	.LBE34:
1051:quantum/rgblight.c **** #    else
 1101               		.loc 1 1051 5 view .LVU246
 1102               	.LBB36:
 1103               	.LBB35:
1051:quantum/rgblight.c **** #    else
 1104               		.loc 1 1051 12 view .LVU247
1051:quantum/rgblight.c **** #    else
 1105               		.loc 1 1051 12 view .LVU248
1051:quantum/rgblight.c **** #    else
 1106               		.loc 1 1051 12 view .LVU249
 1107 0006 EC81      		ldd r30,Y+4
 1108 0008 F0E0      		ldi r31,0
 1109 000a E050      		subi r30,lo8(-(rgblight_effect_breathe_table))
 1110 000c F040      		sbci r31,hi8(-(rgblight_effect_breathe_table))
 1111               	/* #APP */
 1112               	 ;  1051 "quantum/rgblight.c" 1
 1113 000e 4491      		lpm r20, Z
 1114               		
 1115               	 ;  0 "" 2
 1116               	.LVL55:
1051:quantum/rgblight.c **** #    else
 1117               		.loc 1 1051 12 view .LVU250
1051:quantum/rgblight.c **** #    else
 1118               		.loc 1 1051 12 is_stmt 0 view .LVU251
 1119               	/* #NOAPP */
 1120               	.LBE35:
 1121               	.LBE36:
1066:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(rgblight_config.hue, rgblight_config.sat, val);
 1122               		.loc 1 1066 5 is_stmt 1 view .LVU252
 1123 0010 E0E0      		ldi r30,lo8(rgblight_config)
 1124 0012 F0E0      		ldi r31,hi8(rgblight_config)
 1125 0014 6281      		ldd r22,Z+2
 1126 0016 8181      		ldd r24,Z+1
 1127               	.LVL56:
 1128               		.loc 1 1066 5 is_stmt 0 view .LVU253
 1129 0018 0E94 0000 		call rgblight_sethsv_noeeprom_old
 1130               	.LVL57:
1067:quantum/rgblight.c ****     anim->pos = (anim->pos + 1);
 1131               		.loc 1 1067 5 is_stmt 1 view .LVU254
 1132               		.loc 1 1067 28 is_stmt 0 view .LVU255
 1133 001c 8C81      		ldd r24,Y+4
 1134 001e 8F5F      		subi r24,lo8(-(1))
 1135               		.loc 1 1067 15 view .LVU256
 1136 0020 8C83      		std Y+4,r24
 1137               	/* epilogue start */
1068:quantum/rgblight.c **** }
 1138               		.loc 1 1068 1 view .LVU257
 1139 0022 DF91      		pop r29
 1140 0024 CF91      		pop r28
 1141               	.LVL58:
 1142               		.loc 1 1068 1 view .LVU258
 1143 0026 0895      		ret
 1144               		.cfi_endproc
 1145               	.LFE177:
 1147               		.section	.text.rgblight_effect_rainbow_mood,"ax",@progbits
 1148               	.global	rgblight_effect_rainbow_mood
 1150               	rgblight_effect_rainbow_mood:
 1151               	.LVL59:
 1152               	.LFB178:
1069:quantum/rgblight.c **** #endif
1070:quantum/rgblight.c **** 
1071:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
1072:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_MOOD_INTERVALS[] PROGMEM = {120, 60, 30};
1073:quantum/rgblight.c **** 
1074:quantum/rgblight.c **** void rgblight_effect_rainbow_mood(animation_status_t *anim) {
 1153               		.loc 1 1074 61 is_stmt 1 view -0
 1154               		.cfi_startproc
 1155               		.loc 1 1074 61 is_stmt 0 view .LVU260
 1156 0000 CF93      		push r28
 1157               	.LCFI12:
 1158               		.cfi_def_cfa_offset 3
 1159               		.cfi_offset 28, -2
 1160 0002 DF93      		push r29
 1161               	.LCFI13:
 1162               		.cfi_def_cfa_offset 4
 1163               		.cfi_offset 29, -3
 1164               	/* prologue: function */
 1165               	/* frame size = 0 */
 1166               	/* stack size = 2 */
 1167               	.L__stack_usage = 2
 1168 0004 EC01      		movw r28,r24
1075:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(anim->current_hue, rgblight_config.sat, rgblight_config.val);
 1169               		.loc 1 1075 5 is_stmt 1 view .LVU261
 1170 0006 E0E0      		ldi r30,lo8(rgblight_config)
 1171 0008 F0E0      		ldi r31,hi8(rgblight_config)
 1172 000a 4381      		ldd r20,Z+3
 1173 000c 6281      		ldd r22,Z+2
 1174 000e 8C81      		ldd r24,Y+4
 1175               	.LVL60:
 1176               		.loc 1 1075 5 is_stmt 0 view .LVU262
 1177 0010 0E94 0000 		call rgblight_sethsv_noeeprom_old
 1178               	.LVL61:
1076:quantum/rgblight.c ****     anim->current_hue++;
 1179               		.loc 1 1076 5 is_stmt 1 view .LVU263
 1180               		.loc 1 1076 22 is_stmt 0 view .LVU264
 1181 0014 8C81      		ldd r24,Y+4
 1182 0016 8F5F      		subi r24,lo8(-(1))
 1183 0018 8C83      		std Y+4,r24
 1184               	/* epilogue start */
1077:quantum/rgblight.c **** }
 1185               		.loc 1 1077 1 view .LVU265
 1186 001a DF91      		pop r29
 1187 001c CF91      		pop r28
 1188               	.LVL62:
 1189               		.loc 1 1077 1 view .LVU266
 1190 001e 0895      		ret
 1191               		.cfi_endproc
 1192               	.LFE178:
 1194               		.section	.text.rgblight_effect_rgbtest,"ax",@progbits
 1195               	.global	rgblight_effect_rgbtest
 1197               	rgblight_effect_rgbtest:
 1198               	.LVL63:
 1199               	.LFB183:
1078:quantum/rgblight.c **** #endif
1079:quantum/rgblight.c **** 
1080:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
1081:quantum/rgblight.c **** #    ifndef RGBLIGHT_RAINBOW_SWIRL_RANGE
1082:quantum/rgblight.c **** #        define RGBLIGHT_RAINBOW_SWIRL_RANGE 255
1083:quantum/rgblight.c **** #    endif
1084:quantum/rgblight.c **** 
1085:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_SWIRL_INTERVALS[] PROGMEM = {100, 50, 20};
1086:quantum/rgblight.c **** 
1087:quantum/rgblight.c **** void rgblight_effect_rainbow_swirl(animation_status_t *anim) {
1088:quantum/rgblight.c ****     uint8_t hue;
1089:quantum/rgblight.c ****     uint8_t i;
1090:quantum/rgblight.c **** 
1091:quantum/rgblight.c ****     for (i = 0; i < rgblight_ranges.effect_num_leds; i++) {
1092:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
1093:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
1094:quantum/rgblight.c ****     }
1095:quantum/rgblight.c ****     rgblight_set();
1096:quantum/rgblight.c **** 
1097:quantum/rgblight.c ****     if (anim->delta % 2) {
1098:quantum/rgblight.c ****         anim->current_hue++;
1099:quantum/rgblight.c ****     } else {
1100:quantum/rgblight.c ****         anim->current_hue--;
1101:quantum/rgblight.c ****     }
1102:quantum/rgblight.c **** }
1103:quantum/rgblight.c **** #endif
1104:quantum/rgblight.c **** 
1105:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_SNAKE
1106:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_SNAKE_INTERVALS[] PROGMEM = {100, 50, 20};
1107:quantum/rgblight.c **** 
1108:quantum/rgblight.c **** void rgblight_effect_snake(animation_status_t *anim) {
1109:quantum/rgblight.c ****     static uint8_t pos = 0;
1110:quantum/rgblight.c ****     uint8_t        i, j;
1111:quantum/rgblight.c ****     int8_t         k;
1112:quantum/rgblight.c ****     int8_t         increment = 1;
1113:quantum/rgblight.c **** 
1114:quantum/rgblight.c ****     if (anim->delta % 2) {
1115:quantum/rgblight.c ****         increment = -1;
1116:quantum/rgblight.c ****     }
1117:quantum/rgblight.c **** 
1118:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1119:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
1120:quantum/rgblight.c ****         if (increment == 1) {
1121:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
1122:quantum/rgblight.c ****         } else {
1123:quantum/rgblight.c ****             pos = 0;
1124:quantum/rgblight.c ****         }
1125:quantum/rgblight.c ****         anim->pos = 1;
1126:quantum/rgblight.c ****     }
1127:quantum/rgblight.c **** #    endif
1128:quantum/rgblight.c **** 
1129:quantum/rgblight.c ****     for (i = 0; i < rgblight_ranges.effect_num_leds; i++) {
1130:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
1131:quantum/rgblight.c ****         ledp->r        = 0;
1132:quantum/rgblight.c ****         ledp->g        = 0;
1133:quantum/rgblight.c ****         ledp->b        = 0;
1134:quantum/rgblight.c **** #    ifdef RGBW
1135:quantum/rgblight.c ****         ledp->w = 0;
1136:quantum/rgblight.c **** #    endif
1137:quantum/rgblight.c ****         for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
1138:quantum/rgblight.c ****             k = pos + j * increment;
1139:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
1140:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
1141:quantum/rgblight.c ****             }
1142:quantum/rgblight.c ****             if (k < 0) {
1143:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
1144:quantum/rgblight.c ****             }
1145:quantum/rgblight.c ****             if (i == k) {
1146:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
1147:quantum/rgblight.c ****             }
1148:quantum/rgblight.c ****         }
1149:quantum/rgblight.c ****     }
1150:quantum/rgblight.c ****     rgblight_set();
1151:quantum/rgblight.c ****     if (increment == 1) {
1152:quantum/rgblight.c ****         if (pos - 1 < 0) {
1153:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
1154:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1155:quantum/rgblight.c ****             anim->pos = 0;
1156:quantum/rgblight.c **** #    endif
1157:quantum/rgblight.c ****         } else {
1158:quantum/rgblight.c ****             pos -= 1;
1159:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1160:quantum/rgblight.c ****             anim->pos = 1;
1161:quantum/rgblight.c **** #    endif
1162:quantum/rgblight.c ****         }
1163:quantum/rgblight.c ****     } else {
1164:quantum/rgblight.c ****         pos = (pos + 1) % rgblight_ranges.effect_num_leds;
1165:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1166:quantum/rgblight.c ****         anim->pos = pos;
1167:quantum/rgblight.c **** #    endif
1168:quantum/rgblight.c ****     }
1169:quantum/rgblight.c **** }
1170:quantum/rgblight.c **** #endif
1171:quantum/rgblight.c **** 
1172:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_KNIGHT
1173:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_KNIGHT_INTERVALS[] PROGMEM = {127, 63, 31};
1174:quantum/rgblight.c **** 
1175:quantum/rgblight.c **** void rgblight_effect_knight(animation_status_t *anim) {
1176:quantum/rgblight.c ****     static int8_t low_bound  = 0;
1177:quantum/rgblight.c ****     static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1178:quantum/rgblight.c ****     static int8_t increment  = 1;
1179:quantum/rgblight.c ****     uint8_t       i, cur;
1180:quantum/rgblight.c **** 
1181:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1182:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
1183:quantum/rgblight.c ****         anim->pos  = 1;
1184:quantum/rgblight.c ****         low_bound  = 0;
1185:quantum/rgblight.c ****         high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1186:quantum/rgblight.c ****         increment  = 1;
1187:quantum/rgblight.c ****     }
1188:quantum/rgblight.c **** #    endif
1189:quantum/rgblight.c ****     // Set all the LEDs to 0
1190:quantum/rgblight.c ****     for (i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++) {
1191:quantum/rgblight.c ****         led[i].r = 0;
1192:quantum/rgblight.c ****         led[i].g = 0;
1193:quantum/rgblight.c ****         led[i].b = 0;
1194:quantum/rgblight.c **** #    ifdef RGBW
1195:quantum/rgblight.c ****         led[i].w = 0;
1196:quantum/rgblight.c **** #    endif
1197:quantum/rgblight.c ****     }
1198:quantum/rgblight.c ****     // Determine which LEDs should be lit up
1199:quantum/rgblight.c ****     for (i = 0; i < RGBLIGHT_EFFECT_KNIGHT_LED_NUM; i++) {
1200:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
1201:quantum/rgblight.c **** 
1202:quantum/rgblight.c ****         if (i >= low_bound && i <= high_bound) {
1203:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
1204:quantum/rgblight.c ****         } else {
1205:quantum/rgblight.c ****             led[cur].r = 0;
1206:quantum/rgblight.c ****             led[cur].g = 0;
1207:quantum/rgblight.c ****             led[cur].b = 0;
1208:quantum/rgblight.c **** #    ifdef RGBW
1209:quantum/rgblight.c ****             led[cur].w = 0;
1210:quantum/rgblight.c **** #    endif
1211:quantum/rgblight.c ****         }
1212:quantum/rgblight.c ****     }
1213:quantum/rgblight.c ****     rgblight_set();
1214:quantum/rgblight.c **** 
1215:quantum/rgblight.c ****     // Move from low_bound to high_bound changing the direction we increment each
1216:quantum/rgblight.c ****     // time a boundary is hit.
1217:quantum/rgblight.c ****     low_bound += increment;
1218:quantum/rgblight.c ****     high_bound += increment;
1219:quantum/rgblight.c **** 
1220:quantum/rgblight.c ****     if (high_bound <= 0 || low_bound >= RGBLIGHT_EFFECT_KNIGHT_LED_NUM - 1) {
1221:quantum/rgblight.c ****         increment = -increment;
1222:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1223:quantum/rgblight.c ****         if (increment == 1) {
1224:quantum/rgblight.c ****             anim->pos = 0;
1225:quantum/rgblight.c ****         }
1226:quantum/rgblight.c **** #    endif
1227:quantum/rgblight.c ****     }
1228:quantum/rgblight.c **** }
1229:quantum/rgblight.c **** #endif
1230:quantum/rgblight.c **** 
1231:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_CHRISTMAS
1232:quantum/rgblight.c **** #    define CUBED(x) ((x) * (x) * (x))
1233:quantum/rgblight.c **** 
1234:quantum/rgblight.c **** /**
1235:quantum/rgblight.c ****  * Christmas lights effect, with a smooth animation between red & green.
1236:quantum/rgblight.c ****  */
1237:quantum/rgblight.c **** void rgblight_effect_christmas(animation_status_t *anim) {
1238:quantum/rgblight.c ****     static int8_t increment = 1;
1239:quantum/rgblight.c ****     const uint8_t max_pos   = 32;
1240:quantum/rgblight.c ****     const uint8_t hue_green = 85;
1241:quantum/rgblight.c **** 
1242:quantum/rgblight.c ****     uint32_t xa;
1243:quantum/rgblight.c ****     uint8_t  hue, val;
1244:quantum/rgblight.c ****     uint8_t  i;
1245:quantum/rgblight.c **** 
1246:quantum/rgblight.c ****     // The effect works by animating anim->pos from 0 to 32 and back to 0.
1247:quantum/rgblight.c ****     // The pos is used in a cubic bezier formula to ease-in-out between red and green, leaving the 
1248:quantum/rgblight.c ****     xa  = CUBED((uint32_t)anim->pos);
1249:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
1250:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
1251:quantum/rgblight.c ****     val = 255 - (3 * (hue < hue_green / 2 ? hue : hue_green - hue) / 2);
1252:quantum/rgblight.c **** 
1253:quantum/rgblight.c ****     for (i = 0; i < rgblight_ranges.effect_num_leds; i++) {
1254:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
1255:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
1256:quantum/rgblight.c ****     }
1257:quantum/rgblight.c ****     rgblight_set();
1258:quantum/rgblight.c **** 
1259:quantum/rgblight.c ****     if (anim->pos == 0) {
1260:quantum/rgblight.c ****         increment = 1;
1261:quantum/rgblight.c ****     } else if (anim->pos == max_pos) {
1262:quantum/rgblight.c ****         increment = -1;
1263:quantum/rgblight.c ****     }
1264:quantum/rgblight.c ****     anim->pos += increment;
1265:quantum/rgblight.c **** }
1266:quantum/rgblight.c **** #endif
1267:quantum/rgblight.c **** 
1268:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RGB_TEST
1269:quantum/rgblight.c **** __attribute__((weak)) const uint16_t RGBLED_RGBTEST_INTERVALS[] PROGMEM = {1024};
1270:quantum/rgblight.c **** 
1271:quantum/rgblight.c **** void rgblight_effect_rgbtest(animation_status_t *anim) {
 1200               		.loc 1 1271 56 is_stmt 1 view -0
 1201               		.cfi_startproc
 1202               		.loc 1 1271 56 is_stmt 0 view .LVU268
 1203 0000 0F93      		push r16
 1204               	.LCFI14:
 1205               		.cfi_def_cfa_offset 3
 1206               		.cfi_offset 16, -2
 1207 0002 1F93      		push r17
 1208               	.LCFI15:
 1209               		.cfi_def_cfa_offset 4
 1210               		.cfi_offset 17, -3
 1211 0004 CF93      		push r28
 1212               	.LCFI16:
 1213               		.cfi_def_cfa_offset 5
 1214               		.cfi_offset 28, -4
 1215 0006 DF93      		push r29
 1216               	.LCFI17:
 1217               		.cfi_def_cfa_offset 6
 1218               		.cfi_offset 29, -5
 1219 0008 00D0      		rcall .
 1220 000a 0F92      		push __tmp_reg__
 1221               	.LCFI18:
 1222               		.cfi_def_cfa_offset 9
 1223 000c CDB7      		in r28,__SP_L__
 1224 000e DEB7      		in r29,__SP_H__
 1225               	.LCFI19:
 1226               		.cfi_def_cfa_register 28
 1227               	/* prologue: function */
 1228               	/* frame size = 3 */
 1229               	/* stack size = 7 */
 1230               	.L__stack_usage = 7
 1231 0010 8C01      		movw r16,r24
1272:quantum/rgblight.c ****     static uint8_t maxval = 0;
 1232               		.loc 1 1272 5 is_stmt 1 view .LVU269
1273:quantum/rgblight.c ****     uint8_t        g;
 1233               		.loc 1 1273 5 view .LVU270
1274:quantum/rgblight.c ****     uint8_t        r;
 1234               		.loc 1 1274 5 view .LVU271
1275:quantum/rgblight.c ****     uint8_t        b;
 1235               		.loc 1 1275 5 view .LVU272
1276:quantum/rgblight.c **** 
1277:quantum/rgblight.c ****     if (maxval == 0) {
 1236               		.loc 1 1277 5 view .LVU273
 1237               		.loc 1 1277 8 is_stmt 0 view .LVU274
 1238 0012 8091 0000 		lds r24,maxval.3481
 1239               	.LVL64:
 1240               		.loc 1 1277 8 view .LVU275
 1241 0016 8111      		cpse r24,__zero_reg__
 1242 0018 00C0      		rjmp .L63
 1243               	.LBB40:
1278:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1244               		.loc 1 1278 9 is_stmt 1 view .LVU276
1279:quantum/rgblight.c ****         sethsv(0, 255, RGBLIGHT_LIMIT_VAL, &tmp_led);
 1245               		.loc 1 1279 9 view .LVU277
 1246               	.LVL65:
 1247               	.LBB41:
 1248               	.LBI41:
 162:quantum/rgblight.c **** 
 1249               		.loc 1 162 6 view .LVU278
 1250               	.LBB42:
 162:quantum/rgblight.c **** 
 1251               		.loc 1 162 70 view .LVU279
 1252 001a 9E01      		movw r18,r28
 1253 001c 2F5F      		subi r18,-1
 1254 001e 3F4F      		sbci r19,-1
 1255 0020 4FEF      		ldi r20,lo8(-1)
 1256 0022 6FEF      		ldi r22,lo8(-1)
 1257 0024 0E94 0000 		call sethsv_raw
 1258               	.LVL66:
 162:quantum/rgblight.c **** 
 1259               		.loc 1 162 70 is_stmt 0 view .LVU280
 1260               	.LBE42:
 1261               	.LBE41:
1280:quantum/rgblight.c ****         maxval = tmp_led.r;
 1262               		.loc 1 1280 9 is_stmt 1 view .LVU281
 1263               		.loc 1 1280 16 is_stmt 0 view .LVU282
 1264 0028 8A81      		ldd r24,Y+2
 1265 002a 8093 0000 		sts maxval.3481,r24
 1266               	.L63:
 1267               	.LBE40:
1281:quantum/rgblight.c ****     }
1282:quantum/rgblight.c ****     g = r = b = 0;
 1268               		.loc 1 1282 5 is_stmt 1 view .LVU283
 1269               	.LVL67:
1283:quantum/rgblight.c ****     switch (anim->pos) {
 1270               		.loc 1 1283 5 view .LVU284
 1271               		.loc 1 1283 17 is_stmt 0 view .LVU285
 1272 002e F801      		movw r30,r16
 1273 0030 6481      		ldd r22,Z+4
 1274               		.loc 1 1283 5 view .LVU286
 1275 0032 6130      		cpi r22,lo8(1)
 1276 0034 01F0      		breq .L64
1284:quantum/rgblight.c ****         case 0:
1285:quantum/rgblight.c ****             r = maxval;
 1277               		.loc 1 1285 15 view .LVU287
 1278 0036 8091 0000 		lds r24,maxval.3481
 1279               	.LVL68:
1286:quantum/rgblight.c ****             break;
 1280               		.loc 1 1286 13 is_stmt 1 view .LVU288
1282:quantum/rgblight.c ****     switch (anim->pos) {
 1281               		.loc 1 1282 15 is_stmt 0 view .LVU289
 1282 003a 40E0      		ldi r20,0
1283:quantum/rgblight.c ****         case 0:
 1283               		.loc 1 1283 5 view .LVU290
 1284 003c 6623      		tst r22
 1285 003e 01F0      		breq .L67
1282:quantum/rgblight.c ****     switch (anim->pos) {
 1286               		.loc 1 1282 15 view .LVU291
 1287 0040 40E0      		ldi r20,0
1283:quantum/rgblight.c ****         case 0:
 1288               		.loc 1 1283 5 view .LVU292
 1289 0042 6230      		cpi r22,lo8(2)
 1290 0044 01F4      		brne .L68
1287:quantum/rgblight.c ****         case 1:
1288:quantum/rgblight.c ****             g = maxval;
1289:quantum/rgblight.c ****             break;
1290:quantum/rgblight.c ****         case 2:
1291:quantum/rgblight.c ****             b = maxval;
 1291               		.loc 1 1291 13 is_stmt 1 view .LVU293
 1292               		.loc 1 1291 15 is_stmt 0 view .LVU294
 1293 0046 4091 0000 		lds r20,maxval.3481
 1294               	.L68:
 1295               	.LVL69:
1292:quantum/rgblight.c ****             break;
 1296               		.loc 1 1292 13 is_stmt 1 view .LVU295
1282:quantum/rgblight.c ****     switch (anim->pos) {
 1297               		.loc 1 1282 11 is_stmt 0 view .LVU296
 1298 004a 80E0      		ldi r24,0
 1299               	.LVL70:
1282:quantum/rgblight.c ****     switch (anim->pos) {
 1300               		.loc 1 1282 7 view .LVU297
 1301 004c 60E0      		ldi r22,0
 1302               		.loc 1 1292 13 view .LVU298
 1303 004e 00C0      		rjmp .L67
 1304               	.LVL71:
 1305               	.L64:
1288:quantum/rgblight.c ****             break;
 1306               		.loc 1 1288 13 is_stmt 1 view .LVU299
1288:quantum/rgblight.c ****             break;
 1307               		.loc 1 1288 15 is_stmt 0 view .LVU300
 1308 0050 6091 0000 		lds r22,maxval.3481
 1309               	.LVL72:
1289:quantum/rgblight.c ****         case 2:
 1310               		.loc 1 1289 13 is_stmt 1 view .LVU301
1282:quantum/rgblight.c ****     switch (anim->pos) {
 1311               		.loc 1 1282 15 is_stmt 0 view .LVU302
 1312 0054 40E0      		ldi r20,0
1282:quantum/rgblight.c ****     switch (anim->pos) {
 1313               		.loc 1 1282 11 view .LVU303
 1314 0056 80E0      		ldi r24,0
 1315               	.LVL73:
 1316               	.L67:
1293:quantum/rgblight.c ****     }
1294:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 1317               		.loc 1 1294 5 is_stmt 1 view .LVU304
 1318 0058 0E94 0000 		call rgblight_setrgb
 1319               	.LVL74:
1295:quantum/rgblight.c ****     anim->pos = (anim->pos + 1) % 3;
 1320               		.loc 1 1295 5 view .LVU305
 1321               		.loc 1 1295 22 is_stmt 0 view .LVU306
 1322 005c F801      		movw r30,r16
 1323 005e 8481      		ldd r24,Z+4
 1324 0060 90E0      		ldi r25,0
 1325               		.loc 1 1295 28 view .LVU307
 1326 0062 0196      		adiw r24,1
 1327               		.loc 1 1295 33 view .LVU308
 1328 0064 63E0      		ldi r22,lo8(3)
 1329 0066 70E0      		ldi r23,0
 1330 0068 0E94 0000 		call __divmodhi4
 1331               		.loc 1 1295 15 view .LVU309
 1332 006c 8483      		std Z+4,r24
 1333               	/* epilogue start */
1296:quantum/rgblight.c **** }
 1334               		.loc 1 1296 1 view .LVU310
 1335 006e 0F90      		pop __tmp_reg__
 1336 0070 0F90      		pop __tmp_reg__
 1337 0072 0F90      		pop __tmp_reg__
 1338 0074 DF91      		pop r29
 1339 0076 CF91      		pop r28
 1340 0078 1F91      		pop r17
 1341 007a 0F91      		pop r16
 1342               	.LVL75:
 1343               		.loc 1 1296 1 view .LVU311
 1344 007c 0895      		ret
 1345               		.cfi_endproc
 1346               	.LFE183:
 1348               		.section	.text.rgblight_sethsv_eeprom_helper,"ax",@progbits
 1349               	.global	rgblight_sethsv_eeprom_helper
 1351               	rgblight_sethsv_eeprom_helper:
 1352               	.LVL76:
 1353               	.LFB144:
 479:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1354               		.loc 1 479 97 is_stmt 1 view -0
 1355               		.cfi_startproc
 479:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1356               		.loc 1 479 97 is_stmt 0 view .LVU313
 1357 0000 AF92      		push r10
 1358               	.LCFI20:
 1359               		.cfi_def_cfa_offset 3
 1360               		.cfi_offset 10, -2
 1361 0002 BF92      		push r11
 1362               	.LCFI21:
 1363               		.cfi_def_cfa_offset 4
 1364               		.cfi_offset 11, -3
 1365 0004 CF92      		push r12
 1366               	.LCFI22:
 1367               		.cfi_def_cfa_offset 5
 1368               		.cfi_offset 12, -4
 1369 0006 DF92      		push r13
 1370               	.LCFI23:
 1371               		.cfi_def_cfa_offset 6
 1372               		.cfi_offset 13, -5
 1373 0008 EF92      		push r14
 1374               	.LCFI24:
 1375               		.cfi_def_cfa_offset 7
 1376               		.cfi_offset 14, -6
 1377 000a FF92      		push r15
 1378               	.LCFI25:
 1379               		.cfi_def_cfa_offset 8
 1380               		.cfi_offset 15, -7
 1381 000c 0F93      		push r16
 1382               	.LCFI26:
 1383               		.cfi_def_cfa_offset 9
 1384               		.cfi_offset 16, -8
 1385 000e 1F93      		push r17
 1386               	.LCFI27:
 1387               		.cfi_def_cfa_offset 10
 1388               		.cfi_offset 17, -9
 1389 0010 CF93      		push r28
 1390               	.LCFI28:
 1391               		.cfi_def_cfa_offset 11
 1392               		.cfi_offset 28, -10
 1393 0012 DF93      		push r29
 1394               	.LCFI29:
 1395               		.cfi_def_cfa_offset 12
 1396               		.cfi_offset 29, -11
 1397 0014 00D0      		rcall .
 1398 0016 0F92      		push __tmp_reg__
 1399               	.LCFI30:
 1400               		.cfi_def_cfa_offset 15
 1401 0018 CDB7      		in r28,__SP_L__
 1402 001a DEB7      		in r29,__SP_H__
 1403               	.LCFI31:
 1404               		.cfi_def_cfa_register 28
 1405               	/* prologue: function */
 1406               	/* frame size = 3 */
 1407               	/* stack size = 13 */
 1408               	.L__stack_usage = 13
 1409 001c 182F      		mov r17,r24
 1410 001e F62E      		mov r15,r22
 1411 0020 042F      		mov r16,r20
 1412 0022 E22E      		mov r14,r18
 480:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1413               		.loc 1 480 5 is_stmt 1 view .LVU314
 480:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1414               		.loc 1 480 9 is_stmt 0 view .LVU315
 1415 0024 9091 0000 		lds r25,rgblight_config
 480:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1416               		.loc 1 480 8 view .LVU316
 1417 0028 90FF      		sbrs r25,0
 1418 002a 00C0      		rjmp .L69
 481:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1419               		.loc 1 481 9 is_stmt 1 view .LVU317
 481:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1420               		.loc 1 481 68 is_stmt 0 view .LVU318
 1421 002c E92F      		mov r30,r25
 1422 002e E695      		lsr r30
 1423 0030 AE2F      		mov r26,r30
 1424 0032 B0E0      		ldi r27,0
 481:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1425               		.loc 1 481 52 view .LVU319
 1426 0034 A050      		subi r26,lo8(-(mode_base_table))
 1427 0036 B040      		sbci r27,hi8(-(mode_base_table))
 1428 0038 8C91      		ld r24,X
 1429               	.LVL77:
 481:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1430               		.loc 1 481 35 view .LVU320
 1431 003a 8093 0000 		sts rgblight_status,r24
 482:quantum/rgblight.c ****             // same static color
 1432               		.loc 1 482 9 is_stmt 1 view .LVU321
 482:quantum/rgblight.c ****             // same static color
 1433               		.loc 1 482 34 is_stmt 0 view .LVU322
 1434 003e 9E7F      		andi r25,lo8(-2)
 482:quantum/rgblight.c ****             // same static color
 1435               		.loc 1 482 12 view .LVU323
 1436 0040 9230      		cpi r25,lo8(2)
 1437 0042 01F4      		brne .L72
 1438               	.LBB52:
 484:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 1439               		.loc 1 484 13 is_stmt 1 view .LVU324
 485:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1440               		.loc 1 485 13 view .LVU325
 1441               	.LVL78:
 1442               	.LBB53:
 1443               	.LBI53:
 162:quantum/rgblight.c **** 
 1444               		.loc 1 162 6 view .LVU326
 1445               	.LBB54:
 162:quantum/rgblight.c **** 
 1446               		.loc 1 162 70 view .LVU327
 1447 0044 9E01      		movw r18,r28
 1448               	.LVL79:
 162:quantum/rgblight.c **** 
 1449               		.loc 1 162 70 is_stmt 0 view .LVU328
 1450 0046 2F5F      		subi r18,-1
 1451 0048 3F4F      		sbci r19,-1
 1452 004a 812F      		mov r24,r17
 1453 004c 0E94 0000 		call sethsv_raw
 1454               	.LVL80:
 162:quantum/rgblight.c **** 
 1455               		.loc 1 162 70 view .LVU329
 1456               	.LBE54:
 1457               	.LBE53:
 486:quantum/rgblight.c ****         } else {
 1458               		.loc 1 486 13 is_stmt 1 view .LVU330
 1459 0050 4B81      		ldd r20,Y+3
 1460 0052 6981      		ldd r22,Y+1
 1461 0054 8A81      		ldd r24,Y+2
 1462 0056 0E94 0000 		call rgblight_setrgb
 1463               	.LVL81:
 1464               	.L73:
 486:quantum/rgblight.c ****         } else {
 1465               		.loc 1 486 13 is_stmt 0 view .LVU331
 1466               	.LBE52:
 539:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1467               		.loc 1 539 9 is_stmt 1 view .LVU332
 539:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1468               		.loc 1 539 29 is_stmt 0 view .LVU333
 1469 005a 1093 0000 		sts rgblight_config+1,r17
 540:quantum/rgblight.c ****         rgblight_config.val = val;
 1470               		.loc 1 540 9 is_stmt 1 view .LVU334
 540:quantum/rgblight.c ****         rgblight_config.val = val;
 1471               		.loc 1 540 29 is_stmt 0 view .LVU335
 1472 005e F092 0000 		sts rgblight_config+2,r15
 541:quantum/rgblight.c ****         if (write_to_eeprom) {
 1473               		.loc 1 541 9 is_stmt 1 view .LVU336
 541:quantum/rgblight.c ****         if (write_to_eeprom) {
 1474               		.loc 1 541 29 is_stmt 0 view .LVU337
 1475 0062 0093 0000 		sts rgblight_config+3,r16
 542:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1476               		.loc 1 542 9 is_stmt 1 view .LVU338
 542:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1477               		.loc 1 542 12 is_stmt 0 view .LVU339
 1478 0066 EE20      		tst r14
 1479 0068 01F0      		breq .L69
 543:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 1480               		.loc 1 543 13 is_stmt 1 view .LVU340
 1481 006a 6091 0000 		lds r22,rgblight_config
 1482 006e 7091 0000 		lds r23,rgblight_config+1
 1483 0072 8091 0000 		lds r24,rgblight_config+2
 1484 0076 9091 0000 		lds r25,rgblight_config+3
 1485 007a 0E94 0000 		call eeconfig_update_rgblight
 1486               	.LVL82:
 544:quantum/rgblight.c ****         } else {
 1487               		.loc 1 544 124 view .LVU341
 546:quantum/rgblight.c ****         }
 1488               		.loc 1 546 126 view .LVU342
 1489               	.L69:
 1490               	/* epilogue start */
 549:quantum/rgblight.c **** 
 1491               		.loc 1 549 1 is_stmt 0 view .LVU343
 1492 007e 0F90      		pop __tmp_reg__
 1493 0080 0F90      		pop __tmp_reg__
 1494 0082 0F90      		pop __tmp_reg__
 1495 0084 DF91      		pop r29
 1496 0086 CF91      		pop r28
 1497 0088 1F91      		pop r17
 1498               	.LVL83:
 549:quantum/rgblight.c **** 
 1499               		.loc 1 549 1 view .LVU344
 1500 008a 0F91      		pop r16
 1501               	.LVL84:
 549:quantum/rgblight.c **** 
 1502               		.loc 1 549 1 view .LVU345
 1503 008c FF90      		pop r15
 1504               	.LVL85:
 549:quantum/rgblight.c **** 
 1505               		.loc 1 549 1 view .LVU346
 1506 008e EF90      		pop r14
 1507               	.LVL86:
 549:quantum/rgblight.c **** 
 1508               		.loc 1 549 1 view .LVU347
 1509 0090 DF90      		pop r13
 1510 0092 CF90      		pop r12
 1511 0094 BF90      		pop r11
 1512 0096 AF90      		pop r10
 1513 0098 0895      		ret
 1514               	.LVL87:
 1515               	.L72:
 489:quantum/rgblight.c ****             }
 1516               		.loc 1 489 13 is_stmt 1 view .LVU348
 492:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 1517               		.loc 1 492 18 view .LVU349
 492:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 1518               		.loc 1 492 21 is_stmt 0 view .LVU350
 1519 009a 8230      		cpi r24,lo8(2)
 1520 009c 01F4      		brne .L74
 494:quantum/rgblight.c ****             }
 1521               		.loc 1 494 17 is_stmt 1 view .LVU351
 494:quantum/rgblight.c ****             }
 1522               		.loc 1 494 21 is_stmt 0 view .LVU352
 1523 009e 0091 0000 		lds r16,rgblight_config+3
 1524               	.LVL88:
 494:quantum/rgblight.c ****             }
 1525               		.loc 1 494 21 view .LVU353
 1526 00a2 00C0      		rjmp .L73
 1527               	.L74:
 498:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 1528               		.loc 1 498 18 is_stmt 1 view .LVU354
 498:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 1529               		.loc 1 498 21 is_stmt 0 view .LVU355
 1530 00a4 8630      		cpi r24,lo8(6)
 1531 00a6 01F4      		brne .L75
 1532               	.L76:
 500:quantum/rgblight.c ****             }
 1533               		.loc 1 500 17 is_stmt 1 view .LVU356
 500:quantum/rgblight.c ****             }
 1534               		.loc 1 500 21 is_stmt 0 view .LVU357
 1535 00a8 1091 0000 		lds r17,rgblight_config+1
 1536               	.LVL89:
 500:quantum/rgblight.c ****             }
 1537               		.loc 1 500 21 view .LVU358
 1538 00ac 00C0      		rjmp .L73
 1539               	.L75:
 504:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 1540               		.loc 1 504 18 is_stmt 1 view .LVU359
 504:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 1541               		.loc 1 504 21 is_stmt 0 view .LVU360
 1542 00ae 8930      		cpi r24,lo8(9)
 1543 00b0 01F0      		breq .L76
 510:quantum/rgblight.c ****                 // static gradient
 1544               		.loc 1 510 18 is_stmt 1 view .LVU361
 510:quantum/rgblight.c ****                 // static gradient
 1545               		.loc 1 510 21 is_stmt 0 view .LVU362
 1546 00b2 8931      		cpi r24,lo8(25)
 1547 00b4 01F4      		brne .L73
 1548               	.LBB55:
 512:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 1549               		.loc 1 512 17 is_stmt 1 view .LVU363
 512:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 1550               		.loc 1 512 25 is_stmt 0 view .LVU364
 1551 00b6 E951      		subi r30,lo8(-(-25))
 1552               	.LVL90:
 513:quantum/rgblight.c **** #    ifdef __AVR__
 1553               		.loc 1 513 17 is_stmt 1 view .LVU365
 513:quantum/rgblight.c **** #    ifdef __AVR__
 1554               		.loc 1 513 49 is_stmt 0 view .LVU366
 1555 00b8 8E2F      		mov r24,r30
 1556 00ba 8170      		andi r24,lo8(1)
 1557 00bc D82E      		mov r13,r24
 1558               	.LVL91:
 516:quantum/rgblight.c **** #    else
 1559               		.loc 1 516 17 is_stmt 1 view .LVU367
 1560               	.LBB56:
 516:quantum/rgblight.c **** #    else
 1561               		.loc 1 516 33 view .LVU368
 1562 00be E695      		lsr r30
 1563               	.LVL92:
 516:quantum/rgblight.c **** #    else
 1564               		.loc 1 516 33 is_stmt 0 view .LVU369
 1565 00c0 F0E0      		ldi r31,0
 1566 00c2 E050      		subi r30,lo8(-(RGBLED_GRADIENT_RANGES))
 1567 00c4 F040      		sbci r31,hi8(-(RGBLED_GRADIENT_RANGES))
 1568               	.LVL93:
 516:quantum/rgblight.c **** #    else
 1569               		.loc 1 516 33 is_stmt 1 view .LVU370
 516:quantum/rgblight.c **** #    else
 1570               		.loc 1 516 33 view .LVU371
 1571               	/* #APP */
 1572               	 ;  516 "quantum/rgblight.c" 1
 1573 00c6 A590      		lpm r10, Z+
 1574 00c8 B490      		lpm r11, Z
 1575               		
 1576               	 ;  0 "" 2
 1577               	.LVL94:
 516:quantum/rgblight.c **** #    else
 1578               		.loc 1 516 33 view .LVU372
 516:quantum/rgblight.c **** #    else
 1579               		.loc 1 516 33 is_stmt 0 view .LVU373
 1580               	/* #NOAPP */
 1581               	.LBE56:
 520:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1582               		.loc 1 520 17 is_stmt 1 view .LVU374
 1583               	.LBB57:
 520:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1584               		.loc 1 520 22 view .LVU375
 520:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1585               		.loc 1 520 30 is_stmt 0 view .LVU376
 1586 00ca C12C      		mov r12,__zero_reg__
 1587               	.LBB58:
 521:quantum/rgblight.c ****                     if (direction) {
 1588               		.loc 1 521 49 view .LVU377
 1589 00cc BB24      		clr r11
 1590               	.LVL95:
 1591               	.L77:
 521:quantum/rgblight.c ****                     if (direction) {
 1592               		.loc 1 521 49 view .LVU378
 1593               	.LBE58:
 520:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1594               		.loc 1 520 37 is_stmt 1 discriminator 1 view .LVU379
 520:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1595               		.loc 1 520 56 is_stmt 0 discriminator 1 view .LVU380
 1596 00ce 6091 0000 		lds r22,rgblight_ranges+4
 520:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1597               		.loc 1 520 17 discriminator 1 view .LVU381
 1598 00d2 C616      		cp r12,r22
 1599 00d4 00F0      		brlo .L80
 1600               	.LBE57:
 530:quantum/rgblight.c ****             }
 1601               		.loc 1 530 17 is_stmt 1 view .LVU382
 1602 00d6 0E94 0000 		call rgblight_set
 1603               	.LVL96:
 1604 00da 00C0      		rjmp .L73
 1605               	.L80:
 1606               	.LBB65:
 1607               	.LBB63:
 521:quantum/rgblight.c ****                     if (direction) {
 1608               		.loc 1 521 21 view .LVU383
 521:quantum/rgblight.c ****                     if (direction) {
 1609               		.loc 1 521 37 is_stmt 0 view .LVU384
 1610 00dc 2C2D      		mov r18,r12
 1611 00de 30E0      		ldi r19,0
 521:quantum/rgblight.c ****                     if (direction) {
 1612               		.loc 1 521 49 view .LVU385
 1613 00e0 A29E      		mul r10,r18
 1614 00e2 C001      		movw r24,r0
 1615 00e4 A39E      		mul r10,r19
 1616 00e6 900D      		add r25,r0
 1617 00e8 B29E      		mul r11,r18
 1618 00ea 900D      		add r25,r0
 1619 00ec 1124      		clr r1
 521:quantum/rgblight.c ****                     if (direction) {
 1620               		.loc 1 521 85 view .LVU386
 1621 00ee 70E0      		ldi r23,0
 521:quantum/rgblight.c ****                     if (direction) {
 1622               		.loc 1 521 68 view .LVU387
 1623 00f0 0E94 0000 		call __udivmodhi4
 1624               	.LVL97:
 522:quantum/rgblight.c ****                         _hue = hue + _hue;
 1625               		.loc 1 522 21 is_stmt 1 view .LVU388
 523:quantum/rgblight.c ****                     } else {
 1626               		.loc 1 523 30 is_stmt 0 view .LVU389
 1627 00f4 812F      		mov r24,r17
 522:quantum/rgblight.c ****                         _hue = hue + _hue;
 1628               		.loc 1 522 24 view .LVU390
 1629 00f6 D110      		cpse r13,__zero_reg__
 1630 00f8 00C0      		rjmp .L78
 523:quantum/rgblight.c ****                     } else {
 1631               		.loc 1 523 25 is_stmt 1 view .LVU391
 523:quantum/rgblight.c ****                     } else {
 1632               		.loc 1 523 30 is_stmt 0 view .LVU392
 1633 00fa 860F      		add r24,r22
 1634               	.LVL98:
 1635               	.L79:
 527:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_start_pos]);
 1636               		.loc 1 527 98 is_stmt 1 discriminator 2 view .LVU393
 528:quantum/rgblight.c ****                 }
 1637               		.loc 1 528 21 discriminator 2 view .LVU394
 1638               	.LBB59:
 1639               	.LBI59:
 162:quantum/rgblight.c **** 
 1640               		.loc 1 162 6 discriminator 2 view .LVU395
 1641               	.LBB60:
 162:quantum/rgblight.c **** 
 1642               		.loc 1 162 70 discriminator 2 view .LVU396
 1643               	.LBE60:
 1644               	.LBE59:
 528:quantum/rgblight.c ****                 }
 1645               		.loc 1 528 80 is_stmt 0 discriminator 2 view .LVU397
 1646 00fc 4091 0000 		lds r20,rgblight_ranges+2
 528:quantum/rgblight.c ****                 }
 1647               		.loc 1 528 63 discriminator 2 view .LVU398
 1648 0100 420F      		add r20,r18
 1649 0102 532F      		mov r21,r19
 1650 0104 511D      		adc r21,__zero_reg__
 528:quantum/rgblight.c ****                 }
 1651               		.loc 1 528 21 discriminator 2 view .LVU399
 1652 0106 9A01      		movw r18,r20
 1653 0108 220F      		lsl r18
 1654 010a 331F      		rol r19
 1655 010c 240F      		add r18,r20
 1656 010e 351F      		adc r19,r21
 1657 0110 2050      		subi r18,lo8(-(led))
 1658 0112 3040      		sbci r19,hi8(-(led))
 1659               	.LBB62:
 1660               	.LBB61:
 162:quantum/rgblight.c **** 
 1661               		.loc 1 162 70 discriminator 2 view .LVU400
 1662 0114 402F      		mov r20,r16
 1663 0116 6F2D      		mov r22,r15
 1664 0118 0E94 0000 		call sethsv_raw
 1665               	.LVL99:
 162:quantum/rgblight.c **** 
 1666               		.loc 1 162 70 discriminator 2 view .LVU401
 1667               	.LBE61:
 1668               	.LBE62:
 1669               	.LBE63:
 520:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1670               		.loc 1 520 74 is_stmt 1 discriminator 2 view .LVU402
 520:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1671               		.loc 1 520 75 is_stmt 0 discriminator 2 view .LVU403
 1672 011c C394      		inc r12
 1673               	.LVL100:
 520:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1674               		.loc 1 520 75 discriminator 2 view .LVU404
 1675 011e 00C0      		rjmp .L77
 1676               	.LVL101:
 1677               	.L78:
 1678               	.LBB64:
 525:quantum/rgblight.c ****                     }
 1679               		.loc 1 525 25 is_stmt 1 view .LVU405
 525:quantum/rgblight.c ****                     }
 1680               		.loc 1 525 30 is_stmt 0 view .LVU406
 1681 0120 861B      		sub r24,r22
 1682               	.LVL102:
 525:quantum/rgblight.c ****                     }
 1683               		.loc 1 525 30 view .LVU407
 1684 0122 00C0      		rjmp .L79
 1685               	.LBE64:
 1686               	.LBE65:
 1687               	.LBE55:
 1688               		.cfi_endproc
 1689               	.LFE144:
 1691               		.section	.text.rgblight_increase_hue_helper,"ax",@progbits
 1692               	.global	rgblight_increase_hue_helper
 1694               	rgblight_increase_hue_helper:
 1695               	.LVL103:
 1696               	.LFB119:
 414:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 1697               		.loc 1 414 57 is_stmt 1 view -0
 1698               		.cfi_startproc
 1699               	/* prologue: function */
 1700               	/* frame size = 0 */
 1701               	/* stack size = 0 */
 1702               	.L__stack_usage = 0
 415:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1703               		.loc 1 415 5 view .LVU409
 416:quantum/rgblight.c **** }
 1704               		.loc 1 416 5 view .LVU410
 1705 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1706 0002 F0E0      		ldi r31,hi8(rgblight_config)
 415:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1707               		.loc 1 415 13 is_stmt 0 view .LVU411
 1708 0004 9181      		ldd r25,Z+1
 416:quantum/rgblight.c **** }
 1709               		.loc 1 416 5 view .LVU412
 1710 0006 282F      		mov r18,r24
 1711 0008 4381      		ldd r20,Z+3
 1712 000a 6281      		ldd r22,Z+2
 1713 000c 88E0      		ldi r24,lo8(8)
 1714               	.LVL104:
 416:quantum/rgblight.c **** }
 1715               		.loc 1 416 5 view .LVU413
 1716 000e 890F      		add r24,r25
 1717               	.LVL105:
 416:quantum/rgblight.c **** }
 1718               		.loc 1 416 5 view .LVU414
 1719 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1720               	.LVL106:
 416:quantum/rgblight.c **** }
 1721               		.loc 1 416 5 view .LVU415
 1722               		.cfi_endproc
 1723               	.LFE119:
 1725               		.section	.text.rgblight_increase_hue_noeeprom,"ax",@progbits
 1726               	.global	rgblight_increase_hue_noeeprom
 1728               	rgblight_increase_hue_noeeprom:
 1729               	.LFB120:
 418:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1730               		.loc 1 418 43 is_stmt 1 view -0
 1731               		.cfi_startproc
 1732               	/* prologue: function */
 1733               	/* frame size = 0 */
 1734               	/* stack size = 0 */
 1735               	.L__stack_usage = 0
 418:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1736               		.loc 1 418 45 view .LVU417
 1737 0000 80E0      		ldi r24,0
 1738 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1739               	.LVL107:
 1740               		.cfi_endproc
 1741               	.LFE120:
 1743               		.section	.text.rgblight_increase_hue,"ax",@progbits
 1744               	.global	rgblight_increase_hue
 1746               	rgblight_increase_hue:
 1747               	.LFB121:
 419:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1748               		.loc 1 419 34 view -0
 1749               		.cfi_startproc
 1750               	/* prologue: function */
 1751               	/* frame size = 0 */
 1752               	/* stack size = 0 */
 1753               	.L__stack_usage = 0
 419:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1754               		.loc 1 419 36 view .LVU419
 1755 0000 81E0      		ldi r24,lo8(1)
 1756 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1757               	.LVL108:
 1758               		.cfi_endproc
 1759               	.LFE121:
 1761               		.section	.text.rgblight_decrease_hue_helper,"ax",@progbits
 1762               	.global	rgblight_decrease_hue_helper
 1764               	rgblight_decrease_hue_helper:
 1765               	.LVL109:
 1766               	.LFB122:
 420:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 1767               		.loc 1 420 57 view -0
 1768               		.cfi_startproc
 1769               	/* prologue: function */
 1770               	/* frame size = 0 */
 1771               	/* stack size = 0 */
 1772               	.L__stack_usage = 0
 421:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1773               		.loc 1 421 5 view .LVU421
 422:quantum/rgblight.c **** }
 1774               		.loc 1 422 5 view .LVU422
 1775 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1776 0002 F0E0      		ldi r31,hi8(rgblight_config)
 421:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1777               		.loc 1 421 13 is_stmt 0 view .LVU423
 1778 0004 9181      		ldd r25,Z+1
 422:quantum/rgblight.c **** }
 1779               		.loc 1 422 5 view .LVU424
 1780 0006 282F      		mov r18,r24
 1781 0008 4381      		ldd r20,Z+3
 1782 000a 6281      		ldd r22,Z+2
 1783 000c 88EF      		ldi r24,lo8(-8)
 1784               	.LVL110:
 422:quantum/rgblight.c **** }
 1785               		.loc 1 422 5 view .LVU425
 1786 000e 890F      		add r24,r25
 1787               	.LVL111:
 422:quantum/rgblight.c **** }
 1788               		.loc 1 422 5 view .LVU426
 1789 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1790               	.LVL112:
 422:quantum/rgblight.c **** }
 1791               		.loc 1 422 5 view .LVU427
 1792               		.cfi_endproc
 1793               	.LFE122:
 1795               		.section	.text.rgblight_decrease_hue_noeeprom,"ax",@progbits
 1796               	.global	rgblight_decrease_hue_noeeprom
 1798               	rgblight_decrease_hue_noeeprom:
 1799               	.LFB123:
 424:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1800               		.loc 1 424 43 is_stmt 1 view -0
 1801               		.cfi_startproc
 1802               	/* prologue: function */
 1803               	/* frame size = 0 */
 1804               	/* stack size = 0 */
 1805               	.L__stack_usage = 0
 424:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1806               		.loc 1 424 45 view .LVU429
 1807 0000 80E0      		ldi r24,0
 1808 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1809               	.LVL113:
 1810               		.cfi_endproc
 1811               	.LFE123:
 1813               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 1814               	.global	rgblight_decrease_hue
 1816               	rgblight_decrease_hue:
 1817               	.LFB124:
 425:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1818               		.loc 1 425 34 view -0
 1819               		.cfi_startproc
 1820               	/* prologue: function */
 1821               	/* frame size = 0 */
 1822               	/* stack size = 0 */
 1823               	.L__stack_usage = 0
 425:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1824               		.loc 1 425 36 view .LVU431
 1825 0000 81E0      		ldi r24,lo8(1)
 1826 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1827               	.LVL114:
 1828               		.cfi_endproc
 1829               	.LFE124:
 1831               		.section	.text.rgblight_increase_sat_helper,"ax",@progbits
 1832               	.global	rgblight_increase_sat_helper
 1834               	rgblight_increase_sat_helper:
 1835               	.LVL115:
 1836               	.LFB125:
 426:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1837               		.loc 1 426 57 view -0
 1838               		.cfi_startproc
 1839               	/* prologue: function */
 1840               	/* frame size = 0 */
 1841               	/* stack size = 0 */
 1842               	.L__stack_usage = 0
 427:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1843               		.loc 1 427 5 view .LVU433
 1844               	.LBB66:
 1845               	.LBI66:
 1846               		.file 2 "./lib/lib8tion/math8.h"
   1:./lib/lib8tion/math8.h **** #ifndef __INC_LIB8TION_MATH_H
   2:./lib/lib8tion/math8.h **** #define __INC_LIB8TION_MATH_H
   3:./lib/lib8tion/math8.h **** 
   4:./lib/lib8tion/math8.h **** #include "scale8.h"
   5:./lib/lib8tion/math8.h **** 
   6:./lib/lib8tion/math8.h **** ///@ingroup lib8tion
   7:./lib/lib8tion/math8.h **** 
   8:./lib/lib8tion/math8.h **** ///@defgroup Math Basic math operations
   9:./lib/lib8tion/math8.h **** /// Fast, efficient 8-bit math functions specifically
  10:./lib/lib8tion/math8.h **** /// designed for high-performance LED programming.
  11:./lib/lib8tion/math8.h **** ///
  12:./lib/lib8tion/math8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  13:./lib/lib8tion/math8.h **** /// implementations provided, using these functions often
  14:./lib/lib8tion/math8.h **** /// results in smaller and faster code than the equivalent
  15:./lib/lib8tion/math8.h **** /// program using plain "C" arithmetic and logic.
  16:./lib/lib8tion/math8.h **** ///@{
  17:./lib/lib8tion/math8.h **** 
  18:./lib/lib8tion/math8.h **** 
  19:./lib/lib8tion/math8.h **** /// add one byte to another, saturating at 0xFF
  20:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  21:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  22:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  23:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qadd8( uint8_t i, uint8_t j)
 1847               		.loc 2 23 34 view .LVU434
 1848               	.LBB67:
  24:./lib/lib8tion/math8.h **** {
  25:./lib/lib8tion/math8.h **** #if QADD8_C == 1
  26:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
  27:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
  28:./lib/lib8tion/math8.h ****     return t;
  29:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
  30:./lib/lib8tion/math8.h ****     asm volatile(
 1849               		.loc 2 30 5 view .LVU435
 1850               	.LBE67:
 1851               	.LBE66:
 427:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1852               		.loc 1 427 19 is_stmt 0 view .LVU436
 1853 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1854 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1855               	.LBB69:
 1856               	.LBB68:
 1857               		.loc 2 30 5 view .LVU437
 1858 0004 6281      		ldd r22,Z+2
 1859 0006 28E0      		ldi r18,lo8(8)
 1860               	/* #APP */
 1861               	 ;  30 "./lib/lib8tion/math8.h" 1
 1862 0008 620F      		add r22, r18    
 1863 000a 00F4      		brcc L_1447     
 1864 000c 6FEF      		ldi r22, 0xFF  
 1865               		L_1447: 
 1866               	 ;  0 "" 2
 1867               	.LVL116:
  31:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
  32:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  33:./lib/lib8tion/math8.h **** 
  34:./lib/lib8tion/math8.h ****          /* Now test the C flag.
  35:./lib/lib8tion/math8.h ****            If C is clear, we branch around a load of 0xFF into i.
  36:./lib/lib8tion/math8.h ****            If C is set, we go ahead and load 0xFF into i.
  37:./lib/lib8tion/math8.h ****          */
  38:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
  39:./lib/lib8tion/math8.h ****          "ldi %0, 0xFF  \n\t"
  40:./lib/lib8tion/math8.h ****          "L_%=: "
  41:./lib/lib8tion/math8.h ****          : "+a" (i)
  42:./lib/lib8tion/math8.h ****          : "a"  (j) );
  43:./lib/lib8tion/math8.h ****     return i;
 1868               		.loc 2 43 5 is_stmt 1 view .LVU438
 1869               		.loc 2 43 5 is_stmt 0 view .LVU439
 1870               	/* #NOAPP */
 1871               	.LBE68:
 1872               	.LBE69:
 428:quantum/rgblight.c **** }
 1873               		.loc 1 428 5 is_stmt 1 view .LVU440
 1874 000e 282F      		mov r18,r24
 1875 0010 4381      		ldd r20,Z+3
 1876 0012 8181      		ldd r24,Z+1
 1877               	.LVL117:
 428:quantum/rgblight.c **** }
 1878               		.loc 1 428 5 is_stmt 0 view .LVU441
 1879 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1880               	.LVL118:
 428:quantum/rgblight.c **** }
 1881               		.loc 1 428 5 view .LVU442
 1882               		.cfi_endproc
 1883               	.LFE125:
 1885               		.section	.text.rgblight_increase_sat_noeeprom,"ax",@progbits
 1886               	.global	rgblight_increase_sat_noeeprom
 1888               	rgblight_increase_sat_noeeprom:
 1889               	.LFB126:
 430:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1890               		.loc 1 430 43 is_stmt 1 view -0
 1891               		.cfi_startproc
 1892               	/* prologue: function */
 1893               	/* frame size = 0 */
 1894               	/* stack size = 0 */
 1895               	.L__stack_usage = 0
 430:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1896               		.loc 1 430 45 view .LVU444
 1897 0000 80E0      		ldi r24,0
 1898 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1899               	.LVL119:
 1900               		.cfi_endproc
 1901               	.LFE126:
 1903               		.section	.text.rgblight_increase_sat,"ax",@progbits
 1904               	.global	rgblight_increase_sat
 1906               	rgblight_increase_sat:
 1907               	.LFB127:
 431:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1908               		.loc 1 431 34 view -0
 1909               		.cfi_startproc
 1910               	/* prologue: function */
 1911               	/* frame size = 0 */
 1912               	/* stack size = 0 */
 1913               	.L__stack_usage = 0
 431:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1914               		.loc 1 431 36 view .LVU446
 1915 0000 81E0      		ldi r24,lo8(1)
 1916 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1917               	.LVL120:
 1918               		.cfi_endproc
 1919               	.LFE127:
 1921               		.section	.text.rgblight_decrease_sat_helper,"ax",@progbits
 1922               	.global	rgblight_decrease_sat_helper
 1924               	rgblight_decrease_sat_helper:
 1925               	.LVL121:
 1926               	.LFB128:
 432:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1927               		.loc 1 432 57 view -0
 1928               		.cfi_startproc
 1929               	/* prologue: function */
 1930               	/* frame size = 0 */
 1931               	/* stack size = 0 */
 1932               	.L__stack_usage = 0
 433:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1933               		.loc 1 433 5 view .LVU448
 1934               	.LBB70:
 1935               	.LBI70:
  44:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
  45:./lib/lib8tion/math8.h ****     asm volatile( "uqadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  46:./lib/lib8tion/math8.h ****     return i;
  47:./lib/lib8tion/math8.h **** #else
  48:./lib/lib8tion/math8.h **** #error "No implementation for qadd8 available."
  49:./lib/lib8tion/math8.h **** #endif
  50:./lib/lib8tion/math8.h **** }
  51:./lib/lib8tion/math8.h **** 
  52:./lib/lib8tion/math8.h **** /// Add one byte to another, saturating at 0x7F
  53:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  54:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  55:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  56:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t qadd7( int8_t i, int8_t j)
  57:./lib/lib8tion/math8.h **** {
  58:./lib/lib8tion/math8.h **** #if QADD7_C == 1
  59:./lib/lib8tion/math8.h ****     int16_t t = i + j;
  60:./lib/lib8tion/math8.h ****     if (t > 127) t = 127;
  61:./lib/lib8tion/math8.h ****     return t;
  62:./lib/lib8tion/math8.h **** #elif QADD7_AVRASM == 1
  63:./lib/lib8tion/math8.h ****     asm volatile(
  64:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the V flag */
  65:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  66:./lib/lib8tion/math8.h **** 
  67:./lib/lib8tion/math8.h ****          /* Now test the V flag.
  68:./lib/lib8tion/math8.h ****           If V is clear, we branch around a load of 0x7F into i.
  69:./lib/lib8tion/math8.h ****           If V is set, we go ahead and load 0x7F into i.
  70:./lib/lib8tion/math8.h ****           */
  71:./lib/lib8tion/math8.h ****          "brvc L_%=     \n\t"
  72:./lib/lib8tion/math8.h ****          "ldi %0, 0x7F  \n\t"
  73:./lib/lib8tion/math8.h ****          "L_%=: "
  74:./lib/lib8tion/math8.h ****          : "+a" (i)
  75:./lib/lib8tion/math8.h ****          : "a"  (j) );
  76:./lib/lib8tion/math8.h **** 
  77:./lib/lib8tion/math8.h ****     return i;
  78:./lib/lib8tion/math8.h **** #elif QADD7_ARM_DSP_ASM == 1
  79:./lib/lib8tion/math8.h ****     asm volatile( "qadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  80:./lib/lib8tion/math8.h ****     return i;
  81:./lib/lib8tion/math8.h **** #else
  82:./lib/lib8tion/math8.h **** #error "No implementation for qadd7 available."
  83:./lib/lib8tion/math8.h **** #endif
  84:./lib/lib8tion/math8.h **** }
  85:./lib/lib8tion/math8.h **** 
  86:./lib/lib8tion/math8.h **** /// subtract one byte from another, saturating at 0x00
  87:./lib/lib8tion/math8.h **** /// @returns i - j with a floor of 0
  88:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qsub8( uint8_t i, uint8_t j)
 1936               		.loc 2 88 34 view .LVU449
 1937               	.LBB71:
  89:./lib/lib8tion/math8.h **** {
  90:./lib/lib8tion/math8.h **** #if QSUB8_C == 1
  91:./lib/lib8tion/math8.h ****     int16_t t = i - j;
  92:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
  93:./lib/lib8tion/math8.h ****     return t;
  94:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
  95:./lib/lib8tion/math8.h **** 
  96:./lib/lib8tion/math8.h ****     asm volatile(
 1938               		.loc 2 96 5 view .LVU450
 1939               	.LBE71:
 1940               	.LBE70:
 433:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1941               		.loc 1 433 19 is_stmt 0 view .LVU451
 1942 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1943 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1944               	.LBB73:
 1945               	.LBB72:
 1946               		.loc 2 96 5 view .LVU452
 1947 0004 6281      		ldd r22,Z+2
 1948 0006 28E0      		ldi r18,lo8(8)
 1949               	/* #APP */
 1950               	 ;  96 "./lib/lib8tion/math8.h" 1
 1951 0008 621B      		sub r22, r18    
 1952 000a 00F4      		brcc L_1503     
 1953 000c 60E0      		ldi r22, 0x00  
 1954               		L_1503: 
 1955               	 ;  0 "" 2
 1956               	.LVL122:
  97:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
  98:./lib/lib8tion/math8.h ****          "sub %0, %1    \n\t"
  99:./lib/lib8tion/math8.h **** 
 100:./lib/lib8tion/math8.h ****          /* Now test the C flag.
 101:./lib/lib8tion/math8.h ****           If C is clear, we branch around a load of 0x00 into i.
 102:./lib/lib8tion/math8.h ****           If C is set, we go ahead and load 0x00 into i.
 103:./lib/lib8tion/math8.h ****           */
 104:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
 105:./lib/lib8tion/math8.h ****          "ldi %0, 0x00  \n\t"
 106:./lib/lib8tion/math8.h ****          "L_%=: "
 107:./lib/lib8tion/math8.h ****          : "+a" (i)
 108:./lib/lib8tion/math8.h ****          : "a"  (j) );
 109:./lib/lib8tion/math8.h **** 
 110:./lib/lib8tion/math8.h ****     return i;
 1957               		.loc 2 110 5 is_stmt 1 view .LVU453
 1958               		.loc 2 110 5 is_stmt 0 view .LVU454
 1959               	/* #NOAPP */
 1960               	.LBE72:
 1961               	.LBE73:
 434:quantum/rgblight.c **** }
 1962               		.loc 1 434 5 is_stmt 1 view .LVU455
 1963 000e 282F      		mov r18,r24
 1964 0010 4381      		ldd r20,Z+3
 1965 0012 8181      		ldd r24,Z+1
 1966               	.LVL123:
 434:quantum/rgblight.c **** }
 1967               		.loc 1 434 5 is_stmt 0 view .LVU456
 1968 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1969               	.LVL124:
 434:quantum/rgblight.c **** }
 1970               		.loc 1 434 5 view .LVU457
 1971               		.cfi_endproc
 1972               	.LFE128:
 1974               		.section	.text.rgblight_decrease_sat_noeeprom,"ax",@progbits
 1975               	.global	rgblight_decrease_sat_noeeprom
 1977               	rgblight_decrease_sat_noeeprom:
 1978               	.LFB129:
 436:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1979               		.loc 1 436 43 is_stmt 1 view -0
 1980               		.cfi_startproc
 1981               	/* prologue: function */
 1982               	/* frame size = 0 */
 1983               	/* stack size = 0 */
 1984               	.L__stack_usage = 0
 436:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1985               		.loc 1 436 45 view .LVU459
 1986 0000 80E0      		ldi r24,0
 1987 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1988               	.LVL125:
 1989               		.cfi_endproc
 1990               	.LFE129:
 1992               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 1993               	.global	rgblight_decrease_sat
 1995               	rgblight_decrease_sat:
 1996               	.LFB130:
 437:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 1997               		.loc 1 437 34 view -0
 1998               		.cfi_startproc
 1999               	/* prologue: function */
 2000               	/* frame size = 0 */
 2001               	/* stack size = 0 */
 2002               	.L__stack_usage = 0
 437:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 2003               		.loc 1 437 36 view .LVU461
 2004 0000 81E0      		ldi r24,lo8(1)
 2005 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 2006               	.LVL126:
 2007               		.cfi_endproc
 2008               	.LFE130:
 2010               		.section	.text.rgblight_increase_val_helper,"ax",@progbits
 2011               	.global	rgblight_increase_val_helper
 2013               	rgblight_increase_val_helper:
 2014               	.LVL127:
 2015               	.LFB131:
 438:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 2016               		.loc 1 438 57 view -0
 2017               		.cfi_startproc
 2018               	/* prologue: function */
 2019               	/* frame size = 0 */
 2020               	/* stack size = 0 */
 2021               	.L__stack_usage = 0
 439:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2022               		.loc 1 439 5 view .LVU463
 2023               	.LBB74:
 2024               	.LBI74:
  23:./lib/lib8tion/math8.h **** {
 2025               		.loc 2 23 34 view .LVU464
 2026               	.LBB75:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 2027               		.loc 2 30 5 view .LVU465
 2028               	.LBE75:
 2029               	.LBE74:
 439:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2030               		.loc 1 439 19 is_stmt 0 view .LVU466
 2031 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2032 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2033               	.LBB77:
 2034               	.LBB76:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 2035               		.loc 2 30 5 view .LVU467
 2036 0004 4381      		ldd r20,Z+3
 2037 0006 28E0      		ldi r18,lo8(8)
 2038               	/* #APP */
 2039               	 ;  30 "./lib/lib8tion/math8.h" 1
 2040 0008 420F      		add r20, r18    
 2041 000a 00F4      		brcc L_1559     
 2042 000c 4FEF      		ldi r20, 0xFF  
 2043               		L_1559: 
 2044               	 ;  0 "" 2
 2045               	.LVL128:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 2046               		.loc 2 43 5 is_stmt 1 view .LVU468
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 2047               		.loc 2 43 5 is_stmt 0 view .LVU469
 2048               	/* #NOAPP */
 2049               	.LBE76:
 2050               	.LBE77:
 440:quantum/rgblight.c **** }
 2051               		.loc 1 440 5 is_stmt 1 view .LVU470
 2052 000e 282F      		mov r18,r24
 2053 0010 6281      		ldd r22,Z+2
 2054 0012 8181      		ldd r24,Z+1
 2055               	.LVL129:
 440:quantum/rgblight.c **** }
 2056               		.loc 1 440 5 is_stmt 0 view .LVU471
 2057 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2058               	.LVL130:
 440:quantum/rgblight.c **** }
 2059               		.loc 1 440 5 view .LVU472
 2060               		.cfi_endproc
 2061               	.LFE131:
 2063               		.section	.text.rgblight_increase_val_noeeprom,"ax",@progbits
 2064               	.global	rgblight_increase_val_noeeprom
 2066               	rgblight_increase_val_noeeprom:
 2067               	.LFB132:
 442:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 2068               		.loc 1 442 43 is_stmt 1 view -0
 2069               		.cfi_startproc
 2070               	/* prologue: function */
 2071               	/* frame size = 0 */
 2072               	/* stack size = 0 */
 2073               	.L__stack_usage = 0
 442:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 2074               		.loc 1 442 45 view .LVU474
 2075 0000 80E0      		ldi r24,0
 2076 0002 0C94 0000 		jmp rgblight_increase_val_helper
 2077               	.LVL131:
 2078               		.cfi_endproc
 2079               	.LFE132:
 2081               		.section	.text.rgblight_increase_val,"ax",@progbits
 2082               	.global	rgblight_increase_val
 2084               	rgblight_increase_val:
 2085               	.LFB133:
 443:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 2086               		.loc 1 443 34 view -0
 2087               		.cfi_startproc
 2088               	/* prologue: function */
 2089               	/* frame size = 0 */
 2090               	/* stack size = 0 */
 2091               	.L__stack_usage = 0
 443:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 2092               		.loc 1 443 36 view .LVU476
 2093 0000 81E0      		ldi r24,lo8(1)
 2094 0002 0C94 0000 		jmp rgblight_increase_val_helper
 2095               	.LVL132:
 2096               		.cfi_endproc
 2097               	.LFE133:
 2099               		.section	.text.rgblight_decrease_val_helper,"ax",@progbits
 2100               	.global	rgblight_decrease_val_helper
 2102               	rgblight_decrease_val_helper:
 2103               	.LVL133:
 2104               	.LFB134:
 444:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 2105               		.loc 1 444 57 view -0
 2106               		.cfi_startproc
 2107               	/* prologue: function */
 2108               	/* frame size = 0 */
 2109               	/* stack size = 0 */
 2110               	.L__stack_usage = 0
 445:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2111               		.loc 1 445 5 view .LVU478
 2112               	.LBB78:
 2113               	.LBI78:
  88:./lib/lib8tion/math8.h **** {
 2114               		.loc 2 88 34 view .LVU479
 2115               	.LBB79:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 2116               		.loc 2 96 5 view .LVU480
 2117               	.LBE79:
 2118               	.LBE78:
 445:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2119               		.loc 1 445 19 is_stmt 0 view .LVU481
 2120 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2121 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2122               	.LBB81:
 2123               	.LBB80:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 2124               		.loc 2 96 5 view .LVU482
 2125 0004 4381      		ldd r20,Z+3
 2126 0006 28E0      		ldi r18,lo8(8)
 2127               	/* #APP */
 2128               	 ;  96 "./lib/lib8tion/math8.h" 1
 2129 0008 421B      		sub r20, r18    
 2130 000a 00F4      		brcc L_1615     
 2131 000c 40E0      		ldi r20, 0x00  
 2132               		L_1615: 
 2133               	 ;  0 "" 2
 2134               	.LVL134:
 2135               		.loc 2 110 5 is_stmt 1 view .LVU483
 2136               		.loc 2 110 5 is_stmt 0 view .LVU484
 2137               	/* #NOAPP */
 2138               	.LBE80:
 2139               	.LBE81:
 446:quantum/rgblight.c **** }
 2140               		.loc 1 446 5 is_stmt 1 view .LVU485
 2141 000e 282F      		mov r18,r24
 2142 0010 6281      		ldd r22,Z+2
 2143 0012 8181      		ldd r24,Z+1
 2144               	.LVL135:
 446:quantum/rgblight.c **** }
 2145               		.loc 1 446 5 is_stmt 0 view .LVU486
 2146 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2147               	.LVL136:
 446:quantum/rgblight.c **** }
 2148               		.loc 1 446 5 view .LVU487
 2149               		.cfi_endproc
 2150               	.LFE134:
 2152               		.section	.text.rgblight_decrease_val_noeeprom,"ax",@progbits
 2153               	.global	rgblight_decrease_val_noeeprom
 2155               	rgblight_decrease_val_noeeprom:
 2156               	.LFB135:
 448:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 2157               		.loc 1 448 43 is_stmt 1 view -0
 2158               		.cfi_startproc
 2159               	/* prologue: function */
 2160               	/* frame size = 0 */
 2161               	/* stack size = 0 */
 2162               	.L__stack_usage = 0
 448:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 2163               		.loc 1 448 45 view .LVU489
 2164 0000 80E0      		ldi r24,0
 2165 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 2166               	.LVL137:
 2167               		.cfi_endproc
 2168               	.LFE135:
 2170               		.section	.text.rgblight_decrease_val,"ax",@progbits
 2171               	.global	rgblight_decrease_val
 2173               	rgblight_decrease_val:
 2174               	.LFB136:
 449:quantum/rgblight.c **** 
 2175               		.loc 1 449 34 view -0
 2176               		.cfi_startproc
 2177               	/* prologue: function */
 2178               	/* frame size = 0 */
 2179               	/* stack size = 0 */
 2180               	.L__stack_usage = 0
 449:quantum/rgblight.c **** 
 2181               		.loc 1 449 36 view .LVU491
 2182 0000 81E0      		ldi r24,lo8(1)
 2183 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 2184               	.LVL138:
 2185               		.cfi_endproc
 2186               	.LFE136:
 2188               		.section	.text.rgblight_sethsv,"ax",@progbits
 2189               	.global	rgblight_sethsv
 2191               	rgblight_sethsv:
 2192               	.LVL139:
 2193               	.LFB145:
 551:quantum/rgblight.c **** 
 2194               		.loc 1 551 61 view -0
 2195               		.cfi_startproc
 2196               	/* prologue: function */
 2197               	/* frame size = 0 */
 2198               	/* stack size = 0 */
 2199               	.L__stack_usage = 0
 551:quantum/rgblight.c **** 
 2200               		.loc 1 551 63 view .LVU493
 2201 0000 21E0      		ldi r18,lo8(1)
 2202 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2203               	.LVL140:
 551:quantum/rgblight.c **** 
 2204               		.loc 1 551 63 is_stmt 0 view .LVU494
 2205               		.cfi_endproc
 2206               	.LFE145:
 2208               		.section	.text.rgblight_sethsv_noeeprom,"ax",@progbits
 2209               	.global	rgblight_sethsv_noeeprom
 2211               	rgblight_sethsv_noeeprom:
 2212               	.LVL141:
 2213               	.LFB146:
 553:quantum/rgblight.c **** 
 2214               		.loc 1 553 70 is_stmt 1 view -0
 2215               		.cfi_startproc
 2216               	/* prologue: function */
 2217               	/* frame size = 0 */
 2218               	/* stack size = 0 */
 2219               	.L__stack_usage = 0
 553:quantum/rgblight.c **** 
 2220               		.loc 1 553 72 view .LVU496
 2221 0000 20E0      		ldi r18,0
 2222 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2223               	.LVL142:
 553:quantum/rgblight.c **** 
 2224               		.loc 1 553 72 is_stmt 0 view .LVU497
 2225               		.cfi_endproc
 2226               	.LFE146:
 2228               		.section	.text.rgblight_setrgb_at,"ax",@progbits
 2229               	.global	rgblight_setrgb_at
 2231               	rgblight_setrgb_at:
 2232               	.LVL143:
 2233               	.LFB156:
 595:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 2234               		.loc 1 595 73 is_stmt 1 view -0
 2235               		.cfi_startproc
 2236               	/* prologue: function */
 2237               	/* frame size = 0 */
 2238               	/* stack size = 0 */
 2239               	.L__stack_usage = 0
 596:quantum/rgblight.c ****         return;
 2240               		.loc 1 596 5 view .LVU499
 596:quantum/rgblight.c ****         return;
 2241               		.loc 1 596 25 is_stmt 0 view .LVU500
 2242 0000 9091 0000 		lds r25,rgblight_config
 596:quantum/rgblight.c ****         return;
 2243               		.loc 1 596 8 view .LVU501
 2244 0004 90FF      		sbrs r25,0
 2245 0006 00C0      		rjmp .L108
 596:quantum/rgblight.c ****         return;
 2246               		.loc 1 596 33 discriminator 1 view .LVU502
 2247 0008 2031      		cpi r18,lo8(16)
 2248 000a 00F4      		brsh .L108
 600:quantum/rgblight.c ****     led[index].g = g;
 2249               		.loc 1 600 5 is_stmt 1 view .LVU503
 600:quantum/rgblight.c ****     led[index].g = g;
 2250               		.loc 1 600 15 is_stmt 0 view .LVU504
 2251 000c 30E0      		ldi r19,0
 600:quantum/rgblight.c ****     led[index].g = g;
 2252               		.loc 1 600 18 view .LVU505
 2253 000e F901      		movw r30,r18
 2254 0010 EE0F      		lsl r30
 2255 0012 FF1F      		rol r31
 2256 0014 E20F      		add r30,r18
 2257 0016 F31F      		adc r31,r19
 2258 0018 E050      		subi r30,lo8(-(led))
 2259 001a F040      		sbci r31,hi8(-(led))
 2260 001c 8183      		std Z+1,r24
 601:quantum/rgblight.c ****     led[index].b = b;
 2261               		.loc 1 601 5 is_stmt 1 view .LVU506
 601:quantum/rgblight.c ****     led[index].b = b;
 2262               		.loc 1 601 18 is_stmt 0 view .LVU507
 2263 001e 6083      		st Z,r22
 602:quantum/rgblight.c **** #ifdef RGBW
 2264               		.loc 1 602 5 is_stmt 1 view .LVU508
 602:quantum/rgblight.c **** #ifdef RGBW
 2265               		.loc 1 602 18 is_stmt 0 view .LVU509
 2266 0020 4283      		std Z+2,r20
 606:quantum/rgblight.c **** }
 2267               		.loc 1 606 5 is_stmt 1 view .LVU510
 2268 0022 0C94 0000 		jmp rgblight_set
 2269               	.LVL144:
 2270               	.L108:
 2271               	/* epilogue start */
 607:quantum/rgblight.c **** 
 2272               		.loc 1 607 1 is_stmt 0 view .LVU511
 2273 0026 0895      		ret
 2274               		.cfi_endproc
 2275               	.LFE156:
 2277               		.section	.text.rgblight_sethsv_at,"ax",@progbits
 2278               	.global	rgblight_sethsv_at
 2280               	rgblight_sethsv_at:
 2281               	.LVL145:
 2282               	.LFB157:
 609:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2283               		.loc 1 609 79 is_stmt 1 view -0
 2284               		.cfi_startproc
 609:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2285               		.loc 1 609 79 is_stmt 0 view .LVU513
 2286 0000 1F93      		push r17
 2287               	.LCFI32:
 2288               		.cfi_def_cfa_offset 3
 2289               		.cfi_offset 17, -2
 2290 0002 CF93      		push r28
 2291               	.LCFI33:
 2292               		.cfi_def_cfa_offset 4
 2293               		.cfi_offset 28, -3
 2294 0004 DF93      		push r29
 2295               	.LCFI34:
 2296               		.cfi_def_cfa_offset 5
 2297               		.cfi_offset 29, -4
 2298 0006 00D0      		rcall .
 2299 0008 0F92      		push __tmp_reg__
 2300               	.LCFI35:
 2301               		.cfi_def_cfa_offset 8
 2302 000a CDB7      		in r28,__SP_L__
 2303 000c DEB7      		in r29,__SP_H__
 2304               	.LCFI36:
 2305               		.cfi_def_cfa_register 28
 2306               	/* prologue: function */
 2307               	/* frame size = 3 */
 2308               	/* stack size = 6 */
 2309               	.L__stack_usage = 6
 2310 000e 122F      		mov r17,r18
 610:quantum/rgblight.c ****         return;
 2311               		.loc 1 610 5 is_stmt 1 view .LVU514
 610:quantum/rgblight.c ****         return;
 2312               		.loc 1 610 25 is_stmt 0 view .LVU515
 2313 0010 9091 0000 		lds r25,rgblight_config
 610:quantum/rgblight.c ****         return;
 2314               		.loc 1 610 8 view .LVU516
 2315 0014 90FF      		sbrs r25,0
 2316 0016 00C0      		rjmp .L113
 614:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 2317               		.loc 1 614 5 is_stmt 1 view .LVU517
 615:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 2318               		.loc 1 615 5 view .LVU518
 2319               	.LVL146:
 2320               	.LBB84:
 2321               	.LBI84:
 162:quantum/rgblight.c **** 
 2322               		.loc 1 162 6 view .LVU519
 2323               	.LBB85:
 162:quantum/rgblight.c **** 
 2324               		.loc 1 162 70 view .LVU520
 2325 0018 9E01      		movw r18,r28
 2326               	.LVL147:
 162:quantum/rgblight.c **** 
 2327               		.loc 1 162 70 is_stmt 0 view .LVU521
 2328 001a 2F5F      		subi r18,-1
 2329 001c 3F4F      		sbci r19,-1
 2330 001e 0E94 0000 		call sethsv_raw
 2331               	.LVL148:
 162:quantum/rgblight.c **** 
 2332               		.loc 1 162 70 view .LVU522
 2333               	.LBE85:
 2334               	.LBE84:
 616:quantum/rgblight.c **** }
 2335               		.loc 1 616 5 is_stmt 1 view .LVU523
 2336 0022 212F      		mov r18,r17
 2337 0024 4B81      		ldd r20,Y+3
 2338 0026 6981      		ldd r22,Y+1
 2339 0028 8A81      		ldd r24,Y+2
 2340 002a 0E94 0000 		call rgblight_setrgb_at
 2341               	.LVL149:
 2342               	.L113:
 2343               	/* epilogue start */
 617:quantum/rgblight.c **** 
 2344               		.loc 1 617 1 is_stmt 0 view .LVU524
 2345 002e 0F90      		pop __tmp_reg__
 2346 0030 0F90      		pop __tmp_reg__
 2347 0032 0F90      		pop __tmp_reg__
 2348 0034 DF91      		pop r29
 2349 0036 CF91      		pop r28
 2350 0038 1F91      		pop r17
 2351               	.LVL150:
 617:quantum/rgblight.c **** 
 2352               		.loc 1 617 1 view .LVU525
 2353 003a 0895      		ret
 2354               		.cfi_endproc
 2355               	.LFE157:
 2357               		.section	.text.rgblight_setrgb_range,"ax",@progbits
 2358               	.global	rgblight_setrgb_range
 2360               	rgblight_setrgb_range:
 2361               	.LVL151:
 2362               	.LFB159:
 631:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 2363               		.loc 1 631 89 is_stmt 1 view -0
 2364               		.cfi_startproc
 631:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 2365               		.loc 1 631 89 is_stmt 0 view .LVU527
 2366 0000 0F93      		push r16
 2367               	.LCFI37:
 2368               		.cfi_def_cfa_offset 3
 2369               		.cfi_offset 16, -2
 2370               	/* prologue: function */
 2371               	/* frame size = 0 */
 2372               	/* stack size = 1 */
 2373               	.L__stack_usage = 1
 632:quantum/rgblight.c ****         return;
 2374               		.loc 1 632 5 is_stmt 1 view .LVU528
 632:quantum/rgblight.c ****         return;
 2375               		.loc 1 632 25 is_stmt 0 view .LVU529
 2376 0002 9091 0000 		lds r25,rgblight_config
 632:quantum/rgblight.c ****         return;
 2377               		.loc 1 632 8 view .LVU530
 2378 0006 90FF      		sbrs r25,0
 2379 0008 00C0      		rjmp .L116
 632:quantum/rgblight.c ****         return;
 2380               		.loc 1 632 46 discriminator 1 view .LVU531
 2381 000a 2017      		cp r18,r16
 2382 000c 00F4      		brsh .L116
 632:quantum/rgblight.c ****         return;
 2383               		.loc 1 632 62 discriminator 2 view .LVU532
 2384 000e 0131      		cpi r16,lo8(17)
 2385 0010 00F4      		brsh .L116
 2386 0012 93E0      		ldi r25,lo8(3)
 2387 0014 299F      		mul r18,r25
 2388 0016 F001      		movw r30,r0
 2389 0018 1124      		clr __zero_reg__
 2390 001a E050      		subi r30,lo8(-(led))
 2391 001c F040      		sbci r31,hi8(-(led))
 2392               	.LVL152:
 2393               	.L118:
 2394               	.LBB86:
 637:quantum/rgblight.c ****         led[i].g = g;
 2395               		.loc 1 637 9 is_stmt 1 discriminator 3 view .LVU533
 637:quantum/rgblight.c ****         led[i].g = g;
 2396               		.loc 1 637 18 is_stmt 0 discriminator 3 view .LVU534
 2397 001e 8183      		std Z+1,r24
 638:quantum/rgblight.c ****         led[i].b = b;
 2398               		.loc 1 638 9 is_stmt 1 discriminator 3 view .LVU535
 638:quantum/rgblight.c ****         led[i].b = b;
 2399               		.loc 1 638 18 is_stmt 0 discriminator 3 view .LVU536
 2400 0020 6083      		st Z,r22
 639:quantum/rgblight.c **** #ifdef RGBW
 2401               		.loc 1 639 9 is_stmt 1 discriminator 3 view .LVU537
 639:quantum/rgblight.c **** #ifdef RGBW
 2402               		.loc 1 639 18 is_stmt 0 discriminator 3 view .LVU538
 2403 0022 4283      		std Z+2,r20
 636:quantum/rgblight.c ****         led[i].r = r;
 2404               		.loc 1 636 38 is_stmt 1 discriminator 3 view .LVU539
 636:quantum/rgblight.c ****         led[i].r = r;
 2405               		.loc 1 636 39 is_stmt 0 discriminator 3 view .LVU540
 2406 0024 2F5F      		subi r18,lo8(-(1))
 2407               	.LVL153:
 636:quantum/rgblight.c ****         led[i].r = r;
 2408               		.loc 1 636 29 is_stmt 1 discriminator 3 view .LVU541
 2409 0026 3396      		adiw r30,3
 636:quantum/rgblight.c ****         led[i].r = r;
 2410               		.loc 1 636 5 is_stmt 0 discriminator 3 view .LVU542
 2411 0028 0213      		cpse r16,r18
 2412 002a 00C0      		rjmp .L118
 636:quantum/rgblight.c ****         led[i].r = r;
 2413               		.loc 1 636 5 discriminator 3 view .LVU543
 2414               	.LBE86:
 644:quantum/rgblight.c ****     wait_ms(1);
 2415               		.loc 1 644 5 is_stmt 1 view .LVU544
 2416 002c 0E94 0000 		call rgblight_set
 2417               	.LVL154:
 645:quantum/rgblight.c **** }
 2418               		.loc 1 645 5 view .LVU545
 2419               	.LBB87:
 2420               	.LBI87:
 2421               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** _delay_ms(double __ms)
 2422               		.loc 3 166 1 view .LVU546
 2423               	.LBB88:
 167:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	double __tmp ;
 2424               		.loc 3 168 2 view .LVU547
 169:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 2425               		.loc 3 172 2 view .LVU548
 173:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2426               		.loc 3 173 2 view .LVU549
 174:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2427               		.loc 3 174 2 view .LVU550
 175:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 2428               		.loc 3 184 3 view .LVU551
 185:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 2429               		.loc 3 187 2 view .LVU552
 2430 0030 8FE9      		ldi r24,lo8(3999)
 2431 0032 9FE0      		ldi r25,hi8(3999)
 2432 0034 0197      	1:	sbiw r24,1
 2433 0036 01F4      		brne 1b
 2434 0038 00C0      		rjmp .
 2435 003a 0000      		nop
 2436               	.LVL155:
 2437               	.L116:
 2438               	/* epilogue start */
 2439               		.loc 3 187 2 is_stmt 0 view .LVU553
 2440               	.LBE88:
 2441               	.LBE87:
 646:quantum/rgblight.c **** 
 2442               		.loc 1 646 1 view .LVU554
 2443 003c 0F91      		pop r16
 2444               	.LVL156:
 646:quantum/rgblight.c **** 
 2445               		.loc 1 646 1 view .LVU555
 2446 003e 0895      		ret
 2447               		.cfi_endproc
 2448               	.LFE159:
 2450               		.section	.text.rgblight_sethsv_range,"ax",@progbits
 2451               	.global	rgblight_sethsv_range
 2453               	rgblight_sethsv_range:
 2454               	.LVL157:
 2455               	.LFB160:
 648:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2456               		.loc 1 648 95 is_stmt 1 view -0
 2457               		.cfi_startproc
 648:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2458               		.loc 1 648 95 is_stmt 0 view .LVU557
 2459 0000 0F93      		push r16
 2460               	.LCFI38:
 2461               		.cfi_def_cfa_offset 3
 2462               		.cfi_offset 16, -2
 2463 0002 1F93      		push r17
 2464               	.LCFI39:
 2465               		.cfi_def_cfa_offset 4
 2466               		.cfi_offset 17, -3
 2467 0004 CF93      		push r28
 2468               	.LCFI40:
 2469               		.cfi_def_cfa_offset 5
 2470               		.cfi_offset 28, -4
 2471 0006 DF93      		push r29
 2472               	.LCFI41:
 2473               		.cfi_def_cfa_offset 6
 2474               		.cfi_offset 29, -5
 2475 0008 00D0      		rcall .
 2476 000a 0F92      		push __tmp_reg__
 2477               	.LCFI42:
 2478               		.cfi_def_cfa_offset 9
 2479 000c CDB7      		in r28,__SP_L__
 2480 000e DEB7      		in r29,__SP_H__
 2481               	.LCFI43:
 2482               		.cfi_def_cfa_register 28
 2483               	/* prologue: function */
 2484               	/* frame size = 3 */
 2485               	/* stack size = 7 */
 2486               	.L__stack_usage = 7
 2487 0010 122F      		mov r17,r18
 649:quantum/rgblight.c ****         return;
 2488               		.loc 1 649 5 is_stmt 1 view .LVU558
 649:quantum/rgblight.c ****         return;
 2489               		.loc 1 649 25 is_stmt 0 view .LVU559
 2490 0012 9091 0000 		lds r25,rgblight_config
 649:quantum/rgblight.c ****         return;
 2491               		.loc 1 649 8 view .LVU560
 2492 0016 90FF      		sbrs r25,0
 2493 0018 00C0      		rjmp .L123
 653:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 2494               		.loc 1 653 5 is_stmt 1 view .LVU561
 654:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 2495               		.loc 1 654 5 view .LVU562
 2496               	.LVL158:
 2497               	.LBB91:
 2498               	.LBI91:
 162:quantum/rgblight.c **** 
 2499               		.loc 1 162 6 view .LVU563
 2500               	.LBB92:
 162:quantum/rgblight.c **** 
 2501               		.loc 1 162 70 view .LVU564
 2502 001a 9E01      		movw r18,r28
 2503               	.LVL159:
 162:quantum/rgblight.c **** 
 2504               		.loc 1 162 70 is_stmt 0 view .LVU565
 2505 001c 2F5F      		subi r18,-1
 2506 001e 3F4F      		sbci r19,-1
 2507 0020 0E94 0000 		call sethsv_raw
 2508               	.LVL160:
 162:quantum/rgblight.c **** 
 2509               		.loc 1 162 70 view .LVU566
 2510               	.LBE92:
 2511               	.LBE91:
 655:quantum/rgblight.c **** }
 2512               		.loc 1 655 5 is_stmt 1 view .LVU567
 2513 0024 212F      		mov r18,r17
 2514 0026 4B81      		ldd r20,Y+3
 2515 0028 6981      		ldd r22,Y+1
 2516 002a 8A81      		ldd r24,Y+2
 2517 002c 0E94 0000 		call rgblight_setrgb_range
 2518               	.LVL161:
 2519               	.L123:
 2520               	/* epilogue start */
 656:quantum/rgblight.c **** 
 2521               		.loc 1 656 1 is_stmt 0 view .LVU568
 2522 0030 0F90      		pop __tmp_reg__
 2523 0032 0F90      		pop __tmp_reg__
 2524 0034 0F90      		pop __tmp_reg__
 2525 0036 DF91      		pop r29
 2526 0038 CF91      		pop r28
 2527 003a 1F91      		pop r17
 2528               	.LVL162:
 656:quantum/rgblight.c **** 
 2529               		.loc 1 656 1 view .LVU569
 2530 003c 0F91      		pop r16
 2531               	.LVL163:
 656:quantum/rgblight.c **** 
 2532               		.loc 1 656 1 view .LVU570
 2533 003e 0895      		ret
 2534               		.cfi_endproc
 2535               	.LFE160:
 2537               		.section	.text.rgblight_sethsv_master,"ax",@progbits
 2538               	.global	rgblight_sethsv_master
 2540               	rgblight_sethsv_master:
 2541               	.LVL164:
 2542               	.LFB163:
 663:quantum/rgblight.c **** 
 2543               		.loc 1 663 68 is_stmt 1 view -0
 2544               		.cfi_startproc
 663:quantum/rgblight.c **** 
 2545               		.loc 1 663 68 is_stmt 0 view .LVU572
 2546 0000 0F93      		push r16
 2547               	.LCFI44:
 2548               		.cfi_def_cfa_offset 3
 2549               		.cfi_offset 16, -2
 2550               	/* prologue: function */
 2551               	/* frame size = 0 */
 2552               	/* stack size = 1 */
 2553               	.L__stack_usage = 1
 663:quantum/rgblight.c **** 
 2554               		.loc 1 663 70 is_stmt 1 view .LVU573
 2555 0002 08E0      		ldi r16,lo8(8)
 2556 0004 20E0      		ldi r18,0
 2557 0006 0E94 0000 		call rgblight_sethsv_range
 2558               	.LVL165:
 2559               	/* epilogue start */
 663:quantum/rgblight.c **** 
 2560               		.loc 1 663 1 is_stmt 0 view .LVU574
 2561 000a 0F91      		pop r16
 2562 000c 0895      		ret
 2563               		.cfi_endproc
 2564               	.LFE163:
 2566               		.section	.text.rgblight_sethsv_slave,"ax",@progbits
 2567               	.global	rgblight_sethsv_slave
 2569               	rgblight_sethsv_slave:
 2570               	.LVL166:
 2571               	.LFB164:
 665:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2572               		.loc 1 665 67 is_stmt 1 view -0
 2573               		.cfi_startproc
 665:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2574               		.loc 1 665 67 is_stmt 0 view .LVU576
 2575 0000 0F93      		push r16
 2576               	.LCFI45:
 2577               		.cfi_def_cfa_offset 3
 2578               		.cfi_offset 16, -2
 2579               	/* prologue: function */
 2580               	/* frame size = 0 */
 2581               	/* stack size = 1 */
 2582               	.L__stack_usage = 1
 665:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2583               		.loc 1 665 69 is_stmt 1 view .LVU577
 2584 0002 00E1      		ldi r16,lo8(16)
 2585 0004 28E0      		ldi r18,lo8(8)
 2586 0006 0E94 0000 		call rgblight_sethsv_range
 2587               	.LVL167:
 2588               	/* epilogue start */
 665:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2589               		.loc 1 665 1 is_stmt 0 view .LVU578
 2590 000a 0F91      		pop r16
 2591 000c 0895      		ret
 2592               		.cfi_endproc
 2593               	.LFE164:
 2595               		.section	.text.rgblight_setrgb_master,"ax",@progbits
 2596               	.global	rgblight_setrgb_master
 2598               	rgblight_setrgb_master:
 2599               	.LVL168:
 2600               	.LFB161:
 659:quantum/rgblight.c **** 
 2601               		.loc 1 659 62 is_stmt 1 view -0
 2602               		.cfi_startproc
 659:quantum/rgblight.c **** 
 2603               		.loc 1 659 62 is_stmt 0 view .LVU580
 2604 0000 0F93      		push r16
 2605               	.LCFI46:
 2606               		.cfi_def_cfa_offset 3
 2607               		.cfi_offset 16, -2
 2608               	/* prologue: function */
 2609               	/* frame size = 0 */
 2610               	/* stack size = 1 */
 2611               	.L__stack_usage = 1
 659:quantum/rgblight.c **** 
 2612               		.loc 1 659 64 is_stmt 1 view .LVU581
 2613 0002 08E0      		ldi r16,lo8(8)
 2614 0004 20E0      		ldi r18,0
 2615 0006 0E94 0000 		call rgblight_setrgb_range
 2616               	.LVL169:
 2617               	/* epilogue start */
 659:quantum/rgblight.c **** 
 2618               		.loc 1 659 1 is_stmt 0 view .LVU582
 2619 000a 0F91      		pop r16
 2620 000c 0895      		ret
 2621               		.cfi_endproc
 2622               	.LFE161:
 2624               		.section	.text.rgblight_setrgb_slave,"ax",@progbits
 2625               	.global	rgblight_setrgb_slave
 2627               	rgblight_setrgb_slave:
 2628               	.LVL170:
 2629               	.LFB162:
 661:quantum/rgblight.c **** 
 2630               		.loc 1 661 61 is_stmt 1 view -0
 2631               		.cfi_startproc
 661:quantum/rgblight.c **** 
 2632               		.loc 1 661 61 is_stmt 0 view .LVU584
 2633 0000 0F93      		push r16
 2634               	.LCFI47:
 2635               		.cfi_def_cfa_offset 3
 2636               		.cfi_offset 16, -2
 2637               	/* prologue: function */
 2638               	/* frame size = 0 */
 2639               	/* stack size = 1 */
 2640               	.L__stack_usage = 1
 661:quantum/rgblight.c **** 
 2641               		.loc 1 661 63 is_stmt 1 view .LVU585
 2642 0002 00E1      		ldi r16,lo8(16)
 2643 0004 28E0      		ldi r18,lo8(8)
 2644 0006 0E94 0000 		call rgblight_setrgb_range
 2645               	.LVL171:
 2646               	/* epilogue start */
 661:quantum/rgblight.c **** 
 2647               		.loc 1 661 1 is_stmt 0 view .LVU586
 2648 000a 0F91      		pop r16
 2649 000c 0895      		ret
 2650               		.cfi_endproc
 2651               	.LFE162:
 2653               		.section	.text.rgblight_effect_rainbow_swirl,"ax",@progbits
 2654               	.global	rgblight_effect_rainbow_swirl
 2656               	rgblight_effect_rainbow_swirl:
 2657               	.LVL172:
 2658               	.LFB179:
1087:quantum/rgblight.c ****     uint8_t hue;
 2659               		.loc 1 1087 62 is_stmt 1 view -0
 2660               		.cfi_startproc
1087:quantum/rgblight.c ****     uint8_t hue;
 2661               		.loc 1 1087 62 is_stmt 0 view .LVU588
 2662 0000 EF92      		push r14
 2663               	.LCFI48:
 2664               		.cfi_def_cfa_offset 3
 2665               		.cfi_offset 14, -2
 2666 0002 FF92      		push r15
 2667               	.LCFI49:
 2668               		.cfi_def_cfa_offset 4
 2669               		.cfi_offset 15, -3
 2670 0004 1F93      		push r17
 2671               	.LCFI50:
 2672               		.cfi_def_cfa_offset 5
 2673               		.cfi_offset 17, -4
 2674 0006 CF93      		push r28
 2675               	.LCFI51:
 2676               		.cfi_def_cfa_offset 6
 2677               		.cfi_offset 28, -5
 2678 0008 DF93      		push r29
 2679               	.LCFI52:
 2680               		.cfi_def_cfa_offset 7
 2681               		.cfi_offset 29, -6
 2682               	/* prologue: function */
 2683               	/* frame size = 0 */
 2684               	/* stack size = 5 */
 2685               	.L__stack_usage = 5
 2686 000a EC01      		movw r28,r24
1088:quantum/rgblight.c ****     uint8_t i;
 2687               		.loc 1 1088 5 is_stmt 1 view .LVU589
1089:quantum/rgblight.c **** 
 2688               		.loc 1 1089 5 view .LVU590
1091:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2689               		.loc 1 1091 5 view .LVU591
 2690               	.LVL173:
1091:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2691               		.loc 1 1091 12 is_stmt 0 view .LVU592
 2692 000c 10E0      		ldi r17,0
1092:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2693               		.loc 1 1092 45 view .LVU593
 2694 000e EE24      		clr r14
 2695 0010 EA94      		dec r14
 2696 0012 F12C      		mov r15,__zero_reg__
 2697               	.LVL174:
 2698               	.L131:
1091:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2699               		.loc 1 1091 17 is_stmt 1 discriminator 1 view .LVU594
1091:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2700               		.loc 1 1091 36 is_stmt 0 discriminator 1 view .LVU595
 2701 0014 6091 0000 		lds r22,rgblight_ranges+4
1091:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2702               		.loc 1 1091 5 discriminator 1 view .LVU596
 2703 0018 1617      		cp r17,r22
 2704 001a 00F0      		brlo .L132
1095:quantum/rgblight.c **** 
 2705               		.loc 1 1095 5 is_stmt 1 view .LVU597
 2706 001c 0E94 0000 		call rgblight_set
 2707               	.LVL175:
1097:quantum/rgblight.c ****         anim->current_hue++;
 2708               		.loc 1 1097 5 view .LVU598
1097:quantum/rgblight.c ****         anim->current_hue++;
 2709               		.loc 1 1097 9 is_stmt 0 view .LVU599
 2710 0020 9A81      		ldd r25,Y+2
 2711 0022 8C81      		ldd r24,Y+4
1097:quantum/rgblight.c ****         anim->current_hue++;
 2712               		.loc 1 1097 8 view .LVU600
 2713 0024 90FF      		sbrs r25,0
 2714 0026 00C0      		rjmp .L133
1098:quantum/rgblight.c ****     } else {
 2715               		.loc 1 1098 9 is_stmt 1 view .LVU601
1098:quantum/rgblight.c ****     } else {
 2716               		.loc 1 1098 26 is_stmt 0 view .LVU602
 2717 0028 8F5F      		subi r24,lo8(-(1))
 2718               	.L135:
1100:quantum/rgblight.c ****     }
 2719               		.loc 1 1100 26 view .LVU603
 2720 002a 8C83      		std Y+4,r24
 2721               	/* epilogue start */
1102:quantum/rgblight.c **** #endif
 2722               		.loc 1 1102 1 view .LVU604
 2723 002c DF91      		pop r29
 2724 002e CF91      		pop r28
 2725               	.LVL176:
1102:quantum/rgblight.c **** #endif
 2726               		.loc 1 1102 1 view .LVU605
 2727 0030 1F91      		pop r17
 2728               	.LVL177:
1102:quantum/rgblight.c **** #endif
 2729               		.loc 1 1102 1 view .LVU606
 2730 0032 FF90      		pop r15
 2731 0034 EF90      		pop r14
 2732 0036 0895      		ret
 2733               	.LVL178:
 2734               	.L132:
1092:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2735               		.loc 1 1092 9 is_stmt 1 discriminator 3 view .LVU607
1093:quantum/rgblight.c ****     }
 2736               		.loc 1 1093 9 discriminator 3 view .LVU608
 2737               	.LBB95:
 2738               	.LBI95:
 162:quantum/rgblight.c **** 
 2739               		.loc 1 162 6 discriminator 3 view .LVU609
 2740               	.LBB96:
 162:quantum/rgblight.c **** 
 2741               		.loc 1 162 70 discriminator 3 view .LVU610
 2742               	.LBE96:
 2743               	.LBE95:
1093:quantum/rgblight.c ****     }
 2744               		.loc 1 1093 99 is_stmt 0 discriminator 3 view .LVU611
 2745 0038 2091 0000 		lds r18,rgblight_ranges+2
1093:quantum/rgblight.c ****     }
 2746               		.loc 1 1093 82 discriminator 3 view .LVU612
 2747 003c 422F      		mov r20,r18
 2748 003e 410F      		add r20,r17
 2749 0040 5527      		clr r21
 2750 0042 551F      		rol r21
 2751 0044 CA01      		movw r24,r20
1093:quantum/rgblight.c ****     }
 2752               		.loc 1 1093 9 discriminator 3 view .LVU613
 2753 0046 9A01      		movw r18,r20
 2754 0048 220F      		lsl r18
 2755 004a 331F      		rol r19
 2756 004c 280F      		add r18,r24
 2757 004e 391F      		adc r19,r25
 2758 0050 2050      		subi r18,lo8(-(led))
 2759 0052 3040      		sbci r19,hi8(-(led))
1092:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2760               		.loc 1 1092 62 discriminator 3 view .LVU614
 2761 0054 70E0      		ldi r23,0
1092:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2762               		.loc 1 1092 45 discriminator 3 view .LVU615
 2763 0056 C701      		movw r24,r14
 2764 0058 0E94 0000 		call __divmodhi4
 2765               	.LVL179:
1092:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2766               		.loc 1 1092 45 discriminator 3 view .LVU616
 2767 005c 962F      		mov r25,r22
1092:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2768               		.loc 1 1092 13 discriminator 3 view .LVU617
 2769 005e 8C81      		ldd r24,Y+4
 2770               	.LBB98:
 2771               	.LBB97:
 162:quantum/rgblight.c **** 
 2772               		.loc 1 162 70 discriminator 3 view .LVU618
 2773 0060 4091 0000 		lds r20,rgblight_config+3
 2774 0064 6091 0000 		lds r22,rgblight_config+2
 2775 0068 199F      		mul r17,r25
 2776 006a 800D      		add r24,r0
 2777 006c 1124      		clr __zero_reg__
 2778 006e 0E94 0000 		call sethsv_raw
 2779               	.LVL180:
 162:quantum/rgblight.c **** 
 2780               		.loc 1 162 70 discriminator 3 view .LVU619
 2781               	.LBE97:
 2782               	.LBE98:
1091:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2783               		.loc 1 1091 54 is_stmt 1 discriminator 3 view .LVU620
1091:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2784               		.loc 1 1091 55 is_stmt 0 discriminator 3 view .LVU621
 2785 0072 1F5F      		subi r17,lo8(-(1))
 2786               	.LVL181:
1091:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2787               		.loc 1 1091 55 discriminator 3 view .LVU622
 2788 0074 00C0      		rjmp .L131
 2789               	.L133:
1100:quantum/rgblight.c ****     }
 2790               		.loc 1 1100 9 is_stmt 1 view .LVU623
1100:quantum/rgblight.c ****     }
 2791               		.loc 1 1100 26 is_stmt 0 view .LVU624
 2792 0076 8150      		subi r24,lo8(-(-1))
 2793 0078 00C0      		rjmp .L135
 2794               		.cfi_endproc
 2795               	.LFE179:
 2797               		.section	.text.rgblight_effect_snake,"ax",@progbits
 2798               	.global	rgblight_effect_snake
 2800               	rgblight_effect_snake:
 2801               	.LVL182:
 2802               	.LFB180:
1108:quantum/rgblight.c ****     static uint8_t pos = 0;
 2803               		.loc 1 1108 54 is_stmt 1 view -0
 2804               		.cfi_startproc
1108:quantum/rgblight.c ****     static uint8_t pos = 0;
 2805               		.loc 1 1108 54 is_stmt 0 view .LVU626
 2806 0000 BF92      		push r11
 2807               	.LCFI53:
 2808               		.cfi_def_cfa_offset 3
 2809               		.cfi_offset 11, -2
 2810 0002 CF92      		push r12
 2811               	.LCFI54:
 2812               		.cfi_def_cfa_offset 4
 2813               		.cfi_offset 12, -3
 2814 0004 DF92      		push r13
 2815               	.LCFI55:
 2816               		.cfi_def_cfa_offset 5
 2817               		.cfi_offset 13, -4
 2818 0006 EF92      		push r14
 2819               	.LCFI56:
 2820               		.cfi_def_cfa_offset 6
 2821               		.cfi_offset 14, -5
 2822 0008 FF92      		push r15
 2823               	.LCFI57:
 2824               		.cfi_def_cfa_offset 7
 2825               		.cfi_offset 15, -6
 2826 000a 0F93      		push r16
 2827               	.LCFI58:
 2828               		.cfi_def_cfa_offset 8
 2829               		.cfi_offset 16, -7
 2830 000c 1F93      		push r17
 2831               	.LCFI59:
 2832               		.cfi_def_cfa_offset 9
 2833               		.cfi_offset 17, -8
 2834 000e CF93      		push r28
 2835               	.LCFI60:
 2836               		.cfi_def_cfa_offset 10
 2837               		.cfi_offset 28, -9
 2838 0010 DF93      		push r29
 2839               	.LCFI61:
 2840               		.cfi_def_cfa_offset 11
 2841               		.cfi_offset 29, -10
 2842               	/* prologue: function */
 2843               	/* frame size = 0 */
 2844               	/* stack size = 9 */
 2845               	.L__stack_usage = 9
1109:quantum/rgblight.c ****     uint8_t        i, j;
 2846               		.loc 1 1109 5 is_stmt 1 view .LVU627
1110:quantum/rgblight.c ****     int8_t         k;
 2847               		.loc 1 1110 5 view .LVU628
1111:quantum/rgblight.c ****     int8_t         increment = 1;
 2848               		.loc 1 1111 5 view .LVU629
1112:quantum/rgblight.c **** 
 2849               		.loc 1 1112 5 view .LVU630
 2850               	.LVL183:
1114:quantum/rgblight.c ****         increment = -1;
 2851               		.loc 1 1114 5 view .LVU631
1114:quantum/rgblight.c ****         increment = -1;
 2852               		.loc 1 1114 9 is_stmt 0 view .LVU632
 2853 0012 FC01      		movw r30,r24
 2854 0014 8281      		ldd r24,Z+2
 2855               	.LVL184:
1115:quantum/rgblight.c ****     }
 2856               		.loc 1 1115 19 view .LVU633
 2857 0016 0FEF      		ldi r16,lo8(-1)
1114:quantum/rgblight.c ****         increment = -1;
 2858               		.loc 1 1114 8 view .LVU634
 2859 0018 80FF      		sbrs r24,0
1112:quantum/rgblight.c **** 
 2860               		.loc 1 1112 20 view .LVU635
 2861 001a 01E0      		ldi r16,lo8(1)
 2862               	.L137:
 2863               	.LVL185:
1129:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2864               		.loc 1 1129 5 is_stmt 1 view .LVU636
1129:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2865               		.loc 1 1129 12 is_stmt 0 view .LVU637
 2866 001c 10E0      		ldi r17,0
 2867               	.LVL186:
 2868               	.L138:
1129:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2869               		.loc 1 1129 17 is_stmt 1 discriminator 1 view .LVU638
1129:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2870               		.loc 1 1129 5 is_stmt 0 discriminator 1 view .LVU639
 2871 001e 8091 0000 		lds r24,rgblight_ranges+4
 2872 0022 1817      		cp r17,r24
 2873 0024 00F0      		brlo .L143
1150:quantum/rgblight.c ****     if (increment == 1) {
 2874               		.loc 1 1150 5 is_stmt 1 view .LVU640
 2875 0026 0E94 0000 		call rgblight_set
 2876               	.LVL187:
1151:quantum/rgblight.c ****         if (pos - 1 < 0) {
 2877               		.loc 1 1151 5 view .LVU641
 2878 002a 8091 0000 		lds r24,pos.3436
1151:quantum/rgblight.c ****         if (pos - 1 < 0) {
 2879               		.loc 1 1151 8 is_stmt 0 view .LVU642
 2880 002e 0130      		cpi r16,lo8(1)
 2881 0030 01F0      		breq .+2
 2882 0032 00C0      		rjmp .L144
1152:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
 2883               		.loc 1 1152 9 is_stmt 1 view .LVU643
1152:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
 2884               		.loc 1 1152 12 is_stmt 0 view .LVU644
 2885 0034 8111      		cpse r24,__zero_reg__
 2886 0036 00C0      		rjmp .L145
1153:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2887               		.loc 1 1153 13 is_stmt 1 view .LVU645
1153:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2888               		.loc 1 1153 51 is_stmt 0 view .LVU646
 2889 0038 8091 0000 		lds r24,rgblight_ranges+4
 2890               	.L145:
1158:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2891               		.loc 1 1158 13 is_stmt 1 view .LVU647
1158:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2892               		.loc 1 1158 17 is_stmt 0 view .LVU648
 2893 003c 8150      		subi r24,lo8(-(-1))
 2894               	.L149:
1164:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2895               		.loc 1 1164 13 view .LVU649
 2896 003e 8093 0000 		sts pos.3436,r24
 2897               	/* epilogue start */
1169:quantum/rgblight.c **** #endif
 2898               		.loc 1 1169 1 view .LVU650
 2899 0042 DF91      		pop r29
 2900 0044 CF91      		pop r28
 2901 0046 1F91      		pop r17
 2902               	.LVL188:
1169:quantum/rgblight.c **** #endif
 2903               		.loc 1 1169 1 view .LVU651
 2904 0048 0F91      		pop r16
 2905               	.LVL189:
1169:quantum/rgblight.c **** #endif
 2906               		.loc 1 1169 1 view .LVU652
 2907 004a FF90      		pop r15
 2908 004c EF90      		pop r14
 2909 004e DF90      		pop r13
 2910 0050 CF90      		pop r12
 2911 0052 BF90      		pop r11
 2912 0054 0895      		ret
 2913               	.LVL190:
 2914               	.L143:
 2915               	.LBB102:
1130:quantum/rgblight.c ****         ledp->r        = 0;
 2916               		.loc 1 1130 9 is_stmt 1 view .LVU653
1130:quantum/rgblight.c ****         ledp->r        = 0;
 2917               		.loc 1 1130 34 is_stmt 0 view .LVU654
 2918 0056 C091 0000 		lds r28,rgblight_ranges+2
 2919 005a C12E      		mov r12,r17
 2920 005c D12C      		mov r13,__zero_reg__
 2921 005e CC0D      		add r28,r12
 2922 0060 DD2D      		mov r29,r13
 2923 0062 D11D      		adc r29,__zero_reg__
 2924 0064 CE01      		movw r24,r28
 2925 0066 880F      		lsl r24
 2926 0068 991F      		rol r25
 2927 006a C80F      		add r28,r24
 2928 006c D91F      		adc r29,r25
1130:quantum/rgblight.c ****         ledp->r        = 0;
 2929               		.loc 1 1130 19 view .LVU655
 2930 006e C050      		subi r28,lo8(-(led))
 2931 0070 D040      		sbci r29,hi8(-(led))
 2932               	.LVL191:
1131:quantum/rgblight.c ****         ledp->g        = 0;
 2933               		.loc 1 1131 9 is_stmt 1 view .LVU656
1131:quantum/rgblight.c ****         ledp->g        = 0;
 2934               		.loc 1 1131 24 is_stmt 0 view .LVU657
 2935 0072 1982      		std Y+1,__zero_reg__
1132:quantum/rgblight.c ****         ledp->b        = 0;
 2936               		.loc 1 1132 9 is_stmt 1 view .LVU658
1132:quantum/rgblight.c ****         ledp->b        = 0;
 2937               		.loc 1 1132 24 is_stmt 0 view .LVU659
 2938 0074 1882      		st Y,__zero_reg__
1133:quantum/rgblight.c **** #    ifdef RGBW
 2939               		.loc 1 1133 9 is_stmt 1 view .LVU660
1133:quantum/rgblight.c **** #    ifdef RGBW
 2940               		.loc 1 1133 24 is_stmt 0 view .LVU661
 2941 0076 1A82      		std Y+2,__zero_reg__
1137:quantum/rgblight.c ****             k = pos + j * increment;
 2942               		.loc 1 1137 9 is_stmt 1 view .LVU662
 2943               	.LVL192:
1137:quantum/rgblight.c ****             k = pos + j * increment;
 2944               		.loc 1 1137 21 view .LVU663
1133:quantum/rgblight.c **** #    ifdef RGBW
 2945               		.loc 1 1133 24 is_stmt 0 view .LVU664
 2946 0078 34E0      		ldi r19,lo8(4)
 2947 007a E32E      		mov r14,r19
 2948 007c F12C      		mov r15,__zero_reg__
 2949 007e B12C      		mov r11,__zero_reg__
 2950               	.LVL193:
 2951               	.L142:
1138:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 2952               		.loc 1 1138 13 is_stmt 1 view .LVU665
1138:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 2953               		.loc 1 1138 21 is_stmt 0 view .LVU666
 2954 0080 8091 0000 		lds r24,pos.3436
 2955 0084 8B0D      		add r24,r11
 2956               	.LVL194:
1139:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 2957               		.loc 1 1139 13 is_stmt 1 view .LVU667
1139:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 2958               		.loc 1 1139 16 is_stmt 0 view .LVU668
 2959 0086 8131      		cpi r24,lo8(17)
 2960 0088 04F0      		brlt .L139
1140:quantum/rgblight.c ****             }
 2961               		.loc 1 1140 17 is_stmt 1 view .LVU669
1140:quantum/rgblight.c ****             }
 2962               		.loc 1 1140 19 is_stmt 0 view .LVU670
 2963 008a 8F70      		andi r24,lo8(15)
 2964               	.LVL195:
1142:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
 2965               		.loc 1 1142 13 is_stmt 1 view .LVU671
 2966               	.L140:
1145:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2967               		.loc 1 1145 13 view .LVU672
1145:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2968               		.loc 1 1145 19 is_stmt 0 view .LVU673
 2969 008c 082E      		mov __tmp_reg__,r24
 2970 008e 000C      		lsl r0
 2971 0090 990B      		sbc r25,r25
1145:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2972               		.loc 1 1145 16 view .LVU674
 2973 0092 C816      		cp r12,r24
 2974 0094 D906      		cpc r13,r25
 2975 0096 01F4      		brne .L141
1146:quantum/rgblight.c ****             }
 2976               		.loc 1 1146 17 is_stmt 1 view .LVU675
 2977               	.LVL196:
 2978               	.LBB103:
 2979               	.LBI103:
 162:quantum/rgblight.c **** 
 2980               		.loc 1 162 6 view .LVU676
 2981               	.LBB104:
 162:quantum/rgblight.c **** 
 2982               		.loc 1 162 70 view .LVU677
 2983               	.LBE104:
 2984               	.LBE103:
1146:quantum/rgblight.c ****             }
 2985               		.loc 1 1146 91 is_stmt 0 view .LVU678
 2986 0098 8091 0000 		lds r24,rgblight_config+3
 2987               	.LVL197:
1146:quantum/rgblight.c ****             }
 2988               		.loc 1 1146 96 view .LVU679
 2989 009c 8E9D      		mul r24,r14
 2990 009e A001      		movw r20,r0
 2991 00a0 8F9D      		mul r24,r15
 2992 00a2 500D      		add r21,r0
 2993 00a4 1124      		clr __zero_reg__
1146:quantum/rgblight.c ****             }
 2994               		.loc 1 1146 133 view .LVU680
 2995 00a6 5595      		asr r21
 2996 00a8 4795      		ror r20
 2997 00aa 5595      		asr r21
 2998 00ac 4795      		ror r20
 2999               	.LBB106:
 3000               	.LBB105:
 162:quantum/rgblight.c **** 
 3001               		.loc 1 162 70 view .LVU681
 3002 00ae 9E01      		movw r18,r28
 3003 00b0 6091 0000 		lds r22,rgblight_config+2
 3004 00b4 8091 0000 		lds r24,rgblight_config+1
 3005 00b8 0E94 0000 		call sethsv_raw
 3006               	.LVL198:
 3007               	.L141:
 162:quantum/rgblight.c **** 
 3008               		.loc 1 162 70 view .LVU682
 3009               	.LBE105:
 3010               	.LBE106:
1137:quantum/rgblight.c ****             k = pos + j * increment;
 3011               		.loc 1 1137 55 is_stmt 1 discriminator 2 view .LVU683
1137:quantum/rgblight.c ****             k = pos + j * increment;
 3012               		.loc 1 1137 21 discriminator 2 view .LVU684
 3013 00bc B00E      		add r11,r16
 3014 00be F1E0      		ldi r31,1
 3015 00c0 EF1A      		sub r14,r31
 3016 00c2 F108      		sbc r15,__zero_reg__
1137:quantum/rgblight.c ****             k = pos + j * increment;
 3017               		.loc 1 1137 9 is_stmt 0 discriminator 2 view .LVU685
 3018 00c4 01F4      		brne .L142
 3019               	.LBE102:
1129:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3020               		.loc 1 1129 54 is_stmt 1 discriminator 2 view .LVU686
1129:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3021               		.loc 1 1129 55 is_stmt 0 discriminator 2 view .LVU687
 3022 00c6 1F5F      		subi r17,lo8(-(1))
 3023               	.LVL199:
1129:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3024               		.loc 1 1129 55 discriminator 2 view .LVU688
 3025 00c8 00C0      		rjmp .L138
 3026               	.LVL200:
 3027               	.L139:
 3028               	.LBB107:
1142:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
 3029               		.loc 1 1142 13 is_stmt 1 view .LVU689
1142:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
 3030               		.loc 1 1142 16 is_stmt 0 view .LVU690
 3031 00ca 87FF      		sbrs r24,7
 3032 00cc 00C0      		rjmp .L140
1143:quantum/rgblight.c ****             }
 3033               		.loc 1 1143 17 is_stmt 1 view .LVU691
1143:quantum/rgblight.c ****             }
 3034               		.loc 1 1143 23 is_stmt 0 view .LVU692
 3035 00ce 9091 0000 		lds r25,rgblight_ranges+4
 3036 00d2 890F      		add r24,r25
 3037               	.LVL201:
1143:quantum/rgblight.c ****             }
 3038               		.loc 1 1143 23 view .LVU693
 3039 00d4 00C0      		rjmp .L140
 3040               	.LVL202:
 3041               	.L144:
1143:quantum/rgblight.c ****             }
 3042               		.loc 1 1143 23 view .LVU694
 3043               	.LBE107:
1164:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3044               		.loc 1 1164 9 is_stmt 1 view .LVU695
1164:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3045               		.loc 1 1164 20 is_stmt 0 view .LVU696
 3046 00d6 90E0      		ldi r25,0
 3047 00d8 0196      		adiw r24,1
1164:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3048               		.loc 1 1164 42 view .LVU697
 3049 00da 6091 0000 		lds r22,rgblight_ranges+4
 3050 00de 70E0      		ldi r23,0
1164:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3051               		.loc 1 1164 25 view .LVU698
 3052 00e0 0E94 0000 		call __divmodhi4
 3053 00e4 00C0      		rjmp .L149
 3054               		.cfi_endproc
 3055               	.LFE180:
 3057               		.section	.text.rgblight_effect_knight,"ax",@progbits
 3058               	.global	rgblight_effect_knight
 3060               	rgblight_effect_knight:
 3061               	.LVL203:
 3062               	.LFB181:
1175:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 3063               		.loc 1 1175 55 is_stmt 1 view -0
 3064               		.cfi_startproc
1175:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 3065               		.loc 1 1175 55 is_stmt 0 view .LVU700
 3066 0000 0F93      		push r16
 3067               	.LCFI62:
 3068               		.cfi_def_cfa_offset 3
 3069               		.cfi_offset 16, -2
 3070 0002 1F93      		push r17
 3071               	.LCFI63:
 3072               		.cfi_def_cfa_offset 4
 3073               		.cfi_offset 17, -3
 3074 0004 CF93      		push r28
 3075               	.LCFI64:
 3076               		.cfi_def_cfa_offset 5
 3077               		.cfi_offset 28, -4
 3078 0006 DF93      		push r29
 3079               	.LCFI65:
 3080               		.cfi_def_cfa_offset 6
 3081               		.cfi_offset 29, -5
 3082               	/* prologue: function */
 3083               	/* frame size = 0 */
 3084               	/* stack size = 4 */
 3085               	.L__stack_usage = 4
1176:quantum/rgblight.c ****     static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 3086               		.loc 1 1176 5 is_stmt 1 view .LVU701
1177:quantum/rgblight.c ****     static int8_t increment  = 1;
 3087               		.loc 1 1177 5 view .LVU702
1178:quantum/rgblight.c ****     uint8_t       i, cur;
 3088               		.loc 1 1178 5 view .LVU703
1179:quantum/rgblight.c **** 
 3089               		.loc 1 1179 5 view .LVU704
1190:quantum/rgblight.c ****         led[i].r = 0;
 3090               		.loc 1 1190 5 view .LVU705
1190:quantum/rgblight.c ****         led[i].r = 0;
 3091               		.loc 1 1190 12 is_stmt 0 view .LVU706
 3092 0008 8091 0000 		lds r24,rgblight_ranges+2
 3093               	.LVL204:
1190:quantum/rgblight.c ****         led[i].r = 0;
 3094               		.loc 1 1190 67 view .LVU707
 3095 000c 9091 0000 		lds r25,rgblight_ranges+3
 3096 0010 23E0      		ldi r18,lo8(3)
 3097 0012 829F      		mul r24,r18
 3098 0014 F001      		movw r30,r0
 3099 0016 1124      		clr __zero_reg__
 3100 0018 E050      		subi r30,lo8(-(led))
 3101 001a F040      		sbci r31,hi8(-(led))
 3102               	.L151:
1190:quantum/rgblight.c ****         led[i].r = 0;
 3103               		.loc 1 1190 48 is_stmt 1 discriminator 1 view .LVU708
1190:quantum/rgblight.c ****         led[i].r = 0;
 3104               		.loc 1 1190 5 is_stmt 0 discriminator 1 view .LVU709
 3105 001c 8917      		cp r24,r25
 3106 001e 00F0      		brlo .L152
1199:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3107               		.loc 1 1199 12 view .LVU710
 3108 0020 C0E0      		ldi r28,0
1203:quantum/rgblight.c ****         } else {
 3109               		.loc 1 1203 13 view .LVU711
 3110 0022 D3E0      		ldi r29,lo8(3)
 3111               	.LVL205:
 3112               	.L153:
1199:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3113               		.loc 1 1199 17 is_stmt 1 discriminator 1 view .LVU712
1199:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3114               		.loc 1 1199 21 is_stmt 0 discriminator 1 view .LVU713
 3115 0024 6091 0000 		lds r22,rgblight_ranges+4
1199:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3116               		.loc 1 1199 5 discriminator 1 view .LVU714
 3117 0028 C617      		cp r28,r22
 3118 002a 00F0      		brlo .L156
1213:quantum/rgblight.c **** 
 3119               		.loc 1 1213 5 is_stmt 1 view .LVU715
 3120 002c 0E94 0000 		call rgblight_set
 3121               	.LVL206:
1217:quantum/rgblight.c ****     high_bound += increment;
 3122               		.loc 1 1217 5 view .LVU716
1217:quantum/rgblight.c ****     high_bound += increment;
 3123               		.loc 1 1217 15 is_stmt 0 view .LVU717
 3124 0030 2091 0000 		lds r18,increment.3454
 3125 0034 8091 0000 		lds r24,low_bound.3452
 3126 0038 820F      		add r24,r18
 3127 003a 8093 0000 		sts low_bound.3452,r24
1218:quantum/rgblight.c **** 
 3128               		.loc 1 1218 5 is_stmt 1 view .LVU718
1218:quantum/rgblight.c **** 
 3129               		.loc 1 1218 16 is_stmt 0 view .LVU719
 3130 003e 9091 0000 		lds r25,high_bound.3453
 3131 0042 920F      		add r25,r18
 3132 0044 9093 0000 		sts high_bound.3453,r25
1220:quantum/rgblight.c ****         increment = -increment;
 3133               		.loc 1 1220 5 is_stmt 1 view .LVU720
1220:quantum/rgblight.c ****         increment = -increment;
 3134               		.loc 1 1220 8 is_stmt 0 view .LVU721
 3135 0048 1916      		cp __zero_reg__,r25
 3136 004a 04F4      		brge .L157
1220:quantum/rgblight.c ****         increment = -increment;
 3137               		.loc 1 1220 38 discriminator 1 view .LVU722
 3138 004c 082E      		mov __tmp_reg__,r24
 3139 004e 000C      		lsl r0
 3140 0050 990B      		sbc r25,r25
1220:quantum/rgblight.c ****         increment = -increment;
 3141               		.loc 1 1220 41 discriminator 1 view .LVU723
 3142 0052 4091 0000 		lds r20,rgblight_ranges+4
1220:quantum/rgblight.c ****         increment = -increment;
 3143               		.loc 1 1220 72 discriminator 1 view .LVU724
 3144 0056 4150      		subi r20,1
 3145 0058 550B      		sbc r21,r21
1220:quantum/rgblight.c ****         increment = -increment;
 3146               		.loc 1 1220 25 discriminator 1 view .LVU725
 3147 005a 8417      		cp r24,r20
 3148 005c 9507      		cpc r25,r21
 3149 005e 04F0      		brlt .L150
 3150               	.L157:
1221:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3151               		.loc 1 1221 9 is_stmt 1 view .LVU726
1221:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3152               		.loc 1 1221 19 is_stmt 0 view .LVU727
 3153 0060 2195      		neg r18
 3154 0062 2093 0000 		sts increment.3454,r18
 3155               	.L150:
 3156               	/* epilogue start */
1228:quantum/rgblight.c **** #endif
 3157               		.loc 1 1228 1 view .LVU728
 3158 0066 DF91      		pop r29
 3159 0068 CF91      		pop r28
 3160               	.LVL207:
1228:quantum/rgblight.c **** #endif
 3161               		.loc 1 1228 1 view .LVU729
 3162 006a 1F91      		pop r17
 3163 006c 0F91      		pop r16
 3164 006e 0895      		ret
 3165               	.LVL208:
 3166               	.L152:
1191:quantum/rgblight.c ****         led[i].g = 0;
 3167               		.loc 1 1191 9 is_stmt 1 discriminator 3 view .LVU730
1191:quantum/rgblight.c ****         led[i].g = 0;
 3168               		.loc 1 1191 18 is_stmt 0 discriminator 3 view .LVU731
 3169 0070 1182      		std Z+1,__zero_reg__
1192:quantum/rgblight.c ****         led[i].b = 0;
 3170               		.loc 1 1192 9 is_stmt 1 discriminator 3 view .LVU732
1192:quantum/rgblight.c ****         led[i].b = 0;
 3171               		.loc 1 1192 18 is_stmt 0 discriminator 3 view .LVU733
 3172 0072 1082      		st Z,__zero_reg__
1193:quantum/rgblight.c **** #    ifdef RGBW
 3173               		.loc 1 1193 9 is_stmt 1 discriminator 3 view .LVU734
1193:quantum/rgblight.c **** #    ifdef RGBW
 3174               		.loc 1 1193 18 is_stmt 0 discriminator 3 view .LVU735
 3175 0074 1282      		std Z+2,__zero_reg__
1190:quantum/rgblight.c ****         led[i].r = 0;
 3176               		.loc 1 1190 84 is_stmt 1 discriminator 3 view .LVU736
1190:quantum/rgblight.c ****         led[i].r = 0;
 3177               		.loc 1 1190 85 is_stmt 0 discriminator 3 view .LVU737
 3178 0076 8F5F      		subi r24,lo8(-(1))
 3179               	.LVL209:
1190:quantum/rgblight.c ****         led[i].r = 0;
 3180               		.loc 1 1190 85 discriminator 3 view .LVU738
 3181 0078 3396      		adiw r30,3
 3182 007a 00C0      		rjmp .L151
 3183               	.LVL210:
 3184               	.L156:
1200:quantum/rgblight.c **** 
 3185               		.loc 1 1200 9 is_stmt 1 view .LVU739
1200:quantum/rgblight.c **** 
 3186               		.loc 1 1200 18 is_stmt 0 view .LVU740
 3187 007c 0C2F      		mov r16,r28
 3188 007e 10E0      		ldi r17,0
1200:quantum/rgblight.c **** 
 3189               		.loc 1 1200 68 view .LVU741
 3190 0080 70E0      		ldi r23,0
1200:quantum/rgblight.c **** 
 3191               		.loc 1 1200 51 view .LVU742
 3192 0082 C801      		movw r24,r16
 3193 0084 0E94 0000 		call __divmodhi4
1200:quantum/rgblight.c **** 
 3194               		.loc 1 1200 13 view .LVU743
 3195 0088 2091 0000 		lds r18,rgblight_ranges+2
 3196 008c 820F      		add r24,r18
 3197               	.LVL211:
1202:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3198               		.loc 1 1202 9 is_stmt 1 view .LVU744
 3199 008e 482F      		mov r20,r24
 3200 0090 50E0      		ldi r21,0
1202:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3201               		.loc 1 1202 15 is_stmt 0 view .LVU745
 3202 0092 2091 0000 		lds r18,low_bound.3452
 3203 0096 022E      		mov __tmp_reg__,r18
 3204 0098 000C      		lsl r0
 3205 009a 330B      		sbc r19,r19
1202:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3206               		.loc 1 1202 12 view .LVU746
 3207 009c 0217      		cp r16,r18
 3208 009e 1307      		cpc r17,r19
 3209 00a0 04F0      		brlt .L154
 3210               	.LVL212:
1202:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3211               		.loc 1 1202 33 discriminator 1 view .LVU747
 3212 00a2 2091 0000 		lds r18,high_bound.3453
 3213 00a6 022E      		mov __tmp_reg__,r18
 3214 00a8 000C      		lsl r0
 3215 00aa 330B      		sbc r19,r19
1202:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3216               		.loc 1 1202 28 discriminator 1 view .LVU748
 3217 00ac 2017      		cp r18,r16
 3218 00ae 3107      		cpc r19,r17
 3219 00b0 04F0      		brlt .L154
1203:quantum/rgblight.c ****         } else {
 3220               		.loc 1 1203 13 is_stmt 1 view .LVU749
 3221               	.LVL213:
 3222               	.LBB110:
 3223               	.LBI110:
 162:quantum/rgblight.c **** 
 3224               		.loc 1 162 6 view .LVU750
 3225               	.LBB111:
 162:quantum/rgblight.c **** 
 3226               		.loc 1 162 70 view .LVU751
 3227               	.LBE111:
 3228               	.LBE110:
1203:quantum/rgblight.c ****         } else {
 3229               		.loc 1 1203 13 is_stmt 0 view .LVU752
 3230 00b2 8D9F      		mul r24,r29
 3231 00b4 9001      		movw r18,r0
 3232 00b6 1124      		clr __zero_reg__
 3233 00b8 2050      		subi r18,lo8(-(led))
 3234 00ba 3040      		sbci r19,hi8(-(led))
 3235               	.LBB113:
 3236               	.LBB112:
 162:quantum/rgblight.c **** 
 3237               		.loc 1 162 70 view .LVU753
 3238 00bc 4091 0000 		lds r20,rgblight_config+3
 3239 00c0 6091 0000 		lds r22,rgblight_config+2
 3240 00c4 8091 0000 		lds r24,rgblight_config+1
 3241               	.LVL214:
 162:quantum/rgblight.c **** 
 3242               		.loc 1 162 70 view .LVU754
 3243 00c8 0E94 0000 		call sethsv_raw
 3244               	.LVL215:
 3245               	.L155:
 162:quantum/rgblight.c **** 
 3246               		.loc 1 162 70 view .LVU755
 3247               	.LBE112:
 3248               	.LBE113:
1199:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3249               		.loc 1 1199 53 is_stmt 1 discriminator 2 view .LVU756
1199:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3250               		.loc 1 1199 54 is_stmt 0 discriminator 2 view .LVU757
 3251 00cc CF5F      		subi r28,lo8(-(1))
 3252               	.LVL216:
1199:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3253               		.loc 1 1199 54 discriminator 2 view .LVU758
 3254 00ce 00C0      		rjmp .L153
 3255               	.LVL217:
 3256               	.L154:
1205:quantum/rgblight.c ****             led[cur].g = 0;
 3257               		.loc 1 1205 13 is_stmt 1 view .LVU759
1205:quantum/rgblight.c ****             led[cur].g = 0;
 3258               		.loc 1 1205 24 is_stmt 0 view .LVU760
 3259 00d0 FA01      		movw r30,r20
 3260 00d2 EE0F      		lsl r30
 3261 00d4 FF1F      		rol r31
 3262 00d6 E40F      		add r30,r20
 3263 00d8 F51F      		adc r31,r21
 3264 00da E050      		subi r30,lo8(-(led))
 3265 00dc F040      		sbci r31,hi8(-(led))
 3266 00de 1182      		std Z+1,__zero_reg__
1206:quantum/rgblight.c ****             led[cur].b = 0;
 3267               		.loc 1 1206 13 is_stmt 1 view .LVU761
1206:quantum/rgblight.c ****             led[cur].b = 0;
 3268               		.loc 1 1206 24 is_stmt 0 view .LVU762
 3269 00e0 1082      		st Z,__zero_reg__
1207:quantum/rgblight.c **** #    ifdef RGBW
 3270               		.loc 1 1207 13 is_stmt 1 view .LVU763
1207:quantum/rgblight.c **** #    ifdef RGBW
 3271               		.loc 1 1207 24 is_stmt 0 view .LVU764
 3272 00e2 1282      		std Z+2,__zero_reg__
 3273 00e4 00C0      		rjmp .L155
 3274               		.cfi_endproc
 3275               	.LFE181:
 3277               		.section	.text.rgblight_effect_christmas,"ax",@progbits
 3278               	.global	rgblight_effect_christmas
 3280               	rgblight_effect_christmas:
 3281               	.LVL218:
 3282               	.LFB182:
1237:quantum/rgblight.c ****     static int8_t increment = 1;
 3283               		.loc 1 1237 58 is_stmt 1 view -0
 3284               		.cfi_startproc
1237:quantum/rgblight.c ****     static int8_t increment = 1;
 3285               		.loc 1 1237 58 is_stmt 0 view .LVU766
 3286 0000 8F92      		push r8
 3287               	.LCFI66:
 3288               		.cfi_def_cfa_offset 3
 3289               		.cfi_offset 8, -2
 3290 0002 9F92      		push r9
 3291               	.LCFI67:
 3292               		.cfi_def_cfa_offset 4
 3293               		.cfi_offset 9, -3
 3294 0004 AF92      		push r10
 3295               	.LCFI68:
 3296               		.cfi_def_cfa_offset 5
 3297               		.cfi_offset 10, -4
 3298 0006 BF92      		push r11
 3299               	.LCFI69:
 3300               		.cfi_def_cfa_offset 6
 3301               		.cfi_offset 11, -5
 3302 0008 CF92      		push r12
 3303               	.LCFI70:
 3304               		.cfi_def_cfa_offset 7
 3305               		.cfi_offset 12, -6
 3306 000a DF92      		push r13
 3307               	.LCFI71:
 3308               		.cfi_def_cfa_offset 8
 3309               		.cfi_offset 13, -7
 3310 000c EF92      		push r14
 3311               	.LCFI72:
 3312               		.cfi_def_cfa_offset 9
 3313               		.cfi_offset 14, -8
 3314 000e FF92      		push r15
 3315               	.LCFI73:
 3316               		.cfi_def_cfa_offset 10
 3317               		.cfi_offset 15, -9
 3318 0010 0F93      		push r16
 3319               	.LCFI74:
 3320               		.cfi_def_cfa_offset 11
 3321               		.cfi_offset 16, -10
 3322 0012 1F93      		push r17
 3323               	.LCFI75:
 3324               		.cfi_def_cfa_offset 12
 3325               		.cfi_offset 17, -11
 3326 0014 CF93      		push r28
 3327               	.LCFI76:
 3328               		.cfi_def_cfa_offset 13
 3329               		.cfi_offset 28, -12
 3330 0016 DF93      		push r29
 3331               	.LCFI77:
 3332               		.cfi_def_cfa_offset 14
 3333               		.cfi_offset 29, -13
 3334               	/* prologue: function */
 3335               	/* frame size = 0 */
 3336               	/* stack size = 12 */
 3337               	.L__stack_usage = 12
 3338 0018 EC01      		movw r28,r24
1238:quantum/rgblight.c ****     const uint8_t max_pos   = 32;
 3339               		.loc 1 1238 5 is_stmt 1 view .LVU767
1239:quantum/rgblight.c ****     const uint8_t hue_green = 85;
 3340               		.loc 1 1239 5 view .LVU768
 3341               	.LVL219:
1240:quantum/rgblight.c **** 
 3342               		.loc 1 1240 5 view .LVU769
1242:quantum/rgblight.c ****     uint8_t  hue, val;
 3343               		.loc 1 1242 5 view .LVU770
1243:quantum/rgblight.c ****     uint8_t  i;
 3344               		.loc 1 1243 5 view .LVU771
1244:quantum/rgblight.c **** 
 3345               		.loc 1 1244 5 view .LVU772
1248:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
 3346               		.loc 1 1248 5 view .LVU773
1248:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
 3347               		.loc 1 1248 11 is_stmt 0 view .LVU774
 3348 001a 4C81      		ldd r20,Y+4
 3349 001c 042F      		mov r16,r20
 3350 001e 10E0      		ldi r17,0
 3351 0020 9801      		movw r18,r16
 3352 0022 D801      		movw r26,r16
 3353 0024 0E94 0000 		call __umulhisi3
1248:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
 3354               		.loc 1 1248 9 view .LVU775
 3355 0028 9B01      		movw r18,r22
 3356 002a AC01      		movw r20,r24
 3357 002c 0E94 0000 		call __muluhisi3
 3358 0030 4B01      		movw r8,r22
 3359 0032 5C01      		movw r10,r24
 3360               	.LVL220:
1249:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3361               		.loc 1 1249 5 is_stmt 1 view .LVU776
1249:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3362               		.loc 1 1249 46 is_stmt 0 view .LVU777
 3363 0034 E0E2      		ldi r30,lo8(32)
 3364 0036 F0E0      		ldi r31,0
 3365 0038 E01B      		sub r30,r16
 3366 003a F10B      		sbc r31,r17
1249:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3367               		.loc 1 1249 33 view .LVU778
 3368 003c A5E5      		ldi r26,lo8(85)
 3369 003e B0E0      		ldi r27,0
 3370 0040 AC01      		movw r20,r24
 3371 0042 9B01      		movw r18,r22
 3372 0044 0E94 0000 		call __muluhisi3
 3373 0048 6B01      		movw r12,r22
 3374 004a 7C01      		movw r14,r24
1249:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3375               		.loc 1 1249 46 view .LVU779
 3376 004c 9F01      		movw r18,r30
 3377 004e DF01      		movw r26,r30
 3378 0050 0E94 0000 		call __mulhisi3
 3379 0054 9B01      		movw r18,r22
 3380 0056 AC01      		movw r20,r24
 3381 0058 0E94 0000 		call __mulshisi3
1249:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3382               		.loc 1 1249 44 view .LVU780
 3383 005c 9B01      		movw r18,r22
 3384 005e AC01      		movw r20,r24
 3385 0060 280D      		add r18,r8
 3386 0062 391D      		adc r19,r9
 3387 0064 4A1D      		adc r20,r10
 3388 0066 5B1D      		adc r21,r11
1249:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3389               		.loc 1 1249 38 view .LVU781
 3390 0068 C701      		movw r24,r14
 3391               	.LVL221:
1249:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3392               		.loc 1 1249 38 view .LVU782
 3393 006a B601      		movw r22,r12
 3394 006c 0E94 0000 		call __udivmodsi4
1249:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3395               		.loc 1 1249 9 view .LVU783
 3396 0070 F22E      		mov r15,r18
 3397               	.LVL222:
1251:quantum/rgblight.c **** 
 3398               		.loc 1 1251 5 is_stmt 1 view .LVU784
 3399 0072 822F      		mov r24,r18
 3400 0074 90E0      		ldi r25,0
1251:quantum/rgblight.c **** 
 3401               		.loc 1 1251 9 is_stmt 0 view .LVU785
 3402 0076 39E2      		ldi r19,lo8(41)
 3403 0078 3F15      		cp r19,r15
 3404 007a 00F0      		brlo .L160
 3405               	.LVL223:
1251:quantum/rgblight.c **** 
 3406               		.loc 1 1251 20 discriminator 1 view .LVU786
 3407 007c 43E0      		ldi r20,lo8(3)
 3408 007e 249F      		mul r18,r20
 3409 0080 9001      		movw r18,r0
 3410 0082 1124      		clr __zero_reg__
 3411               	.L163:
1251:quantum/rgblight.c **** 
 3412               		.loc 1 1251 68 discriminator 2 view .LVU787
 3413 0084 3595      		asr r19
 3414 0086 2795      		ror r18
1251:quantum/rgblight.c **** 
 3415               		.loc 1 1251 9 discriminator 2 view .LVU788
 3416 0088 122F      		mov r17,r18
 3417 008a 1095      		com r17
 3418               	.LVL224:
1253:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3419               		.loc 1 1253 5 is_stmt 1 discriminator 2 view .LVU789
1253:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3420               		.loc 1 1253 12 is_stmt 0 discriminator 2 view .LVU790
 3421 008c 00E0      		ldi r16,0
 3422               	.LBB117:
1254:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3423               		.loc 1 1254 17 discriminator 2 view .LVU791
 3424 008e 85E5      		ldi r24,lo8(85)
 3425 0090 E82E      		mov r14,r24
 3426 0092 EF18      		sub r14,r15
 3427               	.LVL225:
 3428               	.L164:
1254:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3429               		.loc 1 1254 17 discriminator 2 view .LVU792
 3430               	.LBE117:
1253:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3431               		.loc 1 1253 17 is_stmt 1 discriminator 2 view .LVU793
1253:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3432               		.loc 1 1253 5 is_stmt 0 discriminator 2 view .LVU794
 3433 0094 8091 0000 		lds r24,rgblight_ranges+4
 3434 0098 0817      		cp r16,r24
 3435 009a 00F0      		brlo .L166
1257:quantum/rgblight.c **** 
 3436               		.loc 1 1257 5 is_stmt 1 view .LVU795
 3437 009c 0E94 0000 		call rgblight_set
 3438               	.LVL226:
1259:quantum/rgblight.c ****         increment = 1;
 3439               		.loc 1 1259 5 view .LVU796
1259:quantum/rgblight.c ****         increment = 1;
 3440               		.loc 1 1259 13 is_stmt 0 view .LVU797
 3441 00a0 9C81      		ldd r25,Y+4
1260:quantum/rgblight.c ****     } else if (anim->pos == max_pos) {
 3442               		.loc 1 1260 19 view .LVU798
 3443 00a2 81E0      		ldi r24,lo8(1)
1259:quantum/rgblight.c ****         increment = 1;
 3444               		.loc 1 1259 8 view .LVU799
 3445 00a4 9923      		tst r25
 3446 00a6 01F0      		breq .L170
1261:quantum/rgblight.c ****         increment = -1;
 3447               		.loc 1 1261 12 is_stmt 1 view .LVU800
1261:quantum/rgblight.c ****         increment = -1;
 3448               		.loc 1 1261 15 is_stmt 0 view .LVU801
 3449 00a8 9032      		cpi r25,lo8(32)
 3450 00aa 01F4      		brne .L168
1262:quantum/rgblight.c ****     }
 3451               		.loc 1 1262 9 is_stmt 1 view .LVU802
1262:quantum/rgblight.c ****     }
 3452               		.loc 1 1262 19 is_stmt 0 view .LVU803
 3453 00ac 8FEF      		ldi r24,lo8(-1)
 3454               	.L170:
 3455 00ae 8093 0000 		sts increment.3466,r24
 3456               	.L168:
1264:quantum/rgblight.c **** }
 3457               		.loc 1 1264 5 is_stmt 1 view .LVU804
1264:quantum/rgblight.c **** }
 3458               		.loc 1 1264 15 is_stmt 0 view .LVU805
 3459 00b2 8091 0000 		lds r24,increment.3466
 3460 00b6 890F      		add r24,r25
 3461 00b8 8C83      		std Y+4,r24
 3462               	/* epilogue start */
1265:quantum/rgblight.c **** #endif
 3463               		.loc 1 1265 1 view .LVU806
 3464 00ba DF91      		pop r29
 3465 00bc CF91      		pop r28
 3466 00be 1F91      		pop r17
 3467               	.LVL227:
1265:quantum/rgblight.c **** #endif
 3468               		.loc 1 1265 1 view .LVU807
 3469 00c0 0F91      		pop r16
 3470               	.LVL228:
1265:quantum/rgblight.c **** #endif
 3471               		.loc 1 1265 1 view .LVU808
 3472 00c2 FF90      		pop r15
 3473               	.LVL229:
1265:quantum/rgblight.c **** #endif
 3474               		.loc 1 1265 1 view .LVU809
 3475 00c4 EF90      		pop r14
 3476 00c6 DF90      		pop r13
 3477 00c8 CF90      		pop r12
 3478 00ca BF90      		pop r11
 3479 00cc AF90      		pop r10
 3480               	.LVL230:
1265:quantum/rgblight.c **** #endif
 3481               		.loc 1 1265 1 view .LVU810
 3482 00ce 9F90      		pop r9
 3483 00d0 8F90      		pop r8
 3484               	.LVL231:
1265:quantum/rgblight.c **** #endif
 3485               		.loc 1 1265 1 view .LVU811
 3486 00d2 0895      		ret
 3487               	.LVL232:
 3488               	.L160:
1251:quantum/rgblight.c **** 
 3489               		.loc 1 1251 61 discriminator 2 view .LVU812
 3490 00d4 25E5      		ldi r18,lo8(85)
 3491 00d6 30E0      		ldi r19,0
 3492 00d8 B901      		movw r22,r18
 3493 00da 681B      		sub r22,r24
 3494 00dc 790B      		sbc r23,r25
1251:quantum/rgblight.c **** 
 3495               		.loc 1 1251 20 discriminator 2 view .LVU813
 3496 00de 9B01      		movw r18,r22
 3497 00e0 220F      		lsl r18
 3498 00e2 331F      		rol r19
 3499 00e4 260F      		add r18,r22
 3500 00e6 371F      		adc r19,r23
1251:quantum/rgblight.c **** 
 3501               		.loc 1 1251 68 discriminator 2 view .LVU814
 3502 00e8 37FF      		sbrs r19,7
 3503 00ea 00C0      		rjmp .L163
 3504 00ec 2F5F      		subi r18,-1
 3505 00ee 3F4F      		sbci r19,-1
 3506 00f0 00C0      		rjmp .L163
 3507               	.LVL233:
 3508               	.L166:
 3509               	.LBB122:
1254:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3510               		.loc 1 1254 9 is_stmt 1 view .LVU815
1254:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3511               		.loc 1 1254 17 is_stmt 0 view .LVU816
 3512 00f2 8E2D      		mov r24,r14
 3513 00f4 01FD      		sbrc r16,1
 3514               	.LBE122:
1249:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3515               		.loc 1 1249 9 view .LVU817
 3516 00f6 8F2D      		mov r24,r15
 3517               	.L165:
 3518               	.LVL234:
 3519               	.LBB123:
1255:quantum/rgblight.c ****     }
 3520               		.loc 1 1255 9 is_stmt 1 discriminator 4 view .LVU818
 3521               	.LBB118:
 3522               	.LBI118:
 162:quantum/rgblight.c **** 
 3523               		.loc 1 162 6 discriminator 4 view .LVU819
 3524               	.LBB119:
 162:quantum/rgblight.c **** 
 3525               		.loc 1 162 70 discriminator 4 view .LVU820
 3526               	.LBE119:
 3527               	.LBE118:
1255:quantum/rgblight.c ****     }
 3528               		.loc 1 1255 89 is_stmt 0 discriminator 4 view .LVU821
 3529 00f8 2091 0000 		lds r18,rgblight_ranges+2
1255:quantum/rgblight.c ****     }
 3530               		.loc 1 1255 72 discriminator 4 view .LVU822
 3531 00fc 622F      		mov r22,r18
 3532 00fe 600F      		add r22,r16
 3533 0100 7727      		clr r23
 3534 0102 771F      		rol r23
1255:quantum/rgblight.c ****     }
 3535               		.loc 1 1255 9 discriminator 4 view .LVU823
 3536 0104 9B01      		movw r18,r22
 3537 0106 220F      		lsl r18
 3538 0108 331F      		rol r19
 3539 010a 260F      		add r18,r22
 3540 010c 371F      		adc r19,r23
 3541 010e 2050      		subi r18,lo8(-(led))
 3542 0110 3040      		sbci r19,hi8(-(led))
 3543               	.LBB121:
 3544               	.LBB120:
 162:quantum/rgblight.c **** 
 3545               		.loc 1 162 70 discriminator 4 view .LVU824
 3546 0112 412F      		mov r20,r17
 3547 0114 6091 0000 		lds r22,rgblight_config+2
 3548 0118 0E94 0000 		call sethsv_raw
 3549               	.LVL235:
 162:quantum/rgblight.c **** 
 3550               		.loc 1 162 70 discriminator 4 view .LVU825
 3551               	.LBE120:
 3552               	.LBE121:
 3553               	.LBE123:
1253:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3554               		.loc 1 1253 54 is_stmt 1 discriminator 4 view .LVU826
1253:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3555               		.loc 1 1253 55 is_stmt 0 discriminator 4 view .LVU827
 3556 011c 0F5F      		subi r16,lo8(-(1))
 3557               	.LVL236:
1253:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3558               		.loc 1 1253 55 discriminator 4 view .LVU828
 3559 011e 00C0      		rjmp .L164
 3560               		.cfi_endproc
 3561               	.LFE182:
 3563               		.section	.text.rgblight_effect_alternating,"ax",@progbits
 3564               	.global	rgblight_effect_alternating
 3566               	rgblight_effect_alternating:
 3567               	.LVL237:
 3568               	.LFB184:
1297:quantum/rgblight.c **** #endif
1298:quantum/rgblight.c **** 
1299:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_ALTERNATING
1300:quantum/rgblight.c **** void rgblight_effect_alternating(animation_status_t *anim) {
 3569               		.loc 1 1300 60 is_stmt 1 view -0
 3570               		.cfi_startproc
 3571               		.loc 1 1300 60 is_stmt 0 view .LVU830
 3572 0000 0F93      		push r16
 3573               	.LCFI78:
 3574               		.cfi_def_cfa_offset 3
 3575               		.cfi_offset 16, -2
 3576 0002 1F93      		push r17
 3577               	.LCFI79:
 3578               		.cfi_def_cfa_offset 4
 3579               		.cfi_offset 17, -3
 3580 0004 CF93      		push r28
 3581               	.LCFI80:
 3582               		.cfi_def_cfa_offset 5
 3583               		.cfi_offset 28, -4
 3584 0006 DF93      		push r29
 3585               	.LCFI81:
 3586               		.cfi_def_cfa_offset 6
 3587               		.cfi_offset 29, -5
 3588               	/* prologue: function */
 3589               	/* frame size = 0 */
 3590               	/* stack size = 4 */
 3591               	.L__stack_usage = 4
 3592 0008 EC01      		movw r28,r24
1301:quantum/rgblight.c ****     for (int i = 0; i < rgblight_ranges.effect_num_leds; i++) {
 3593               		.loc 1 1301 5 is_stmt 1 view .LVU831
 3594               	.LBB132:
 3595               		.loc 1 1301 10 view .LVU832
 3596               	.LVL238:
 3597               		.loc 1 1301 14 is_stmt 0 view .LVU833
 3598 000a 10E0      		ldi r17,0
 3599 000c 00E0      		ldi r16,0
 3600               	.LVL239:
 3601               	.L172:
 3602               		.loc 1 1301 21 is_stmt 1 discriminator 1 view .LVU834
 3603               		.loc 1 1301 40 is_stmt 0 discriminator 1 view .LVU835
 3604 000e 9091 0000 		lds r25,rgblight_ranges+4
 3605               		.loc 1 1301 5 discriminator 1 view .LVU836
 3606 0012 9017      		cp r25,r16
 3607 0014 1106      		cpc __zero_reg__,r17
 3608 0016 01F0      		breq .+2
 3609 0018 04F4      		brge .L176
 3610               	.LBE132:
1302:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
1303:quantum/rgblight.c ****         if (i < rgblight_ranges.effect_num_leds / 2 && anim->pos) {
1304:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
1305:quantum/rgblight.c ****         } else if (i >= rgblight_ranges.effect_num_leds / 2 && !anim->pos) {
1306:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
1307:quantum/rgblight.c ****         } else {
1308:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, 0, ledp);
1309:quantum/rgblight.c ****         }
1310:quantum/rgblight.c ****     }
1311:quantum/rgblight.c ****     rgblight_set();
 3611               		.loc 1 1311 5 is_stmt 1 view .LVU837
 3612 001a 0E94 0000 		call rgblight_set
 3613               	.LVL240:
1312:quantum/rgblight.c ****     anim->pos = (anim->pos + 1) % 2;
 3614               		.loc 1 1312 5 view .LVU838
 3615               		.loc 1 1312 22 is_stmt 0 view .LVU839
 3616 001e 8C81      		ldd r24,Y+4
 3617 0020 90E0      		ldi r25,0
 3618               		.loc 1 1312 28 view .LVU840
 3619 0022 0196      		adiw r24,1
 3620               		.loc 1 1312 33 view .LVU841
 3621 0024 8170      		andi r24,1
 3622 0026 9927      		clr r25
 3623               		.loc 1 1312 15 view .LVU842
 3624 0028 8C83      		std Y+4,r24
 3625               	/* epilogue start */
1313:quantum/rgblight.c **** }
 3626               		.loc 1 1313 1 view .LVU843
 3627 002a DF91      		pop r29
 3628 002c CF91      		pop r28
 3629               	.LVL241:
 3630               		.loc 1 1313 1 view .LVU844
 3631 002e 1F91      		pop r17
 3632 0030 0F91      		pop r16
 3633               	.LVL242:
 3634               		.loc 1 1313 1 view .LVU845
 3635 0032 0895      		ret
 3636               	.LVL243:
 3637               	.L176:
 3638               	.LBB141:
 3639               	.LBB133:
1302:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3640               		.loc 1 1302 9 is_stmt 1 view .LVU846
1302:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3641               		.loc 1 1302 34 is_stmt 0 view .LVU847
 3642 0034 2091 0000 		lds r18,rgblight_ranges+2
 3643 0038 A801      		movw r20,r16
 3644 003a 420F      		add r20,r18
 3645 003c 511D      		adc r21,__zero_reg__
 3646 003e 9A01      		movw r18,r20
 3647 0040 220F      		lsl r18
 3648 0042 331F      		rol r19
 3649 0044 240F      		add r18,r20
 3650 0046 351F      		adc r19,r21
1302:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3651               		.loc 1 1302 19 view .LVU848
 3652 0048 2050      		subi r18,lo8(-(led))
 3653 004a 3040      		sbci r19,hi8(-(led))
 3654               	.LVL244:
1303:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3655               		.loc 1 1303 9 is_stmt 1 view .LVU849
 3656 004c 4C81      		ldd r20,Y+4
 3657 004e 6091 0000 		lds r22,rgblight_config+2
 3658 0052 8091 0000 		lds r24,rgblight_config+1
1303:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3659               		.loc 1 1303 49 is_stmt 0 view .LVU850
 3660 0056 9695      		lsr r25
1303:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3661               		.loc 1 1303 12 view .LVU851
 3662 0058 9017      		cp r25,r16
 3663 005a 1106      		cpc __zero_reg__,r17
 3664 005c 01F0      		breq .L173
 3665 005e 04F0      		brlt .L173
1303:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3666               		.loc 1 1303 53 discriminator 1 view .LVU852
 3667 0060 4423      		tst r20
 3668 0062 01F0      		breq .L174
 3669               	.L181:
1306:quantum/rgblight.c ****         } else {
 3670               		.loc 1 1306 13 is_stmt 1 view .LVU853
 3671               	.LVL245:
 3672               	.LBB134:
 3673               	.LBI134:
 162:quantum/rgblight.c **** 
 3674               		.loc 1 162 6 view .LVU854
 3675               	.LBB135:
 162:quantum/rgblight.c **** 
 3676               		.loc 1 162 70 view .LVU855
 3677 0064 4091 0000 		lds r20,rgblight_config+3
 3678               	.LVL246:
 3679               	.L180:
 162:quantum/rgblight.c **** 
 3680               		.loc 1 162 70 is_stmt 0 view .LVU856
 3681               	.LBE135:
 3682               	.LBE134:
 3683               	.LBB136:
 3684               	.LBB137:
 3685 0068 0E94 0000 		call sethsv_raw
 3686               	.LVL247:
 162:quantum/rgblight.c **** 
 3687               		.loc 1 162 70 view .LVU857
 3688               	.LBE137:
 3689               	.LBE136:
 3690               	.LBE133:
1301:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3691               		.loc 1 1301 58 is_stmt 1 view .LVU858
1301:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3692               		.loc 1 1301 59 is_stmt 0 view .LVU859
 3693 006c 0F5F      		subi r16,-1
 3694 006e 1F4F      		sbci r17,-1
 3695               	.LVL248:
1301:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3696               		.loc 1 1301 59 view .LVU860
 3697 0070 00C0      		rjmp .L172
 3698               	.LVL249:
 3699               	.L173:
 3700               	.LBB140:
1305:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3701               		.loc 1 1305 16 is_stmt 1 discriminator 1 view .LVU861
1305:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3702               		.loc 1 1305 61 is_stmt 0 discriminator 1 view .LVU862
 3703 0072 4423      		tst r20
 3704 0074 01F0      		breq .L181
 3705               	.L174:
1308:quantum/rgblight.c ****         }
 3706               		.loc 1 1308 13 is_stmt 1 view .LVU863
 3707               	.LVL250:
 3708               	.LBB139:
 3709               	.LBI136:
 162:quantum/rgblight.c **** 
 3710               		.loc 1 162 6 view .LVU864
 3711               	.LBB138:
 162:quantum/rgblight.c **** 
 3712               		.loc 1 162 70 view .LVU865
 3713 0076 40E0      		ldi r20,0
 3714 0078 00C0      		rjmp .L180
 3715               	.LBE138:
 3716               	.LBE139:
 3717               	.LBE140:
 3718               	.LBE141:
 3719               		.cfi_endproc
 3720               	.LFE184:
 3722               		.section	.text.rgblight_effect_twinkle,"ax",@progbits
 3723               	.global	rgblight_effect_twinkle
 3725               	rgblight_effect_twinkle:
 3726               	.LVL251:
 3727               	.LFB185:
1314:quantum/rgblight.c **** #endif
1315:quantum/rgblight.c **** 
1316:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_TWINKLE
1317:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_TWINKLE_INTERVALS[] PROGMEM = {30, 15, 5};
1318:quantum/rgblight.c **** 
1319:quantum/rgblight.c **** typedef struct PACKED {
1320:quantum/rgblight.c ****     HSV     hsv;
1321:quantum/rgblight.c ****     uint8_t life;
1322:quantum/rgblight.c ****     uint8_t max_life;
1323:quantum/rgblight.c **** } TwinkleState;
1324:quantum/rgblight.c **** 
1325:quantum/rgblight.c **** static TwinkleState led_twinkle_state[RGBLED_NUM];
1326:quantum/rgblight.c **** 
1327:quantum/rgblight.c **** void rgblight_effect_twinkle(animation_status_t *anim) {
 3728               		.loc 1 1327 56 view -0
 3729               		.cfi_startproc
 3730               		.loc 1 1327 56 is_stmt 0 view .LVU867
 3731 0000 4F92      		push r4
 3732               	.LCFI82:
 3733               		.cfi_def_cfa_offset 3
 3734               		.cfi_offset 4, -2
 3735 0002 5F92      		push r5
 3736               	.LCFI83:
 3737               		.cfi_def_cfa_offset 4
 3738               		.cfi_offset 5, -3
 3739 0004 6F92      		push r6
 3740               	.LCFI84:
 3741               		.cfi_def_cfa_offset 5
 3742               		.cfi_offset 6, -4
 3743 0006 7F92      		push r7
 3744               	.LCFI85:
 3745               		.cfi_def_cfa_offset 6
 3746               		.cfi_offset 7, -5
 3747 0008 8F92      		push r8
 3748               	.LCFI86:
 3749               		.cfi_def_cfa_offset 7
 3750               		.cfi_offset 8, -6
 3751 000a 9F92      		push r9
 3752               	.LCFI87:
 3753               		.cfi_def_cfa_offset 8
 3754               		.cfi_offset 9, -7
 3755 000c AF92      		push r10
 3756               	.LCFI88:
 3757               		.cfi_def_cfa_offset 9
 3758               		.cfi_offset 10, -8
 3759 000e BF92      		push r11
 3760               	.LCFI89:
 3761               		.cfi_def_cfa_offset 10
 3762               		.cfi_offset 11, -9
 3763 0010 CF92      		push r12
 3764               	.LCFI90:
 3765               		.cfi_def_cfa_offset 11
 3766               		.cfi_offset 12, -10
 3767 0012 DF92      		push r13
 3768               	.LCFI91:
 3769               		.cfi_def_cfa_offset 12
 3770               		.cfi_offset 13, -11
 3771 0014 EF92      		push r14
 3772               	.LCFI92:
 3773               		.cfi_def_cfa_offset 13
 3774               		.cfi_offset 14, -12
 3775 0016 FF92      		push r15
 3776               	.LCFI93:
 3777               		.cfi_def_cfa_offset 14
 3778               		.cfi_offset 15, -13
 3779 0018 0F93      		push r16
 3780               	.LCFI94:
 3781               		.cfi_def_cfa_offset 15
 3782               		.cfi_offset 16, -14
 3783 001a 1F93      		push r17
 3784               	.LCFI95:
 3785               		.cfi_def_cfa_offset 16
 3786               		.cfi_offset 17, -15
 3787 001c CF93      		push r28
 3788               	.LCFI96:
 3789               		.cfi_def_cfa_offset 17
 3790               		.cfi_offset 28, -16
 3791 001e DF93      		push r29
 3792               	.LCFI97:
 3793               		.cfi_def_cfa_offset 18
 3794               		.cfi_offset 29, -17
 3795               	/* prologue: function */
 3796               	/* frame size = 0 */
 3797               	/* stack size = 16 */
 3798               	.L__stack_usage = 16
 3799 0020 FC01      		movw r30,r24
1328:quantum/rgblight.c ****     const bool random_color = anim->delta / 3;
 3800               		.loc 1 1328 5 is_stmt 1 view .LVU868
 3801               		.loc 1 1328 35 is_stmt 0 view .LVU869
 3802 0022 6280      		ldd r6,Z+2
 3803               	.LVL252:
1329:quantum/rgblight.c ****     const bool restart      = anim->pos == 0;
 3804               		.loc 1 1329 5 is_stmt 1 view .LVU870
 3805               		.loc 1 1329 35 is_stmt 0 view .LVU871
 3806 0024 4480      		ldd r4,Z+4
 3807               	.LVL253:
1330:quantum/rgblight.c ****     anim->pos               = 1;
 3808               		.loc 1 1330 5 is_stmt 1 view .LVU872
 3809               		.loc 1 1330 29 is_stmt 0 view .LVU873
 3810 0026 81E0      		ldi r24,lo8(1)
 3811               	.LVL254:
 3812               		.loc 1 1330 29 view .LVU874
 3813 0028 8483      		std Z+4,r24
1331:quantum/rgblight.c **** 
1332:quantum/rgblight.c ****     const uint8_t bottom = breathe_calc(0);
 3814               		.loc 1 1332 5 is_stmt 1 view .LVU875
 3815               	.LVL255:
 3816               	.LBB164:
 3817               	.LBI164:
1048:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 3818               		.loc 1 1048 16 view .LVU876
 3819               	.LBE164:
1051:quantum/rgblight.c **** #    else
 3820               		.loc 1 1051 5 view .LVU877
 3821               	.LBB166:
 3822               	.LBB165:
1051:quantum/rgblight.c **** #    else
 3823               		.loc 1 1051 12 view .LVU878
1051:quantum/rgblight.c **** #    else
 3824               		.loc 1 1051 12 view .LVU879
1051:quantum/rgblight.c **** #    else
 3825               		.loc 1 1051 12 view .LVU880
 3826 002a E0E0      		ldi r30,lo8(rgblight_effect_breathe_table)
 3827 002c F0E0      		ldi r31,hi8(rgblight_effect_breathe_table)
 3828               	.LVL256:
1051:quantum/rgblight.c **** #    else
 3829               		.loc 1 1051 12 is_stmt 0 view .LVU881
 3830               	/* #APP */
 3831               	 ;  1051 "quantum/rgblight.c" 1
 3832 002e 7490      		lpm r7, Z
 3833               		
 3834               	 ;  0 "" 2
 3835               	.LVL257:
1051:quantum/rgblight.c **** #    else
 3836               		.loc 1 1051 12 is_stmt 1 view .LVU882
1051:quantum/rgblight.c **** #    else
 3837               		.loc 1 1051 12 is_stmt 0 view .LVU883
 3838               	/* #NOAPP */
 3839               	.LBE165:
 3840               	.LBE166:
1333:quantum/rgblight.c ****     const uint8_t top    = breathe_calc(127);
 3841               		.loc 1 1333 5 is_stmt 1 view .LVU884
 3842               	.LBB167:
 3843               	.LBI167:
1048:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 3844               		.loc 1 1048 16 view .LVU885
 3845               	.LBE167:
1051:quantum/rgblight.c **** #    else
 3846               		.loc 1 1051 5 view .LVU886
 3847               	.LBB169:
 3848               	.LBB168:
1051:quantum/rgblight.c **** #    else
 3849               		.loc 1 1051 12 view .LVU887
1051:quantum/rgblight.c **** #    else
 3850               		.loc 1 1051 12 view .LVU888
1051:quantum/rgblight.c **** #    else
 3851               		.loc 1 1051 12 view .LVU889
 3852 0030 E0E0      		ldi r30,lo8(rgblight_effect_breathe_table+127)
 3853 0032 F0E0      		ldi r31,hi8(rgblight_effect_breathe_table+127)
 3854               	.LVL258:
1051:quantum/rgblight.c **** #    else
 3855               		.loc 1 1051 12 is_stmt 0 view .LVU890
 3856               	/* #APP */
 3857               	 ;  1051 "quantum/rgblight.c" 1
 3858 0034 E491      		lpm r30, Z
 3859               		
 3860               	 ;  0 "" 2
 3861               	.LVL259:
1051:quantum/rgblight.c **** #    else
 3862               		.loc 1 1051 12 is_stmt 1 view .LVU891
1051:quantum/rgblight.c **** #    else
 3863               		.loc 1 1051 12 is_stmt 0 view .LVU892
 3864               	/* #NOAPP */
 3865               	.LBE168:
 3866               	.LBE169:
1334:quantum/rgblight.c **** 
1335:quantum/rgblight.c ****     uint8_t frac(uint8_t n, uint8_t d) { return (uint16_t)255 * n / d; }
 3867               		.loc 1 1335 5 is_stmt 1 view .LVU893
1336:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 3868               		.loc 1 1336 5 view .LVU894
1337:quantum/rgblight.c **** 
1338:quantum/rgblight.c ****     for (uint8_t i = 0; i < rgblight_ranges.effect_num_leds; i++) {
 3869               		.loc 1 1338 5 view .LVU895
 3870               	.LBB170:
 3871               		.loc 1 1338 10 view .LVU896
 3872               		.loc 1 1338 18 is_stmt 0 view .LVU897
 3873 0036 812C      		mov r8,__zero_reg__
 3874               	.LBB171:
1339:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
1340:quantum/rgblight.c ****         HSV *         c = &(t->hsv);
1341:quantum/rgblight.c **** 
1342:quantum/rgblight.c ****         if (!random_color) {
1343:quantum/rgblight.c ****             c->h = rgblight_config.hue;
 3875               		.loc 1 1343 18 view .LVU898
 3876 0038 75E0      		ldi r23,lo8(5)
 3877 003a 972E      		mov r9,r23
 3878               	.LBB172:
 3879               	.LBB173:
1336:quantum/rgblight.c **** 
 3880               		.loc 1 1336 58 view .LVU899
 3881 003c F2E0      		ldi r31,lo8(2)
 3882 003e CF2E      		mov r12,r31
 3883 0040 DD24      		clr r13
 3884 0042 D394      		inc r13
 3885               	.LBE173:
 3886               	.LBE172:
1344:quantum/rgblight.c ****             c->s = rgblight_config.sat;
1345:quantum/rgblight.c ****         }
1346:quantum/rgblight.c **** 
1347:quantum/rgblight.c ****         if (restart) {
1348:quantum/rgblight.c ****             // Restart
1349:quantum/rgblight.c ****             t->life = 0;
1350:quantum/rgblight.c ****             c->v    = 0;
1351:quantum/rgblight.c ****         } else if (t->life) {
1352:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
1353:quantum/rgblight.c ****             t->life--;
1354:quantum/rgblight.c ****             uint8_t unscaled = frac(breathe_calc(frac(t->life, t->max_life)) - bottom, top - bottom
1355:quantum/rgblight.c ****             c->v             = scale(rgblight_config.val, unscaled);
1356:quantum/rgblight.c ****         } else if (rand() < scale((uint16_t)RAND_MAX * RGBLIGHT_EFFECT_TWINKLE_PROBABILITY, 127 + r
1357:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
1358:quantum/rgblight.c ****             if (random_color) {
1359:quantum/rgblight.c ****                 c->h = rand() % 0xFF;
 3887               		.loc 1 1359 31 view .LVU900
 3888 0044 AA24      		clr r10
 3889 0046 AA94      		dec r10
 3890 0048 B12C      		mov r11,__zero_reg__
 3891               	.LBB176:
 3892               	.LBB177:
 3893               	.LBB178:
1335:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 3894               		.loc 1 1335 63 view .LVU901
 3895 004a 5524      		clr r5
 3896 004c 5A94      		dec r5
 3897               	.LBE178:
 3898               	.LBE177:
1354:quantum/rgblight.c ****             c->v             = scale(rgblight_config.val, unscaled);
 3899               		.loc 1 1354 32 view .LVU902
 3900 004e E719      		sub r30,r7
 3901               	.LBB181:
 3902               	.LBB182:
1335:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 3903               		.loc 1 1335 67 view .LVU903
 3904 0050 0E2F      		mov r16,r30
 3905 0052 10E0      		ldi r17,0
 3906               	.LVL260:
 3907               	.L183:
1335:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 3908               		.loc 1 1335 67 view .LVU904
 3909               	.LBE182:
 3910               	.LBE181:
 3911               	.LBE176:
 3912               	.LBE171:
1338:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 3913               		.loc 1 1338 25 is_stmt 1 discriminator 1 view .LVU905
1338:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 3914               		.loc 1 1338 5 is_stmt 0 discriminator 1 view .LVU906
 3915 0054 8091 0000 		lds r24,rgblight_ranges+4
 3916 0058 8816      		cp r8,r24
 3917 005a 00F0      		brlo .L191
 3918               	.LBE170:
1360:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
1361:quantum/rgblight.c ****             }
1362:quantum/rgblight.c ****             c->v        = 0;
1363:quantum/rgblight.c ****             t->max_life = MAX(20, MIN(RGBLIGHT_EFFECT_TWINKLE_LIFE, rgblight_config.val));
1364:quantum/rgblight.c ****             t->life     = t->max_life;
1365:quantum/rgblight.c ****         } else {
1366:quantum/rgblight.c ****             // This LED is off, and was NOT selected to start brightening
1367:quantum/rgblight.c ****         }
1368:quantum/rgblight.c **** 
1369:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
1370:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
1371:quantum/rgblight.c ****     }
1372:quantum/rgblight.c **** 
1373:quantum/rgblight.c ****     rgblight_set();
 3919               		.loc 1 1373 5 is_stmt 1 view .LVU907
 3920               	/* epilogue start */
1374:quantum/rgblight.c **** }
 3921               		.loc 1 1374 1 is_stmt 0 view .LVU908
 3922 005c DF91      		pop r29
 3923 005e CF91      		pop r28
 3924 0060 1F91      		pop r17
 3925 0062 0F91      		pop r16
 3926 0064 FF90      		pop r15
 3927 0066 EF90      		pop r14
 3928 0068 DF90      		pop r13
 3929 006a CF90      		pop r12
 3930 006c BF90      		pop r11
 3931 006e AF90      		pop r10
 3932 0070 9F90      		pop r9
 3933 0072 8F90      		pop r8
 3934               	.LVL261:
 3935               		.loc 1 1374 1 view .LVU909
 3936 0074 7F90      		pop r7
 3937               	.LVL262:
 3938               		.loc 1 1374 1 view .LVU910
 3939 0076 6F90      		pop r6
 3940               	.LVL263:
 3941               		.loc 1 1374 1 view .LVU911
 3942 0078 5F90      		pop r5
 3943 007a 4F90      		pop r4
 3944               	.LVL264:
1373:quantum/rgblight.c **** }
 3945               		.loc 1 1373 5 view .LVU912
 3946 007c 0C94 0000 		jmp rgblight_set
 3947               	.LVL265:
 3948               	.L191:
 3949               	.LBB209:
 3950               	.LBB206:
1339:quantum/rgblight.c ****         HSV *         c = &(t->hsv);
 3951               		.loc 1 1339 9 is_stmt 1 view .LVU913
1339:quantum/rgblight.c ****         HSV *         c = &(t->hsv);
 3952               		.loc 1 1339 46 is_stmt 0 view .LVU914
 3953 0080 E82C      		mov r14,r8
 3954 0082 F12C      		mov r15,__zero_reg__
 3955               	.LVL266:
1340:quantum/rgblight.c **** 
 3956               		.loc 1 1340 9 is_stmt 1 view .LVU915
1342:quantum/rgblight.c ****             c->h = rgblight_config.hue;
 3957               		.loc 1 1342 9 view .LVU916
1342:quantum/rgblight.c ****             c->h = rgblight_config.hue;
 3958               		.loc 1 1342 12 is_stmt 0 view .LVU917
 3959 0084 82E0      		ldi r24,lo8(2)
 3960 0086 8615      		cp r24,r6
 3961 0088 00F0      		brlo .L184
1343:quantum/rgblight.c ****             c->s = rgblight_config.sat;
 3962               		.loc 1 1343 13 is_stmt 1 view .LVU918
1343:quantum/rgblight.c ****             c->s = rgblight_config.sat;
 3963               		.loc 1 1343 18 is_stmt 0 view .LVU919
 3964 008a 9E9C      		mul r9,r14
 3965 008c F001      		movw r30,r0
 3966 008e 9F9C      		mul r9,r15
 3967 0090 F00D      		add r31,r0
 3968 0092 1124      		clr __zero_reg__
 3969 0094 E050      		subi r30,lo8(-(led_twinkle_state))
 3970 0096 F040      		sbci r31,hi8(-(led_twinkle_state))
 3971 0098 8091 0000 		lds r24,rgblight_config+1
 3972 009c 8083      		st Z,r24
1344:quantum/rgblight.c ****         }
 3973               		.loc 1 1344 13 is_stmt 1 view .LVU920
1344:quantum/rgblight.c ****         }
 3974               		.loc 1 1344 18 is_stmt 0 view .LVU921
 3975 009e 8091 0000 		lds r24,rgblight_config+2
 3976 00a2 8183      		std Z+1,r24
 3977               	.L184:
1347:quantum/rgblight.c ****             // Restart
 3978               		.loc 1 1347 9 is_stmt 1 view .LVU922
1347:quantum/rgblight.c ****             // Restart
 3979               		.loc 1 1347 12 is_stmt 0 view .LVU923
 3980 00a4 4110      		cpse r4,__zero_reg__
 3981 00a6 00C0      		rjmp .L185
1349:quantum/rgblight.c ****             c->v    = 0;
 3982               		.loc 1 1349 13 is_stmt 1 view .LVU924
1349:quantum/rgblight.c ****             c->v    = 0;
 3983               		.loc 1 1349 21 is_stmt 0 view .LVU925
 3984 00a8 9E9C      		mul r9,r14
 3985 00aa F001      		movw r30,r0
 3986 00ac 9F9C      		mul r9,r15
 3987 00ae F00D      		add r31,r0
 3988 00b0 1124      		clr __zero_reg__
 3989 00b2 E050      		subi r30,lo8(-(led_twinkle_state))
 3990 00b4 F040      		sbci r31,hi8(-(led_twinkle_state))
 3991 00b6 1382      		std Z+3,__zero_reg__
1350:quantum/rgblight.c ****         } else if (t->life) {
 3992               		.loc 1 1350 13 is_stmt 1 view .LVU926
1350:quantum/rgblight.c ****         } else if (t->life) {
 3993               		.loc 1 1350 21 is_stmt 0 view .LVU927
 3994 00b8 1282      		std Z+2,__zero_reg__
 3995               	.L186:
1367:quantum/rgblight.c **** 
 3996               		.loc 1 1367 9 is_stmt 1 discriminator 2 view .LVU928
1369:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
 3997               		.loc 1 1369 9 discriminator 2 view .LVU929
 3998               	.LVL267:
1370:quantum/rgblight.c ****     }
 3999               		.loc 1 1370 9 discriminator 2 view .LVU930
 4000               	.LBB198:
 4001               	.LBI198:
 162:quantum/rgblight.c **** 
 4002               		.loc 1 162 6 discriminator 2 view .LVU931
 4003               	.LBB199:
 162:quantum/rgblight.c **** 
 4004               		.loc 1 162 70 discriminator 2 view .LVU932
 4005               	.LBE199:
 4006               	.LBE198:
1369:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
 4007               		.loc 1 1369 34 is_stmt 0 discriminator 2 view .LVU933
 4008 00ba 2091 0000 		lds r18,rgblight_ranges+2
 4009 00be C701      		movw r24,r14
 4010 00c0 820F      		add r24,r18
 4011 00c2 911D      		adc r25,__zero_reg__
 4012 00c4 9C01      		movw r18,r24
 4013 00c6 220F      		lsl r18
 4014 00c8 331F      		rol r19
 4015 00ca 280F      		add r18,r24
 4016 00cc 391F      		adc r19,r25
1369:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
 4017               		.loc 1 1369 19 discriminator 2 view .LVU934
 4018 00ce 2050      		subi r18,lo8(-(led))
 4019 00d0 3040      		sbci r19,hi8(-(led))
1370:quantum/rgblight.c ****     }
 4020               		.loc 1 1370 9 discriminator 2 view .LVU935
 4021 00d2 9E9C      		mul r9,r14
 4022 00d4 F001      		movw r30,r0
 4023 00d6 9F9C      		mul r9,r15
 4024 00d8 F00D      		add r31,r0
 4025 00da 1124      		clr __zero_reg__
 4026 00dc E050      		subi r30,lo8(-(led_twinkle_state))
 4027 00de F040      		sbci r31,hi8(-(led_twinkle_state))
 4028               	.LBB201:
 4029               	.LBB200:
 162:quantum/rgblight.c **** 
 4030               		.loc 1 162 70 discriminator 2 view .LVU936
 4031 00e0 4281      		ldd r20,Z+2
 4032 00e2 6181      		ldd r22,Z+1
 4033 00e4 8081      		ld r24,Z
 4034 00e6 0E94 0000 		call sethsv_raw
 4035               	.LVL268:
 162:quantum/rgblight.c **** 
 4036               		.loc 1 162 70 discriminator 2 view .LVU937
 4037               	.LBE200:
 4038               	.LBE201:
 4039               	.LBE206:
1338:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 4040               		.loc 1 1338 62 is_stmt 1 discriminator 2 view .LVU938
1338:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 4041               		.loc 1 1338 63 is_stmt 0 discriminator 2 view .LVU939
 4042 00ea 8394      		inc r8
 4043               	.LVL269:
1338:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 4044               		.loc 1 1338 63 discriminator 2 view .LVU940
 4045 00ec 00C0      		rjmp .L183
 4046               	.L185:
 4047               	.LBB207:
1351:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
 4048               		.loc 1 1351 16 is_stmt 1 view .LVU941
1351:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
 4049               		.loc 1 1351 21 is_stmt 0 view .LVU942
 4050 00ee 9E9C      		mul r9,r14
 4051 00f0 E001      		movw r28,r0
 4052 00f2 9F9C      		mul r9,r15
 4053 00f4 D00D      		add r29,r0
 4054 00f6 1124      		clr __zero_reg__
 4055 00f8 C050      		subi r28,lo8(-(led_twinkle_state))
 4056 00fa D040      		sbci r29,hi8(-(led_twinkle_state))
 4057 00fc 8B81      		ldd r24,Y+3
1351:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
 4058               		.loc 1 1351 19 view .LVU943
 4059 00fe 8823      		tst r24
 4060 0100 01F0      		breq .L187
 4061               	.LBB202:
1353:quantum/rgblight.c ****             uint8_t unscaled = frac(breathe_calc(frac(t->life, t->max_life)) - bottom, top - bottom
 4062               		.loc 1 1353 13 is_stmt 1 view .LVU944
1353:quantum/rgblight.c ****             uint8_t unscaled = frac(breathe_calc(frac(t->life, t->max_life)) - bottom, top - bottom
 4063               		.loc 1 1353 20 is_stmt 0 view .LVU945
 4064 0102 8150      		subi r24,lo8(-(-1))
 4065 0104 8B83      		std Y+3,r24
1354:quantum/rgblight.c ****             c->v             = scale(rgblight_config.val, unscaled);
 4066               		.loc 1 1354 13 is_stmt 1 view .LVU946
 4067               	.LVL270:
 4068               	.LBB185:
 4069               	.LBI177:
1335:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4070               		.loc 1 1335 13 view .LVU947
 4071               	.LBB179:
1335:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4072               		.loc 1 1335 42 view .LVU948
1335:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4073               		.loc 1 1335 42 is_stmt 0 view .LVU949
 4074               	.LBE179:
 4075               	.LBE185:
 4076               	.LBB186:
 4077               	.LBI186:
1048:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 4078               		.loc 1 1048 16 is_stmt 1 view .LVU950
 4079               	.LBE186:
 4080               	.LBE202:
 4081               	.LBE207:
 4082               	.LBE209:
1051:quantum/rgblight.c **** #    else
 4083               		.loc 1 1051 5 view .LVU951
 4084               	.LBB210:
 4085               	.LBB208:
 4086               	.LBB203:
 4087               	.LBB189:
 4088               	.LBB187:
1051:quantum/rgblight.c **** #    else
 4089               		.loc 1 1051 12 view .LVU952
1051:quantum/rgblight.c **** #    else
 4090               		.loc 1 1051 12 view .LVU953
1051:quantum/rgblight.c **** #    else
 4091               		.loc 1 1051 12 view .LVU954
 4092               	.LBE187:
 4093               	.LBE189:
 4094               	.LBB190:
 4095               	.LBB180:
1335:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4096               		.loc 1 1335 63 is_stmt 0 view .LVU955
 4097 0106 859D      		mul r24,r5
 4098 0108 C001      		movw r24,r0
 4099 010a 1124      		clr __zero_reg__
 4100               	.LVL271:
1335:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4101               		.loc 1 1335 67 view .LVU956
 4102 010c 6C81      		ldd r22,Y+4
 4103 010e 70E0      		ldi r23,0
 4104 0110 0E94 0000 		call __udivmodhi4
 4105               	.LBE180:
 4106               	.LBE190:
 4107               	.LBB191:
 4108               	.LBB188:
1051:quantum/rgblight.c **** #    else
 4109               		.loc 1 1051 12 view .LVU957
 4110 0114 FB01      		movw r30,r22
 4111 0116 FF27      		clr r31
 4112 0118 E050      		subi r30,lo8(-(rgblight_effect_breathe_table))
 4113 011a F040      		sbci r31,hi8(-(rgblight_effect_breathe_table))
 4114               	/* #APP */
 4115               	 ;  1051 "quantum/rgblight.c" 1
 4116 011c 8491      		lpm r24, Z
 4117               		
 4118               	 ;  0 "" 2
 4119               	.LVL272:
1051:quantum/rgblight.c **** #    else
 4120               		.loc 1 1051 12 is_stmt 1 view .LVU958
1051:quantum/rgblight.c **** #    else
 4121               		.loc 1 1051 12 is_stmt 0 view .LVU959
 4122               	/* #NOAPP */
 4123               	.LBE188:
 4124               	.LBE191:
 4125               	.LBB192:
 4126               	.LBI181:
1335:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4127               		.loc 1 1335 13 is_stmt 1 view .LVU960
 4128               	.LBB183:
1335:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4129               		.loc 1 1335 42 view .LVU961
1335:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4130               		.loc 1 1335 42 is_stmt 0 view .LVU962
 4131               	.LBE183:
 4132               	.LBE192:
1355:quantum/rgblight.c ****         } else if (rand() < scale((uint16_t)RAND_MAX * RGBLIGHT_EFFECT_TWINKLE_PROBABILITY, 127 + r
 4133               		.loc 1 1355 13 is_stmt 1 view .LVU963
 4134               	.LBB193:
 4135               	.LBI193:
1336:quantum/rgblight.c **** 
 4136               		.loc 1 1336 13 view .LVU964
 4137               	.LBB194:
1336:quantum/rgblight.c **** 
 4138               		.loc 1 1336 48 view .LVU965
1336:quantum/rgblight.c **** 
 4139               		.loc 1 1336 48 is_stmt 0 view .LVU966
 4140               	.LBE194:
 4141               	.LBE193:
1354:quantum/rgblight.c ****             c->v             = scale(rgblight_config.val, unscaled);
 4142               		.loc 1 1354 32 view .LVU967
 4143 011e E82F      		mov r30,r24
 4144 0120 E719      		sub r30,r7
 4145               	.LBB196:
 4146               	.LBB184:
1335:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4147               		.loc 1 1335 63 view .LVU968
 4148 0122 E59D      		mul r30,r5
 4149 0124 C001      		movw r24,r0
 4150 0126 1124      		clr __zero_reg__
1335:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4151               		.loc 1 1335 67 view .LVU969
 4152 0128 B801      		movw r22,r16
 4153 012a 0E94 0000 		call __udivmodhi4
 4154               	.LBE184:
 4155               	.LBE196:
1355:quantum/rgblight.c ****         } else if (rand() < scale((uint16_t)RAND_MAX * RGBLIGHT_EFFECT_TWINKLE_PROBABILITY, 127 + r
 4156               		.loc 1 1355 32 view .LVU970
 4157 012e 8091 0000 		lds r24,rgblight_config+3
 4158               	.LBB197:
 4159               	.LBB195:
1336:quantum/rgblight.c **** 
 4160               		.loc 1 1336 58 view .LVU971
 4161 0132 689F      		mul r22,r24
 4162 0134 B001      		movw r22,r0
 4163 0136 1124      		clr __zero_reg__
1336:quantum/rgblight.c **** 
 4164               		.loc 1 1336 67 view .LVU972
 4165 0138 7A83      		std Y+2,r23
 4166               	.LBE195:
 4167               	.LBE197:
 4168               	.LBE203:
 4169 013a 00C0      		rjmp .L186
 4170               	.L187:
1356:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4171               		.loc 1 1356 16 is_stmt 1 view .LVU973
1356:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4172               		.loc 1 1356 20 is_stmt 0 view .LVU974
 4173 013c 0E94 0000 		call rand
 4174               	.LVL273:
 4175               	.LBB204:
 4176               	.LBI172:
1336:quantum/rgblight.c **** 
 4177               		.loc 1 1336 13 is_stmt 1 view .LVU975
 4178               	.LBB174:
1336:quantum/rgblight.c **** 
 4179               		.loc 1 1336 48 view .LVU976
1336:quantum/rgblight.c **** 
 4180               		.loc 1 1336 48 is_stmt 0 view .LVU977
 4181               	.LBE174:
 4182               	.LBE204:
1356:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4183               		.loc 1 1356 29 view .LVU978
 4184 0140 2091 0000 		lds r18,rgblight_config+3
 4185 0144 2695      		lsr r18
 4186 0146 2158      		subi r18,lo8(-(127))
 4187               	.LBB205:
 4188               	.LBB175:
1336:quantum/rgblight.c **** 
 4189               		.loc 1 1336 58 view .LVU979
 4190 0148 2C9D      		mul r18,r12
 4191 014a A001      		movw r20,r0
 4192 014c 2D9D      		mul r18,r13
 4193 014e 500D      		add r21,r0
 4194 0150 1124      		clr __zero_reg__
1336:quantum/rgblight.c **** 
 4195               		.loc 1 1336 67 view .LVU980
 4196 0152 452F      		mov r20,r21
 4197 0154 5527      		clr r21
 4198               	.LBE175:
 4199               	.LBE205:
1356:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4200               		.loc 1 1356 19 view .LVU981
 4201 0156 8417      		cp r24,r20
 4202 0158 9507      		cpc r25,r21
 4203 015a 04F0      		brlt .+2
 4204 015c 00C0      		rjmp .L186
1358:quantum/rgblight.c ****                 c->h = rand() % 0xFF;
 4205               		.loc 1 1358 13 is_stmt 1 view .LVU982
1358:quantum/rgblight.c ****                 c->h = rand() % 0xFF;
 4206               		.loc 1 1358 16 is_stmt 0 view .LVU983
 4207 015e 82E0      		ldi r24,lo8(2)
 4208 0160 8615      		cp r24,r6
 4209 0162 00F4      		brsh .L188
1359:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
 4210               		.loc 1 1359 17 is_stmt 1 view .LVU984
1359:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
 4211               		.loc 1 1359 24 is_stmt 0 view .LVU985
 4212 0164 0E94 0000 		call rand
 4213               	.LVL274:
1359:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
 4214               		.loc 1 1359 31 view .LVU986
 4215 0168 B501      		movw r22,r10
 4216 016a 0E94 0000 		call __divmodhi4
1359:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
 4217               		.loc 1 1359 22 view .LVU987
 4218 016e 8883      		st Y,r24
1360:quantum/rgblight.c ****             }
 4219               		.loc 1 1360 17 is_stmt 1 view .LVU988
1360:quantum/rgblight.c ****             }
 4220               		.loc 1 1360 25 is_stmt 0 view .LVU989
 4221 0170 0E94 0000 		call rand
 4222               	.LVL275:
1360:quantum/rgblight.c ****             }
 4223               		.loc 1 1360 55 view .LVU990
 4224 0174 2091 0000 		lds r18,rgblight_config+2
 4225 0178 2695      		lsr r18
 4226 017a 622F      		mov r22,r18
 4227 017c 70E0      		ldi r23,0
1360:quantum/rgblight.c ****             }
 4228               		.loc 1 1360 32 view .LVU991
 4229 017e 0E94 0000 		call __divmodhi4
1360:quantum/rgblight.c ****             }
 4230               		.loc 1 1360 61 view .LVU992
 4231 0182 280F      		add r18,r24
1360:quantum/rgblight.c ****             }
 4232               		.loc 1 1360 22 view .LVU993
 4233 0184 2983      		std Y+1,r18
 4234               	.L188:
1362:quantum/rgblight.c ****             t->max_life = MAX(20, MIN(RGBLIGHT_EFFECT_TWINKLE_LIFE, rgblight_config.val));
 4235               		.loc 1 1362 13 is_stmt 1 view .LVU994
1362:quantum/rgblight.c ****             t->max_life = MAX(20, MIN(RGBLIGHT_EFFECT_TWINKLE_LIFE, rgblight_config.val));
 4236               		.loc 1 1362 25 is_stmt 0 view .LVU995
 4237 0186 9E9C      		mul r9,r14
 4238 0188 F001      		movw r30,r0
 4239 018a 9F9C      		mul r9,r15
 4240 018c F00D      		add r31,r0
 4241 018e 1124      		clr __zero_reg__
 4242 0190 E050      		subi r30,lo8(-(led_twinkle_state))
 4243 0192 F040      		sbci r31,hi8(-(led_twinkle_state))
 4244 0194 1282      		std Z+2,__zero_reg__
1363:quantum/rgblight.c ****             t->life     = t->max_life;
 4245               		.loc 1 1363 13 is_stmt 1 view .LVU996
1363:quantum/rgblight.c ****             t->life     = t->max_life;
 4246               		.loc 1 1363 25 is_stmt 0 view .LVU997
 4247 0196 8091 0000 		lds r24,rgblight_config+3
 4248 019a 893C      		cpi r24,lo8(-55)
 4249 019c 00F0      		brlo .L189
 4250 019e 88EC      		ldi r24,lo8(-56)
 4251               	.L190:
 4252 01a0 9E9C      		mul r9,r14
 4253 01a2 F001      		movw r30,r0
 4254 01a4 9F9C      		mul r9,r15
 4255 01a6 F00D      		add r31,r0
 4256 01a8 1124      		clr __zero_reg__
 4257 01aa E050      		subi r30,lo8(-(led_twinkle_state))
 4258 01ac F040      		sbci r31,hi8(-(led_twinkle_state))
 4259 01ae 8483      		std Z+4,r24
1364:quantum/rgblight.c ****         } else {
 4260               		.loc 1 1364 13 is_stmt 1 view .LVU998
1364:quantum/rgblight.c ****         } else {
 4261               		.loc 1 1364 25 is_stmt 0 view .LVU999
 4262 01b0 8383      		std Z+3,r24
 4263 01b2 00C0      		rjmp .L186
 4264               	.L189:
1364:quantum/rgblight.c ****         } else {
 4265               		.loc 1 1364 25 view .LVU1000
 4266 01b4 8431      		cpi r24,lo8(20)
 4267 01b6 00F4      		brsh .L190
 4268 01b8 84E1      		ldi r24,lo8(20)
 4269 01ba 00C0      		rjmp .L190
 4270               	.LBE208:
 4271               	.LBE210:
 4272               		.cfi_endproc
 4273               	.LFE185:
 4275               		.section	.text.rgblight_disable,"ax",@progbits
 4276               	.global	rgblight_disable
 4278               	rgblight_disable:
 4279               	.LFB116:
 393:quantum/rgblight.c ****     rgblight_config.enable = 0;
 4280               		.loc 1 393 29 is_stmt 1 view -0
 4281               		.cfi_startproc
 4282               	/* prologue: function */
 4283               	/* frame size = 0 */
 4284               	/* stack size = 0 */
 4285               	.L__stack_usage = 0
 394:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 4286               		.loc 1 394 5 view .LVU1002
 394:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 4287               		.loc 1 394 28 is_stmt 0 view .LVU1003
 4288 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4289 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4290 0004 8081      		ld r24,Z
 4291 0006 8E7F      		andi r24,lo8(~(1<<0))
 4292 0008 8083      		st Z,r24
 395:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4293               		.loc 1 395 5 is_stmt 1 view .LVU1004
 4294 000a 6081      		ld r22,Z
 4295 000c 7181      		ldd r23,Z+1
 4296 000e 8281      		ldd r24,Z+2
 4297 0010 9381      		ldd r25,Z+3
 4298 0012 0E94 0000 		call eeconfig_update_rgblight
 4299               	.LVL276:
 396:quantum/rgblight.c ****     rgblight_timer_disable();
 4300               		.loc 1 396 96 view .LVU1005
 397:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 4301               		.loc 1 397 5 view .LVU1006
 4302               	.LBB215:
 4303               	.LBI215:
 886:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4304               		.loc 1 886 6 view .LVU1007
 4305               	.LBB216:
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4306               		.loc 1 887 5 view .LVU1008
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4307               		.loc 1 887 35 is_stmt 0 view .LVU1009
 4308 0016 1092 0000 		sts rgblight_status+1,__zero_reg__
 888:quantum/rgblight.c **** }
 4309               		.loc 1 888 43 is_stmt 1 view .LVU1010
 4310               	.LBE216:
 4311               	.LBE215:
 398:quantum/rgblight.c ****     wait_ms(50);
 4312               		.loc 1 398 35 view .LVU1011
 399:quantum/rgblight.c ****     rgblight_set();
 4313               		.loc 1 399 5 view .LVU1012
 4314               	.LVL277:
 4315               	.LBB217:
 4316               	.LBI217:
 166:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** {
 4317               		.loc 3 166 1 view .LVU1013
 4318               	.LBB218:
 168:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 4319               		.loc 3 168 2 view .LVU1014
 172:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 4320               		.loc 3 172 2 view .LVU1015
 173:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 4321               		.loc 3 173 2 view .LVU1016
 174:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 4322               		.loc 3 174 2 view .LVU1017
 184:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	#endif
 4323               		.loc 3 184 3 view .LVU1018
 4324               		.loc 3 187 2 view .LVU1019
 4325 001a 2FEF      		ldi r18,lo8(159999)
 4326 001c 80E7      		ldi r24,hi8(159999)
 4327 001e 92E0      		ldi r25,hlo8(159999)
 4328 0020 2150      	1:	subi r18,1
 4329 0022 8040      		sbci r24,0
 4330 0024 9040      		sbci r25,0
 4331 0026 01F4      		brne 1b
 4332 0028 00C0      		rjmp .
 4333 002a 0000      		nop
 4334               	.LVL278:
 4335               		.loc 3 187 2 is_stmt 0 view .LVU1020
 4336               	.LBE218:
 4337               	.LBE217:
 400:quantum/rgblight.c **** }
 4338               		.loc 1 400 5 is_stmt 1 view .LVU1021
 4339 002c 0C94 0000 		jmp rgblight_set
 4340               	.LVL279:
 4341               		.cfi_endproc
 4342               	.LFE116:
 4344               		.section	.text.rgblight_disable_noeeprom,"ax",@progbits
 4345               	.global	rgblight_disable_noeeprom
 4347               	rgblight_disable_noeeprom:
 4348               	.LFB117:
 403:quantum/rgblight.c ****     rgblight_config.enable = 0;
 4349               		.loc 1 403 38 view -0
 4350               		.cfi_startproc
 4351               	/* prologue: function */
 4352               	/* frame size = 0 */
 4353               	/* stack size = 0 */
 4354               	.L__stack_usage = 0
 404:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4355               		.loc 1 404 5 view .LVU1023
 404:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4356               		.loc 1 404 28 is_stmt 0 view .LVU1024
 4357 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4358 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4359 0004 8081      		ld r24,Z
 4360 0006 8E7F      		andi r24,lo8(~(1<<0))
 4361 0008 8083      		st Z,r24
 405:quantum/rgblight.c ****     rgblight_timer_disable();
 4362               		.loc 1 405 98 is_stmt 1 view .LVU1025
 406:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 4363               		.loc 1 406 5 view .LVU1026
 4364               	.LBB223:
 4365               	.LBI223:
 886:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4366               		.loc 1 886 6 view .LVU1027
 4367               	.LBB224:
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4368               		.loc 1 887 5 view .LVU1028
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4369               		.loc 1 887 35 is_stmt 0 view .LVU1029
 4370 000a 1092 0000 		sts rgblight_status+1,__zero_reg__
 888:quantum/rgblight.c **** }
 4371               		.loc 1 888 43 is_stmt 1 view .LVU1030
 4372               	.LBE224:
 4373               	.LBE223:
 407:quantum/rgblight.c ****     wait_ms(50);
 4374               		.loc 1 407 35 view .LVU1031
 408:quantum/rgblight.c ****     rgblight_set();
 4375               		.loc 1 408 5 view .LVU1032
 4376               	.LVL280:
 4377               	.LBB225:
 4378               	.LBI225:
 166:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** {
 4379               		.loc 3 166 1 view .LVU1033
 4380               	.LBB226:
 168:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 4381               		.loc 3 168 2 view .LVU1034
 172:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 4382               		.loc 3 172 2 view .LVU1035
 173:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 4383               		.loc 3 173 2 view .LVU1036
 174:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 
 4384               		.loc 3 174 2 view .LVU1037
 184:/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/util/delay.h **** 	#endif
 4385               		.loc 3 184 3 view .LVU1038
 4386               		.loc 3 187 2 view .LVU1039
 4387 000e 2FEF      		ldi r18,lo8(159999)
 4388 0010 80E7      		ldi r24,hi8(159999)
 4389 0012 92E0      		ldi r25,hlo8(159999)
 4390 0014 2150      	1:	subi r18,1
 4391 0016 8040      		sbci r24,0
 4392 0018 9040      		sbci r25,0
 4393 001a 01F4      		brne 1b
 4394 001c 00C0      		rjmp .
 4395 001e 0000      		nop
 4396               	.LVL281:
 4397               		.loc 3 187 2 is_stmt 0 view .LVU1040
 4398               	.LBE226:
 4399               	.LBE225:
 409:quantum/rgblight.c **** }
 4400               		.loc 1 409 5 is_stmt 1 view .LVU1041
 4401 0020 0C94 0000 		jmp rgblight_set
 4402               	.LVL282:
 4403               		.cfi_endproc
 4404               	.LFE117:
 4406               		.section	.text.rgblight_suspend,"ax",@progbits
 4407               	.global	rgblight_suspend
 4409               	rgblight_suspend:
 4410               	.LFB165:
 750:quantum/rgblight.c ****     rgblight_timer_disable();
 4411               		.loc 1 750 29 view -0
 4412               		.cfi_startproc
 4413               	/* prologue: function */
 4414               	/* frame size = 0 */
 4415               	/* stack size = 0 */
 4416               	.L__stack_usage = 0
 751:quantum/rgblight.c ****     if (!is_suspended) {
 4417               		.loc 1 751 5 view .LVU1043
 4418               	.LBB229:
 4419               	.LBI229:
 886:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4420               		.loc 1 886 6 view .LVU1044
 4421               	.LBB230:
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4422               		.loc 1 887 5 view .LVU1045
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4423               		.loc 1 887 35 is_stmt 0 view .LVU1046
 4424 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 888:quantum/rgblight.c **** }
 4425               		.loc 1 888 43 is_stmt 1 view .LVU1047
 4426               	.LBE230:
 4427               	.LBE229:
 752:quantum/rgblight.c ****         is_suspended        = true;
 4428               		.loc 1 752 5 view .LVU1048
 752:quantum/rgblight.c ****         is_suspended        = true;
 4429               		.loc 1 752 8 is_stmt 0 view .LVU1049
 4430 0004 8091 0000 		lds r24,is_suspended
 4431 0008 8111      		cpse r24,__zero_reg__
 4432 000a 00C0      		rjmp .L194
 753:quantum/rgblight.c ****         pre_suspend_enabled = rgblight_config.enable;
 4433               		.loc 1 753 9 is_stmt 1 view .LVU1050
 753:quantum/rgblight.c ****         pre_suspend_enabled = rgblight_config.enable;
 4434               		.loc 1 753 29 is_stmt 0 view .LVU1051
 4435 000c 81E0      		ldi r24,lo8(1)
 4436 000e 8093 0000 		sts is_suspended,r24
 754:quantum/rgblight.c **** 
 4437               		.loc 1 754 9 is_stmt 1 view .LVU1052
 754:quantum/rgblight.c **** 
 4438               		.loc 1 754 46 is_stmt 0 view .LVU1053
 4439 0012 8091 0000 		lds r24,rgblight_config
 4440 0016 8170      		andi r24,1
 754:quantum/rgblight.c **** 
 4441               		.loc 1 754 29 view .LVU1054
 4442 0018 8093 0000 		sts pre_suspend_enabled,r24
 762:quantum/rgblight.c ****     }
 4443               		.loc 1 762 9 is_stmt 1 view .LVU1055
 4444 001c 0C94 0000 		jmp rgblight_disable_noeeprom
 4445               	.LVL283:
 4446               	.L194:
 4447               	/* epilogue start */
 764:quantum/rgblight.c **** 
 4448               		.loc 1 764 1 is_stmt 0 view .LVU1056
 4449 0020 0895      		ret
 4450               		.cfi_endproc
 4451               	.LFE165:
 4453               		.section	.text.rgblight_timer_init,"ax",@progbits
 4454               	.global	rgblight_timer_init
 4456               	rgblight_timer_init:
 4457               	.LFB169:
 886:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4458               		.loc 1 886 32 is_stmt 1 view -0
 4459               		.cfi_startproc
 4460               	/* prologue: function */
 4461               	/* frame size = 0 */
 4462               	/* stack size = 0 */
 4463               	.L__stack_usage = 0
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4464               		.loc 1 887 5 view .LVU1058
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4465               		.loc 1 887 35 is_stmt 0 view .LVU1059
 4466 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 888:quantum/rgblight.c **** }
 4467               		.loc 1 888 43 is_stmt 1 view .LVU1060
 4468               	/* epilogue start */
 889:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 4469               		.loc 1 889 1 is_stmt 0 view .LVU1061
 4470 0004 0895      		ret
 4471               		.cfi_endproc
 4472               	.LFE169:
 4474               		.section	.text.rgblight_timer_enable,"ax",@progbits
 4475               	.global	rgblight_timer_enable
 4477               	rgblight_timer_enable:
 4478               	.LFB170:
 890:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 4479               		.loc 1 890 34 is_stmt 1 view -0
 4480               		.cfi_startproc
 4481               	/* prologue: function */
 4482               	/* frame size = 0 */
 4483               	/* stack size = 0 */
 4484               	.L__stack_usage = 0
 891:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 4485               		.loc 1 891 5 view .LVU1063
 4486               	.LVL284:
 4487               	.LBB233:
 4488               	.LBI233:
 107:quantum/rgblight.c **** 
 4489               		.loc 1 107 19 view .LVU1064
 4490               	.LBB234:
 107:quantum/rgblight.c **** 
 4491               		.loc 1 107 52 view .LVU1065
 4492               	.LBE234:
 4493               	.LBE233:
 891:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 4494               		.loc 1 891 42 is_stmt 0 view .LVU1066
 4495 0000 6091 0000 		lds r22,rgblight_config
 4496 0004 6695      		lsr r22
 4497               	.LBB236:
 4498               	.LBB235:
 107:quantum/rgblight.c **** 
 4499               		.loc 1 107 59 view .LVU1067
 4500 0006 70E0      		ldi r23,0
 4501 0008 4BE0      		ldi r20,lo8(11)
 4502 000a 50E0      		ldi r21,0
 4503 000c 80E0      		ldi r24,lo8(static_effect_table)
 4504 000e 90E0      		ldi r25,hi8(static_effect_table)
 4505 0010 0E94 0000 		call memchr
 4506               	.LVL285:
 107:quantum/rgblight.c **** 
 4507               		.loc 1 107 59 view .LVU1068
 4508               	.LBE235:
 4509               	.LBE236:
 891:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 4510               		.loc 1 891 8 view .LVU1069
 4511 0014 892B      		or r24,r25
 4512 0016 01F4      		brne .L198
 892:quantum/rgblight.c ****     }
 4513               		.loc 1 892 9 is_stmt 1 view .LVU1070
 892:quantum/rgblight.c ****     }
 4514               		.loc 1 892 39 is_stmt 0 view .LVU1071
 4515 0018 81E0      		ldi r24,lo8(1)
 4516 001a 8093 0000 		sts rgblight_status+1,r24
 4517               	.L198:
 894:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4518               		.loc 1 894 5 is_stmt 1 view .LVU1072
 894:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4519               		.loc 1 894 35 is_stmt 0 view .LVU1073
 4520 001e 0E94 0000 		call timer_read
 4521               	.LVL286:
 894:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4522               		.loc 1 894 33 view .LVU1074
 4523 0022 9093 0000 		sts animation_status+1,r25
 4524 0026 8093 0000 		sts animation_status,r24
 895:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 4525               		.loc 1 895 43 is_stmt 1 view .LVU1075
 896:quantum/rgblight.c **** }
 4526               		.loc 1 896 41 view .LVU1076
 4527               	/* epilogue start */
 897:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 4528               		.loc 1 897 1 is_stmt 0 view .LVU1077
 4529 002a 0895      		ret
 4530               		.cfi_endproc
 4531               	.LFE170:
 4533               		.section	.text.rgblight_mode_eeprom_helper,"ax",@progbits
 4534               	.global	rgblight_mode_eeprom_helper
 4536               	rgblight_mode_eeprom_helper:
 4537               	.LVL287:
 4538               	.LFB109:
 328:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 4539               		.loc 1 328 70 is_stmt 1 view -0
 4540               		.cfi_startproc
 4541               	/* prologue: function */
 4542               	/* frame size = 0 */
 4543               	/* stack size = 0 */
 4544               	.L__stack_usage = 0
 329:quantum/rgblight.c ****         return;
 4545               		.loc 1 329 5 view .LVU1079
 329:quantum/rgblight.c ****         return;
 4546               		.loc 1 329 25 is_stmt 0 view .LVU1080
 4547 0000 9091 0000 		lds r25,rgblight_config
 329:quantum/rgblight.c ****         return;
 4548               		.loc 1 329 8 view .LVU1081
 4549 0004 90FF      		sbrs r25,0
 4550 0006 00C0      		rjmp .L199
 332:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 4551               		.loc 1 332 5 is_stmt 1 view .LVU1082
 4552 0008 9170      		andi r25,lo8(1)
 332:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 4553               		.loc 1 332 8 is_stmt 0 view .LVU1083
 4554 000a 8111      		cpse r24,__zero_reg__
 4555 000c 00C0      		rjmp .L201
 333:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 4556               		.loc 1 333 9 is_stmt 1 view .LVU1084
 333:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 4557               		.loc 1 333 30 is_stmt 0 view .LVU1085
 4558 000e 9260      		ori r25,lo8(2)
 4559               	.LVL288:
 4560               	.L210:
 337:quantum/rgblight.c ****     }
 4561               		.loc 1 337 30 view .LVU1086
 4562 0010 9093 0000 		sts rgblight_config,r25
 339:quantum/rgblight.c ****     if (write_to_eeprom) {
 4563               		.loc 1 339 35 is_stmt 1 view .LVU1087
 340:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 4564               		.loc 1 340 5 view .LVU1088
 340:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 4565               		.loc 1 340 8 is_stmt 0 view .LVU1089
 4566 0014 6623      		tst r22
 4567 0016 01F0      		breq .L204
 341:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 4568               		.loc 1 341 9 is_stmt 1 view .LVU1090
 4569 0018 6091 0000 		lds r22,rgblight_config
 4570 001c 7091 0000 		lds r23,rgblight_config+1
 4571 0020 8091 0000 		lds r24,rgblight_config+2
 4572 0024 9091 0000 		lds r25,rgblight_config+3
 4573               	.LVL289:
 341:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 4574               		.loc 1 341 9 is_stmt 0 view .LVU1091
 4575 0028 0E94 0000 		call eeconfig_update_rgblight
 4576               	.LVL290:
 342:quantum/rgblight.c ****     } else {
 4577               		.loc 1 342 70 is_stmt 1 view .LVU1092
 4578               	.L204:
 344:quantum/rgblight.c ****     }
 4579               		.loc 1 344 72 view .LVU1093
 346:quantum/rgblight.c ****         rgblight_timer_disable();
 4580               		.loc 1 346 5 view .LVU1094
 4581               	.LBB241:
 4582               	.LBI241:
 107:quantum/rgblight.c **** 
 4583               		.loc 1 107 19 view .LVU1095
 4584               	.LBB242:
 107:quantum/rgblight.c **** 
 4585               		.loc 1 107 52 view .LVU1096
 4586               	.LBE242:
 4587               	.LBE241:
 346:quantum/rgblight.c ****         rgblight_timer_disable();
 4588               		.loc 1 346 41 is_stmt 0 view .LVU1097
 4589 002c 6091 0000 		lds r22,rgblight_config
 4590 0030 6695      		lsr r22
 4591               	.LBB244:
 4592               	.LBB243:
 107:quantum/rgblight.c **** 
 4593               		.loc 1 107 59 view .LVU1098
 4594 0032 70E0      		ldi r23,0
 4595 0034 4BE0      		ldi r20,lo8(11)
 4596 0036 50E0      		ldi r21,0
 4597 0038 80E0      		ldi r24,lo8(static_effect_table)
 4598 003a 90E0      		ldi r25,hi8(static_effect_table)
 4599 003c 0E94 0000 		call memchr
 4600               	.LVL291:
 107:quantum/rgblight.c **** 
 4601               		.loc 1 107 59 view .LVU1099
 4602               	.LBE243:
 4603               	.LBE244:
 346:quantum/rgblight.c ****         rgblight_timer_disable();
 4604               		.loc 1 346 8 view .LVU1100
 4605 0040 892B      		or r24,r25
 4606 0042 01F0      		breq .L205
 347:quantum/rgblight.c ****     } else {
 4607               		.loc 1 347 9 is_stmt 1 view .LVU1101
 4608               	.LBB245:
 4609               	.LBI245:
 886:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4610               		.loc 1 886 6 view .LVU1102
 4611               	.LBB246:
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4612               		.loc 1 887 5 view .LVU1103
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4613               		.loc 1 887 35 is_stmt 0 view .LVU1104
 4614 0044 1092 0000 		sts rgblight_status+1,__zero_reg__
 888:quantum/rgblight.c **** }
 4615               		.loc 1 888 43 is_stmt 1 view .LVU1105
 4616               	.L206:
 4617               	.LBE246:
 4618               	.LBE245:
 352:quantum/rgblight.c **** #endif
 4619               		.loc 1 352 5 view .LVU1106
 352:quantum/rgblight.c **** #endif
 4620               		.loc 1 352 30 is_stmt 0 view .LVU1107
 4621 0048 81E0      		ldi r24,lo8(1)
 4622 004a 8093 0000 		sts animation_status+3,r24
 354:quantum/rgblight.c **** }
 4623               		.loc 1 354 5 is_stmt 1 view .LVU1108
 4624 004e 4091 0000 		lds r20,rgblight_config+3
 4625 0052 6091 0000 		lds r22,rgblight_config+2
 4626 0056 8091 0000 		lds r24,rgblight_config+1
 4627 005a 0C94 0000 		jmp rgblight_sethsv_noeeprom
 4628               	.LVL292:
 4629               	.L201:
 334:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 4630               		.loc 1 334 12 view .LVU1109
 334:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 4631               		.loc 1 334 15 is_stmt 0 view .LVU1110
 4632 005e 8B32      		cpi r24,lo8(43)
 4633 0060 00F0      		brlo .L203
 335:quantum/rgblight.c ****     } else {
 4634               		.loc 1 335 9 is_stmt 1 view .LVU1111
 335:quantum/rgblight.c ****     } else {
 4635               		.loc 1 335 30 is_stmt 0 view .LVU1112
 4636 0062 9465      		ori r25,lo8(84)
 4637 0064 00C0      		rjmp .L210
 4638               	.L203:
 337:quantum/rgblight.c ****     }
 4639               		.loc 1 337 9 is_stmt 1 view .LVU1113
 337:quantum/rgblight.c ****     }
 4640               		.loc 1 337 30 is_stmt 0 view .LVU1114
 4641 0066 880F      		lsl r24
 4642               	.LVL293:
 337:quantum/rgblight.c ****     }
 4643               		.loc 1 337 30 view .LVU1115
 4644 0068 982B      		or r25,r24
 4645 006a 00C0      		rjmp .L210
 4646               	.LVL294:
 4647               	.L205:
 349:quantum/rgblight.c ****     }
 4648               		.loc 1 349 9 is_stmt 1 view .LVU1116
 4649 006c 0E94 0000 		call rgblight_timer_enable
 4650               	.LVL295:
 4651 0070 00C0      		rjmp .L206
 4652               	.LVL296:
 4653               	.L199:
 4654               	/* epilogue start */
 355:quantum/rgblight.c **** 
 4655               		.loc 1 355 1 is_stmt 0 view .LVU1117
 4656 0072 0895      		ret
 4657               		.cfi_endproc
 4658               	.LFE109:
 4660               		.section	.text.rgblight_step_helper,"ax",@progbits
 4661               	.global	rgblight_step_helper
 4663               	rgblight_step_helper:
 4664               	.LVL297:
 4665               	.LFB102:
 299:quantum/rgblight.c ****     uint8_t mode = 0;
 4666               		.loc 1 299 49 is_stmt 1 view -0
 4667               		.cfi_startproc
 4668               	/* prologue: function */
 4669               	/* frame size = 0 */
 4670               	/* stack size = 0 */
 4671               	.L__stack_usage = 0
 299:quantum/rgblight.c ****     uint8_t mode = 0;
 4672               		.loc 1 299 49 is_stmt 0 view .LVU1119
 4673 0000 682F      		mov r22,r24
 300:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 4674               		.loc 1 300 5 is_stmt 1 view .LVU1120
 4675               	.LVL298:
 301:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4676               		.loc 1 301 5 view .LVU1121
 301:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4677               		.loc 1 301 35 is_stmt 0 view .LVU1122
 4678 0002 9091 0000 		lds r25,rgblight_config
 4679 0006 9695      		lsr r25
 301:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4680               		.loc 1 301 18 view .LVU1123
 4681 0008 81E0      		ldi r24,lo8(1)
 4682               	.LVL299:
 301:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4683               		.loc 1 301 18 view .LVU1124
 4684 000a 890F      		add r24,r25
 4685               	.LVL300:
 302:quantum/rgblight.c ****         mode = 1;
 4686               		.loc 1 302 5 is_stmt 1 view .LVU1125
 302:quantum/rgblight.c ****         mode = 1;
 4687               		.loc 1 302 8 is_stmt 0 view .LVU1126
 4688 000c 8B32      		cpi r24,lo8(43)
 4689 000e 00F0      		brlo .L212
 303:quantum/rgblight.c ****     }
 4690               		.loc 1 303 14 view .LVU1127
 4691 0010 81E0      		ldi r24,lo8(1)
 4692               	.LVL301:
 4693               	.L212:
 305:quantum/rgblight.c **** }
 4694               		.loc 1 305 5 is_stmt 1 view .LVU1128
 4695 0012 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4696               	.LVL302:
 305:quantum/rgblight.c **** }
 4697               		.loc 1 305 5 is_stmt 0 view .LVU1129
 4698               		.cfi_endproc
 4699               	.LFE102:
 4701               		.section	.text.rgblight_step_noeeprom,"ax",@progbits
 4702               	.global	rgblight_step_noeeprom
 4704               	rgblight_step_noeeprom:
 4705               	.LFB103:
 307:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 4706               		.loc 1 307 35 is_stmt 1 view -0
 4707               		.cfi_startproc
 4708               	/* prologue: function */
 4709               	/* frame size = 0 */
 4710               	/* stack size = 0 */
 4711               	.L__stack_usage = 0
 307:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 4712               		.loc 1 307 37 view .LVU1131
 4713 0000 80E0      		ldi r24,0
 4714 0002 0C94 0000 		jmp rgblight_step_helper
 4715               	.LVL303:
 4716               		.cfi_endproc
 4717               	.LFE103:
 4719               		.section	.text.rgblight_step,"ax",@progbits
 4720               	.global	rgblight_step
 4722               	rgblight_step:
 4723               	.LFB104:
 308:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 4724               		.loc 1 308 26 view -0
 4725               		.cfi_startproc
 4726               	/* prologue: function */
 4727               	/* frame size = 0 */
 4728               	/* stack size = 0 */
 4729               	.L__stack_usage = 0
 308:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 4730               		.loc 1 308 28 view .LVU1133
 4731 0000 81E0      		ldi r24,lo8(1)
 4732 0002 0C94 0000 		jmp rgblight_step_helper
 4733               	.LVL304:
 4734               		.cfi_endproc
 4735               	.LFE104:
 4737               		.section	.text.rgblight_step_reverse_helper,"ax",@progbits
 4738               	.global	rgblight_step_reverse_helper
 4740               	rgblight_step_reverse_helper:
 4741               	.LVL305:
 4742               	.LFB105:
 309:quantum/rgblight.c ****     uint8_t mode = 0;
 4743               		.loc 1 309 57 view -0
 4744               		.cfi_startproc
 4745               	/* prologue: function */
 4746               	/* frame size = 0 */
 4747               	/* stack size = 0 */
 4748               	.L__stack_usage = 0
 309:quantum/rgblight.c ****     uint8_t mode = 0;
 4749               		.loc 1 309 57 is_stmt 0 view .LVU1135
 4750 0000 682F      		mov r22,r24
 310:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 4751               		.loc 1 310 5 is_stmt 1 view .LVU1136
 4752               	.LVL306:
 311:quantum/rgblight.c ****     if (mode < 1) {
 4753               		.loc 1 311 5 view .LVU1137
 311:quantum/rgblight.c ****     if (mode < 1) {
 4754               		.loc 1 311 35 is_stmt 0 view .LVU1138
 4755 0002 9091 0000 		lds r25,rgblight_config
 4756 0006 9695      		lsr r25
 311:quantum/rgblight.c ****     if (mode < 1) {
 4757               		.loc 1 311 18 view .LVU1139
 4758 0008 8FEF      		ldi r24,lo8(-1)
 4759               	.LVL307:
 311:quantum/rgblight.c ****     if (mode < 1) {
 4760               		.loc 1 311 18 view .LVU1140
 4761 000a 890F      		add r24,r25
 4762               	.LVL308:
 312:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 4763               		.loc 1 312 5 is_stmt 1 view .LVU1141
 312:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 4764               		.loc 1 312 8 is_stmt 0 view .LVU1142
 4765 000c 01F4      		brne .L216
 313:quantum/rgblight.c ****     }
 4766               		.loc 1 313 14 view .LVU1143
 4767 000e 8AE2      		ldi r24,lo8(42)
 4768               	.LVL309:
 4769               	.L216:
 315:quantum/rgblight.c **** }
 4770               		.loc 1 315 5 is_stmt 1 view .LVU1144
 4771 0010 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4772               	.LVL310:
 315:quantum/rgblight.c **** }
 4773               		.loc 1 315 5 is_stmt 0 view .LVU1145
 4774               		.cfi_endproc
 4775               	.LFE105:
 4777               		.section	.text.rgblight_step_reverse_noeeprom,"ax",@progbits
 4778               	.global	rgblight_step_reverse_noeeprom
 4780               	rgblight_step_reverse_noeeprom:
 4781               	.LFB106:
 317:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 4782               		.loc 1 317 43 is_stmt 1 view -0
 4783               		.cfi_startproc
 4784               	/* prologue: function */
 4785               	/* frame size = 0 */
 4786               	/* stack size = 0 */
 4787               	.L__stack_usage = 0
 317:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 4788               		.loc 1 317 45 view .LVU1147
 4789 0000 80E0      		ldi r24,0
 4790 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 4791               	.LVL311:
 4792               		.cfi_endproc
 4793               	.LFE106:
 4795               		.section	.text.rgblight_step_reverse,"ax",@progbits
 4796               	.global	rgblight_step_reverse
 4798               	rgblight_step_reverse:
 4799               	.LFB107:
 318:quantum/rgblight.c **** 
 4800               		.loc 1 318 34 view -0
 4801               		.cfi_startproc
 4802               	/* prologue: function */
 4803               	/* frame size = 0 */
 4804               	/* stack size = 0 */
 4805               	.L__stack_usage = 0
 318:quantum/rgblight.c **** 
 4806               		.loc 1 318 36 view .LVU1149
 4807 0000 81E0      		ldi r24,lo8(1)
 4808 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 4809               	.LVL312:
 4810               		.cfi_endproc
 4811               	.LFE107:
 4813               		.section	.text.rgblight_mode,"ax",@progbits
 4814               	.global	rgblight_mode
 4816               	rgblight_mode:
 4817               	.LVL313:
 4818               	.LFB110:
 357:quantum/rgblight.c **** 
 4819               		.loc 1 357 34 view -0
 4820               		.cfi_startproc
 4821               	/* prologue: function */
 4822               	/* frame size = 0 */
 4823               	/* stack size = 0 */
 4824               	.L__stack_usage = 0
 357:quantum/rgblight.c **** 
 4825               		.loc 1 357 36 view .LVU1151
 4826 0000 61E0      		ldi r22,lo8(1)
 4827 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4828               	.LVL314:
 357:quantum/rgblight.c **** 
 4829               		.loc 1 357 36 is_stmt 0 view .LVU1152
 4830               		.cfi_endproc
 4831               	.LFE110:
 4833               		.section	.text.rgblight_increase,"ax",@progbits
 4834               	.global	rgblight_increase
 4836               	rgblight_increase:
 4837               	.LFB100:
 284:quantum/rgblight.c ****     uint8_t mode = 0;
 4838               		.loc 1 284 30 is_stmt 1 view -0
 4839               		.cfi_startproc
 4840               	/* prologue: function */
 4841               	/* frame size = 0 */
 4842               	/* stack size = 0 */
 4843               	.L__stack_usage = 0
 285:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 4844               		.loc 1 285 5 view .LVU1154
 4845               	.LVL315:
 286:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 4846               		.loc 1 286 5 view .LVU1155
 286:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 4847               		.loc 1 286 24 is_stmt 0 view .LVU1156
 4848 0000 8091 0000 		lds r24,rgblight_config
 4849 0004 8695      		lsr r24
 286:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 4850               		.loc 1 286 8 view .LVU1157
 4851 0006 8A32      		cpi r24,lo8(42)
 4852 0008 00F4      		brsh .L222
 287:quantum/rgblight.c ****     }
 4853               		.loc 1 287 9 is_stmt 1 view .LVU1158
 287:quantum/rgblight.c ****     }
 4854               		.loc 1 287 14 is_stmt 0 view .LVU1159
 4855 000a 8F5F      		subi r24,lo8(-(1))
 4856               	.LVL316:
 4857               	.L221:
 289:quantum/rgblight.c **** }
 4858               		.loc 1 289 5 is_stmt 1 view .LVU1160
 4859 000c 0C94 0000 		jmp rgblight_mode
 4860               	.LVL317:
 4861               	.L222:
 285:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 4862               		.loc 1 285 13 is_stmt 0 view .LVU1161
 4863 0010 80E0      		ldi r24,0
 4864 0012 00C0      		rjmp .L221
 4865               		.cfi_endproc
 4866               	.LFE100:
 4868               		.section	.text.rgblight_decrease,"ax",@progbits
 4869               	.global	rgblight_decrease
 4871               	rgblight_decrease:
 4872               	.LFB101:
 291:quantum/rgblight.c ****     uint8_t mode = 0;
 4873               		.loc 1 291 30 is_stmt 1 view -0
 4874               		.cfi_startproc
 4875               	/* prologue: function */
 4876               	/* frame size = 0 */
 4877               	/* stack size = 0 */
 4878               	.L__stack_usage = 0
 292:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 4879               		.loc 1 292 5 view .LVU1163
 4880               	.LVL318:
 294:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 4881               		.loc 1 294 5 view .LVU1164
 294:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 4882               		.loc 1 294 24 is_stmt 0 view .LVU1165
 4883 0000 8091 0000 		lds r24,rgblight_config
 4884 0004 8695      		lsr r24
 294:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 4885               		.loc 1 294 8 view .LVU1166
 4886 0006 8230      		cpi r24,lo8(2)
 4887 0008 00F0      		brlo .L225
 295:quantum/rgblight.c ****     }
 4888               		.loc 1 295 9 is_stmt 1 view .LVU1167
 295:quantum/rgblight.c ****     }
 4889               		.loc 1 295 14 is_stmt 0 view .LVU1168
 4890 000a 8150      		subi r24,lo8(-(-1))
 4891               	.LVL319:
 4892               	.L224:
 297:quantum/rgblight.c **** }
 4893               		.loc 1 297 5 is_stmt 1 view .LVU1169
 4894 000c 0C94 0000 		jmp rgblight_mode
 4895               	.LVL320:
 4896               	.L225:
 292:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 4897               		.loc 1 292 13 is_stmt 0 view .LVU1170
 4898 0010 80E0      		ldi r24,0
 4899 0012 00C0      		rjmp .L224
 4900               		.cfi_endproc
 4901               	.LFE101:
 4903               		.section	.text.rgblight_enable,"ax",@progbits
 4904               	.global	rgblight_enable
 4906               	rgblight_enable:
 4907               	.LFB114:
 379:quantum/rgblight.c ****     rgblight_config.enable = 1;
 4908               		.loc 1 379 28 is_stmt 1 view -0
 4909               		.cfi_startproc
 4910               	/* prologue: function */
 4911               	/* frame size = 0 */
 4912               	/* stack size = 0 */
 4913               	.L__stack_usage = 0
 380:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 4914               		.loc 1 380 5 view .LVU1172
 380:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 4915               		.loc 1 380 28 is_stmt 0 view .LVU1173
 4916 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4917 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4918 0004 8081      		ld r24,Z
 4919 0006 8160      		ori r24,lo8(1<<0)
 4920 0008 8083      		st Z,r24
 383:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 4921               		.loc 1 383 95 is_stmt 1 view .LVU1174
 384:quantum/rgblight.c **** }
 4922               		.loc 1 384 5 view .LVU1175
 4923 000a 8695      		lsr r24
 4924 000c 0C94 0000 		jmp rgblight_mode
 4925               	.LVL321:
 4926               		.cfi_endproc
 4927               	.LFE114:
 4929               		.section	.text.rgblight_toggle,"ax",@progbits
 4930               	.global	rgblight_toggle
 4932               	rgblight_toggle:
 4933               	.LFB112:
 361:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 4934               		.loc 1 361 28 view -0
 4935               		.cfi_startproc
 4936               	/* prologue: function */
 4937               	/* frame size = 0 */
 4938               	/* stack size = 0 */
 4939               	.L__stack_usage = 0
 362:quantum/rgblight.c ****     if (rgblight_config.enable) {
 4940               		.loc 1 362 96 view .LVU1177
 363:quantum/rgblight.c ****         rgblight_disable();
 4941               		.loc 1 363 5 view .LVU1178
 363:quantum/rgblight.c ****         rgblight_disable();
 4942               		.loc 1 363 9 is_stmt 0 view .LVU1179
 4943 0000 8091 0000 		lds r24,rgblight_config
 363:quantum/rgblight.c ****         rgblight_disable();
 4944               		.loc 1 363 8 view .LVU1180
 4945 0004 80FD      		sbrc r24,0
 364:quantum/rgblight.c ****     } else {
 4946               		.loc 1 364 9 is_stmt 1 view .LVU1181
 4947 0006 0C94 0000 		jmp rgblight_disable
 4948               	.LVL322:
 4949               	.L228:
 366:quantum/rgblight.c ****     }
 4950               		.loc 1 366 9 view .LVU1182
 4951 000a 0C94 0000 		jmp rgblight_enable
 4952               	.LVL323:
 4953               		.cfi_endproc
 4954               	.LFE112:
 4956               		.section	.text.rgblight_mode_noeeprom,"ax",@progbits
 4957               	.global	rgblight_mode_noeeprom
 4959               	rgblight_mode_noeeprom:
 4960               	.LVL324:
 4961               	.LFB111:
 359:quantum/rgblight.c **** 
 4962               		.loc 1 359 43 view -0
 4963               		.cfi_startproc
 4964               	/* prologue: function */
 4965               	/* frame size = 0 */
 4966               	/* stack size = 0 */
 4967               	.L__stack_usage = 0
 359:quantum/rgblight.c **** 
 4968               		.loc 1 359 45 view .LVU1184
 4969 0000 60E0      		ldi r22,0
 4970 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4971               	.LVL325:
 359:quantum/rgblight.c **** 
 4972               		.loc 1 359 45 is_stmt 0 view .LVU1185
 4973               		.cfi_endproc
 4974               	.LFE111:
 4976               		.section	.text.rgblight_init,"ax",@progbits
 4977               	.global	rgblight_init
 4979               	rgblight_init:
 4980               	.LFB96:
 225:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 4981               		.loc 1 225 26 is_stmt 1 view -0
 4982               		.cfi_startproc
 4983               	/* prologue: function */
 4984               	/* frame size = 0 */
 4985               	/* stack size = 0 */
 4986               	.L__stack_usage = 0
 229:quantum/rgblight.c ****         return;
 4987               		.loc 1 229 5 view .LVU1187
 229:quantum/rgblight.c ****         return;
 4988               		.loc 1 229 8 is_stmt 0 view .LVU1188
 4989 0000 8091 0000 		lds r24,is_rgblight_initialized
 4990 0004 8111      		cpse r24,__zero_reg__
 4991 0006 00C0      		rjmp .L230
 233:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 4992               		.loc 1 233 39 is_stmt 1 view .LVU1189
 234:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 4993               		.loc 1 234 38 view .LVU1190
 235:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 4994               		.loc 1 235 5 view .LVU1191
 235:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 4995               		.loc 1 235 10 is_stmt 0 view .LVU1192
 4996 0008 0E94 0000 		call eeconfig_is_enabled
 4997               	.LVL326:
 235:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 4998               		.loc 1 235 8 view .LVU1193
 4999 000c 8111      		cpse r24,__zero_reg__
 5000 000e 00C0      		rjmp .L232
 236:quantum/rgblight.c ****         eeconfig_init();
 5001               		.loc 1 236 60 is_stmt 1 view .LVU1194
 237:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 5002               		.loc 1 237 9 view .LVU1195
 5003 0010 0E94 0000 		call eeconfig_init
 5004               	.LVL327:
 238:quantum/rgblight.c ****     }
 5005               		.loc 1 238 9 view .LVU1196
 5006 0014 0E94 0000 		call eeconfig_update_rgblight_default
 5007               	.LVL328:
 5008               	.L232:
 240:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5009               		.loc 1 240 5 view .LVU1197
 240:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5010               		.loc 1 240 27 is_stmt 0 view .LVU1198
 5011 0018 0E94 0000 		call eeconfig_read_rgblight
 5012               	.LVL329:
 240:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5013               		.loc 1 240 25 view .LVU1199
 5014 001c 6093 0000 		sts rgblight_config,r22
 5015 0020 7093 0000 		sts rgblight_config+1,r23
 5016 0024 8093 0000 		sts rgblight_config+2,r24
 5017 0028 9093 0000 		sts rgblight_config+3,r25
 241:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 5018               		.loc 1 241 39 is_stmt 1 view .LVU1200
 242:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 5019               		.loc 1 242 5 view .LVU1201
 242:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 5020               		.loc 1 242 9 is_stmt 0 view .LVU1202
 5021 002c 6E7F      		andi r22,lo8(-2)
 242:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 5022               		.loc 1 242 8 view .LVU1203
 5023 002e 01F4      		brne .L233
 243:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 5024               		.loc 1 243 93 is_stmt 1 view .LVU1204
 244:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 5025               		.loc 1 244 9 view .LVU1205
 5026 0030 0E94 0000 		call eeconfig_update_rgblight_default
 5027               	.LVL330:
 245:quantum/rgblight.c ****     }
 5028               		.loc 1 245 9 view .LVU1206
 245:quantum/rgblight.c ****     }
 5029               		.loc 1 245 31 is_stmt 0 view .LVU1207
 5030 0034 0E94 0000 		call eeconfig_read_rgblight
 5031               	.LVL331:
 245:quantum/rgblight.c ****     }
 5032               		.loc 1 245 29 view .LVU1208
 5033 0038 6093 0000 		sts rgblight_config,r22
 5034 003c 7093 0000 		sts rgblight_config+1,r23
 5035 0040 8093 0000 		sts rgblight_config+2,r24
 5036 0044 9093 0000 		sts rgblight_config+3,r25
 5037               	.L233:
 247:quantum/rgblight.c **** 
 5038               		.loc 1 247 5 is_stmt 1 view .LVU1209
 5039 0048 0E94 0000 		call rgblight_check_config
 5040               	.LVL332:
 249:quantum/rgblight.c **** 
 5041               		.loc 1 249 5 view .LVU1210
 251:quantum/rgblight.c **** 
 5042               		.loc 1 251 5 view .LVU1211
 5043               	.LBB249:
 5044               	.LBI249:
 886:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 5045               		.loc 1 886 6 view .LVU1212
 5046               	.LBB250:
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5047               		.loc 1 887 5 view .LVU1213
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5048               		.loc 1 887 35 is_stmt 0 view .LVU1214
 5049 004c 1092 0000 		sts rgblight_status+1,__zero_reg__
 888:quantum/rgblight.c **** }
 5050               		.loc 1 888 43 is_stmt 1 view .LVU1215
 5051               	.LBE250:
 5052               	.LBE249:
 253:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5053               		.loc 1 253 5 view .LVU1216
 253:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5054               		.loc 1 253 9 is_stmt 0 view .LVU1217
 5055 0050 8091 0000 		lds r24,rgblight_config
 253:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5056               		.loc 1 253 8 view .LVU1218
 5057 0054 80FF      		sbrs r24,0
 5058 0056 00C0      		rjmp .L234
 254:quantum/rgblight.c ****     }
 5059               		.loc 1 254 9 is_stmt 1 view .LVU1219
 5060 0058 8695      		lsr r24
 5061 005a 0E94 0000 		call rgblight_mode_noeeprom
 5062               	.LVL333:
 5063               	.L234:
 257:quantum/rgblight.c **** }
 5064               		.loc 1 257 5 view .LVU1220
 257:quantum/rgblight.c **** }
 5065               		.loc 1 257 29 is_stmt 0 view .LVU1221
 5066 005e 81E0      		ldi r24,lo8(1)
 5067 0060 8093 0000 		sts is_rgblight_initialized,r24
 5068               	.L230:
 5069               	/* epilogue start */
 258:quantum/rgblight.c **** 
 5070               		.loc 1 258 1 view .LVU1222
 5071 0064 0895      		ret
 5072               		.cfi_endproc
 5073               	.LFE96:
 5075               		.section	.text.rgblight_reload_from_eeprom,"ax",@progbits
 5076               	.global	rgblight_reload_from_eeprom
 5078               	rgblight_reload_from_eeprom:
 5079               	.LFB97:
 260:quantum/rgblight.c ****     /* Reset back to what we have in eeprom */
 5080               		.loc 1 260 40 is_stmt 1 view -0
 5081               		.cfi_startproc
 5082               	/* prologue: function */
 5083               	/* frame size = 0 */
 5084               	/* stack size = 0 */
 5085               	.L__stack_usage = 0
 262:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5086               		.loc 1 262 5 view .LVU1224
 262:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5087               		.loc 1 262 27 is_stmt 0 view .LVU1225
 5088 0000 0E94 0000 		call eeconfig_read_rgblight
 5089               	.LVL334:
 262:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5090               		.loc 1 262 25 view .LVU1226
 5091 0004 6093 0000 		sts rgblight_config,r22
 5092 0008 7093 0000 		sts rgblight_config+1,r23
 5093 000c 8093 0000 		sts rgblight_config+2,r24
 5094 0010 9093 0000 		sts rgblight_config+3,r25
 263:quantum/rgblight.c ****     rgblight_check_config();
 5095               		.loc 1 263 39 is_stmt 1 view .LVU1227
 264:quantum/rgblight.c ****     eeconfig_debug_rgblight();  // display current eeprom values
 5096               		.loc 1 264 5 view .LVU1228
 5097 0014 0E94 0000 		call rgblight_check_config
 5098               	.LVL335:
 265:quantum/rgblight.c ****     if (rgblight_config.enable) {
 5099               		.loc 1 265 5 view .LVU1229
 266:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5100               		.loc 1 266 5 view .LVU1230
 266:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5101               		.loc 1 266 9 is_stmt 0 view .LVU1231
 5102 0018 8091 0000 		lds r24,rgblight_config
 266:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5103               		.loc 1 266 8 view .LVU1232
 5104 001c 80FF      		sbrs r24,0
 5105 001e 00C0      		rjmp .L238
 267:quantum/rgblight.c ****     }
 5106               		.loc 1 267 9 is_stmt 1 view .LVU1233
 5107 0020 8695      		lsr r24
 5108 0022 0C94 0000 		jmp rgblight_mode_noeeprom
 5109               	.LVL336:
 5110               	.L238:
 5111               	/* epilogue start */
 269:quantum/rgblight.c **** 
 5112               		.loc 1 269 1 is_stmt 0 view .LVU1234
 5113 0026 0895      		ret
 5114               		.cfi_endproc
 5115               	.LFE97:
 5117               		.section	.text.rgblight_enable_noeeprom,"ax",@progbits
 5118               	.global	rgblight_enable_noeeprom
 5120               	rgblight_enable_noeeprom:
 5121               	.LFB115:
 387:quantum/rgblight.c ****     rgblight_config.enable = 1;
 5122               		.loc 1 387 37 is_stmt 1 view -0
 5123               		.cfi_startproc
 5124               	/* prologue: function */
 5125               	/* frame size = 0 */
 5126               	/* stack size = 0 */
 5127               	.L__stack_usage = 0
 388:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 5128               		.loc 1 388 5 view .LVU1236
 388:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 5129               		.loc 1 388 28 is_stmt 0 view .LVU1237
 5130 0000 E0E0      		ldi r30,lo8(rgblight_config)
 5131 0002 F0E0      		ldi r31,hi8(rgblight_config)
 5132 0004 8081      		ld r24,Z
 5133 0006 8160      		ori r24,lo8(1<<0)
 5134 0008 8083      		st Z,r24
 389:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 5135               		.loc 1 389 97 is_stmt 1 view .LVU1238
 390:quantum/rgblight.c **** }
 5136               		.loc 1 390 5 view .LVU1239
 5137 000a 8695      		lsr r24
 5138 000c 0C94 0000 		jmp rgblight_mode_noeeprom
 5139               	.LVL337:
 5140               		.cfi_endproc
 5141               	.LFE115:
 5143               		.section	.text.rgblight_toggle_noeeprom,"ax",@progbits
 5144               	.global	rgblight_toggle_noeeprom
 5146               	rgblight_toggle_noeeprom:
 5147               	.LFB113:
 370:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 5148               		.loc 1 370 37 view -0
 5149               		.cfi_startproc
 5150               	/* prologue: function */
 5151               	/* frame size = 0 */
 5152               	/* stack size = 0 */
 5153               	.L__stack_usage = 0
 371:quantum/rgblight.c ****     if (rgblight_config.enable) {
 5154               		.loc 1 371 98 view .LVU1241
 372:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 5155               		.loc 1 372 5 view .LVU1242
 372:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 5156               		.loc 1 372 9 is_stmt 0 view .LVU1243
 5157 0000 8091 0000 		lds r24,rgblight_config
 372:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 5158               		.loc 1 372 8 view .LVU1244
 5159 0004 80FD      		sbrc r24,0
 373:quantum/rgblight.c ****     } else {
 5160               		.loc 1 373 9 is_stmt 1 view .LVU1245
 5161 0006 0C94 0000 		jmp rgblight_disable_noeeprom
 5162               	.LVL338:
 5163               	.L242:
 375:quantum/rgblight.c ****     }
 5164               		.loc 1 375 9 view .LVU1246
 5165 000a 0C94 0000 		jmp rgblight_enable_noeeprom
 5166               	.LVL339:
 5167               		.cfi_endproc
 5168               	.LFE113:
 5170               		.section	.text.rgblight_update_dword,"ax",@progbits
 5171               	.global	rgblight_update_dword
 5173               	rgblight_update_dword:
 5174               	.LVL340:
 5175               	.LFB99:
 273:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5176               		.loc 1 273 44 view -0
 5177               		.cfi_startproc
 5178               	/* prologue: function */
 5179               	/* frame size = 0 */
 5180               	/* stack size = 0 */
 5181               	.L__stack_usage = 0
 274:quantum/rgblight.c ****     rgblight_config.raw = dword;
 5182               		.loc 1 274 39 view .LVU1248
 275:quantum/rgblight.c ****     if (rgblight_config.enable)
 5183               		.loc 1 275 5 view .LVU1249
 275:quantum/rgblight.c ****     if (rgblight_config.enable)
 5184               		.loc 1 275 25 is_stmt 0 view .LVU1250
 5185 0000 6093 0000 		sts rgblight_config,r22
 5186 0004 7093 0000 		sts rgblight_config+1,r23
 5187 0008 8093 0000 		sts rgblight_config+2,r24
 5188 000c 9093 0000 		sts rgblight_config+3,r25
 276:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5189               		.loc 1 276 5 is_stmt 1 view .LVU1251
 276:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5190               		.loc 1 276 8 is_stmt 0 view .LVU1252
 5191 0010 60FF      		sbrs r22,0
 5192 0012 00C0      		rjmp .L244
 277:quantum/rgblight.c ****     else {
 5193               		.loc 1 277 9 is_stmt 1 view .LVU1253
 5194 0014 862F      		mov r24,r22
 5195 0016 8695      		lsr r24
 5196 0018 0C94 0000 		jmp rgblight_mode_noeeprom
 5197               	.LVL341:
 5198               	.L244:
 279:quantum/rgblight.c ****         rgblight_set();
 5199               		.loc 1 279 9 view .LVU1254
 5200               	.LBB253:
 5201               	.LBI253:
 886:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 5202               		.loc 1 886 6 view .LVU1255
 5203               	.LBB254:
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5204               		.loc 1 887 5 view .LVU1256
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5205               		.loc 1 887 35 is_stmt 0 view .LVU1257
 5206 001c 1092 0000 		sts rgblight_status+1,__zero_reg__
 888:quantum/rgblight.c **** }
 5207               		.loc 1 888 43 is_stmt 1 view .LVU1258
 5208               	.LBE254:
 5209               	.LBE253:
 280:quantum/rgblight.c ****     }
 5210               		.loc 1 280 9 view .LVU1259
 5211 0020 0C94 0000 		jmp rgblight_set
 5212               	.LVL342:
 280:quantum/rgblight.c ****     }
 5213               		.loc 1 280 9 is_stmt 0 view .LVU1260
 5214               		.cfi_endproc
 5215               	.LFE99:
 5217               		.section	.text.rgblight_wakeup,"ax",@progbits
 5218               	.global	rgblight_wakeup
 5220               	rgblight_wakeup:
 5221               	.LFB166:
 766:quantum/rgblight.c ****     is_suspended = false;
 5222               		.loc 1 766 28 is_stmt 1 view -0
 5223               		.cfi_startproc
 5224               	/* prologue: function */
 5225               	/* frame size = 0 */
 5226               	/* stack size = 0 */
 5227               	.L__stack_usage = 0
 767:quantum/rgblight.c **** 
 5228               		.loc 1 767 5 view .LVU1262
 767:quantum/rgblight.c **** 
 5229               		.loc 1 767 18 is_stmt 0 view .LVU1263
 5230 0000 1092 0000 		sts is_suspended,__zero_reg__
 769:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 5231               		.loc 1 769 5 is_stmt 1 view .LVU1264
 769:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 5232               		.loc 1 769 8 is_stmt 0 view .LVU1265
 5233 0004 8091 0000 		lds r24,pre_suspend_enabled
 5234 0008 8111      		cpse r24,__zero_reg__
 770:quantum/rgblight.c ****     }
 5235               		.loc 1 770 9 is_stmt 1 view .LVU1266
 5236 000a 0E94 0000 		call rgblight_enable_noeeprom
 5237               	.LVL343:
 5238               	.L246:
 779:quantum/rgblight.c **** }
 5239               		.loc 1 779 5 view .LVU1267
 5240 000e 0C94 0000 		jmp rgblight_timer_enable
 5241               	.LVL344:
 5242               		.cfi_endproc
 5243               	.LFE166:
 5245               		.section	.text.rgblight_timer_disable,"ax",@progbits
 5246               	.global	rgblight_timer_disable
 5248               	rgblight_timer_disable:
 5249               	.LFB190:
 5250               		.cfi_startproc
 5251               	/* prologue: function */
 5252               	/* frame size = 0 */
 5253               	/* stack size = 0 */
 5254               	.L__stack_usage = 0
 5255 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 5256               	/* epilogue start */
 5257 0004 0895      		ret
 5258               		.cfi_endproc
 5259               	.LFE190:
 5261               		.section	.text.rgblight_timer_toggle,"ax",@progbits
 5262               	.global	rgblight_timer_toggle
 5264               	rgblight_timer_toggle:
 5265               	.LFB172:
 903:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 5266               		.loc 1 903 34 view -0
 5267               		.cfi_startproc
 5268               	/* prologue: function */
 5269               	/* frame size = 0 */
 5270               	/* stack size = 0 */
 5271               	.L__stack_usage = 0
 904:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 5272               		.loc 1 904 40 view .LVU1269
 905:quantum/rgblight.c ****         rgblight_timer_disable();
 5273               		.loc 1 905 5 view .LVU1270
 905:quantum/rgblight.c ****         rgblight_timer_disable();
 5274               		.loc 1 905 8 is_stmt 0 view .LVU1271
 5275 0000 8091 0000 		lds r24,rgblight_status+1
 5276 0004 8823      		tst r24
 5277 0006 01F0      		breq .L252
 906:quantum/rgblight.c ****     } else {
 5278               		.loc 1 906 9 is_stmt 1 view .LVU1272
 5279               	.LBB257:
 5280               	.LBI257:
 886:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 5281               		.loc 1 886 6 view .LVU1273
 5282               	.LBB258:
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5283               		.loc 1 887 5 view .LVU1274
 887:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5284               		.loc 1 887 35 is_stmt 0 view .LVU1275
 5285 0008 1092 0000 		sts rgblight_status+1,__zero_reg__
 888:quantum/rgblight.c **** }
 5286               		.loc 1 888 43 is_stmt 1 view .LVU1276
 5287               	/* epilogue start */
 5288               	.LBE258:
 5289               	.LBE257:
 910:quantum/rgblight.c **** 
 5290               		.loc 1 910 1 is_stmt 0 view .LVU1277
 5291 000c 0895      		ret
 5292               	.L252:
 908:quantum/rgblight.c ****     }
 5293               		.loc 1 908 9 is_stmt 1 view .LVU1278
 5294 000e 0C94 0000 		jmp rgblight_timer_enable
 5295               	.LVL345:
 5296               		.cfi_endproc
 5297               	.LFE172:
 5299               		.section	.text.rgblight_show_solid_color,"ax",@progbits
 5300               	.global	rgblight_show_solid_color
 5302               	rgblight_show_solid_color:
 5303               	.LVL346:
 5304               	.LFB173:
 912:quantum/rgblight.c ****     rgblight_enable();
 5305               		.loc 1 912 65 view -0
 5306               		.cfi_startproc
 912:quantum/rgblight.c ****     rgblight_enable();
 5307               		.loc 1 912 65 is_stmt 0 view .LVU1280
 5308 0000 1F93      		push r17
 5309               	.LCFI98:
 5310               		.cfi_def_cfa_offset 3
 5311               		.cfi_offset 17, -2
 5312 0002 CF93      		push r28
 5313               	.LCFI99:
 5314               		.cfi_def_cfa_offset 4
 5315               		.cfi_offset 28, -3
 5316 0004 DF93      		push r29
 5317               	.LCFI100:
 5318               		.cfi_def_cfa_offset 5
 5319               		.cfi_offset 29, -4
 5320               	/* prologue: function */
 5321               	/* frame size = 0 */
 5322               	/* stack size = 3 */
 5323               	.L__stack_usage = 3
 5324 0006 C82F      		mov r28,r24
 5325 0008 D62F      		mov r29,r22
 5326 000a 142F      		mov r17,r20
 913:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 5327               		.loc 1 913 5 is_stmt 1 view .LVU1281
 5328 000c 0E94 0000 		call rgblight_enable
 5329               	.LVL347:
 914:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 5330               		.loc 1 914 5 view .LVU1282
 5331 0010 81E0      		ldi r24,lo8(1)
 5332 0012 0E94 0000 		call rgblight_mode
 5333               	.LVL348:
 915:quantum/rgblight.c **** }
 5334               		.loc 1 915 5 view .LVU1283
 5335 0016 412F      		mov r20,r17
 5336 0018 6D2F      		mov r22,r29
 5337 001a 8C2F      		mov r24,r28
 5338               	/* epilogue start */
 916:quantum/rgblight.c **** 
 5339               		.loc 1 916 1 is_stmt 0 view .LVU1284
 5340 001c DF91      		pop r29
 5341               	.LVL349:
 916:quantum/rgblight.c **** 
 5342               		.loc 1 916 1 view .LVU1285
 5343 001e CF91      		pop r28
 5344               	.LVL350:
 916:quantum/rgblight.c **** 
 5345               		.loc 1 916 1 view .LVU1286
 5346 0020 1F91      		pop r17
 5347               	.LVL351:
 915:quantum/rgblight.c **** }
 5348               		.loc 1 915 5 view .LVU1287
 5349 0022 0C94 0000 		jmp rgblight_setrgb
 5350               	.LVL352:
 915:quantum/rgblight.c **** }
 5351               		.loc 1 915 5 view .LVU1288
 5352               		.cfi_endproc
 5353               	.LFE173:
 5355               		.section	.text.rgblight_task,"ax",@progbits
 5356               	.global	rgblight_task
 5358               	rgblight_task:
 5359               	.LFB175:
 930:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 5360               		.loc 1 930 26 is_stmt 1 view -0
 5361               		.cfi_startproc
 5362 0000 0F93      		push r16
 5363               	.LCFI101:
 5364               		.cfi_def_cfa_offset 3
 5365               		.cfi_offset 16, -2
 5366 0002 1F93      		push r17
 5367               	.LCFI102:
 5368               		.cfi_def_cfa_offset 4
 5369               		.cfi_offset 17, -3
 5370 0004 CF93      		push r28
 5371               	.LCFI103:
 5372               		.cfi_def_cfa_offset 5
 5373               		.cfi_offset 28, -4
 5374 0006 DF93      		push r29
 5375               	.LCFI104:
 5376               		.cfi_def_cfa_offset 6
 5377               		.cfi_offset 29, -5
 5378               	/* prologue: function */
 5379               	/* frame size = 0 */
 5380               	/* stack size = 4 */
 5381               	.L__stack_usage = 4
 931:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 5382               		.loc 1 931 5 view .LVU1290
 931:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 5383               		.loc 1 931 8 is_stmt 0 view .LVU1291
 5384 0008 8091 0000 		lds r24,rgblight_status+1
 5385 000c 8823      		tst r24
 5386 000e 01F4      		brne .+2
 5387 0010 00C0      		rjmp .L256
 5388               	.LBB279:
 932:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 5389               		.loc 1 932 9 is_stmt 1 view .LVU1292
 5390               	.LVL353:
 933:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 5391               		.loc 1 933 9 view .LVU1293
 934:quantum/rgblight.c ****         animation_status.delta      = delta;
 5392               		.loc 1 934 9 view .LVU1294
 934:quantum/rgblight.c ****         animation_status.delta      = delta;
 5393               		.loc 1 934 77 is_stmt 0 view .LVU1295
 5394 0012 8091 0000 		lds r24,rgblight_status
 934:quantum/rgblight.c ****         animation_status.delta      = delta;
 5395               		.loc 1 934 54 view .LVU1296
 5396 0016 E091 0000 		lds r30,rgblight_config
 5397 001a E695      		lsr r30
 934:quantum/rgblight.c ****         animation_status.delta      = delta;
 5398               		.loc 1 934 23 view .LVU1297
 5399 001c E81B      		sub r30,r24
 5400               	.LVL354:
 935:quantum/rgblight.c **** 
 5401               		.loc 1 935 9 is_stmt 1 view .LVU1298
 935:quantum/rgblight.c **** 
 5402               		.loc 1 935 37 is_stmt 0 view .LVU1299
 5403 001e E093 0000 		sts animation_status+2,r30
 938:quantum/rgblight.c ****         }
 5404               		.loc 1 938 9 is_stmt 1 view .LVU1300
 941:quantum/rgblight.c ****             // breathing mode
 5405               		.loc 1 941 14 view .LVU1301
 941:quantum/rgblight.c ****             // breathing mode
 5406               		.loc 1 941 17 is_stmt 0 view .LVU1302
 5407 0022 8230      		cpi r24,lo8(2)
 5408 0024 01F4      		brne .L259
 943:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 5409               		.loc 1 943 13 is_stmt 1 view .LVU1303
 5410               	.LVL355:
 5411               	.LBB280:
 5412               	.LBI280:
 621:quantum/rgblight.c ****     return
 5413               		.loc 1 621 16 view .LVU1304
 621:quantum/rgblight.c ****     return
 5414               		.loc 1 621 16 is_stmt 0 view .LVU1305
 5415               	.LBE280:
 5416               	.LBE279:
 622:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5417               		.loc 1 622 5 is_stmt 1 view .LVU1306
 5418               	.LBB311:
 5419               	.LBB283:
 5420               	.LBB281:
 626:quantum/rgblight.c **** }
 5421               		.loc 1 626 29 view .LVU1307
 626:quantum/rgblight.c **** }
 5422               		.loc 1 626 29 view .LVU1308
 626:quantum/rgblight.c **** }
 5423               		.loc 1 626 29 view .LVU1309
 5424               	.LBE281:
 5425               	.LBE283:
 943:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 5426               		.loc 1 943 29 is_stmt 0 view .LVU1310
 5427 0026 F0E0      		ldi r31,0
 5428 0028 E050      		subi r30,lo8(-(RGBLED_BREATHING_INTERVALS))
 5429 002a F040      		sbci r31,hi8(-(RGBLED_BREATHING_INTERVALS))
 5430               	.LVL356:
 5431               	.LBB284:
 5432               	.LBB282:
 626:quantum/rgblight.c **** }
 5433               		.loc 1 626 29 view .LVU1311
 5434               	/* #APP */
 5435               	 ;  626 "quantum/rgblight.c" 1
 5436 002c E491      		lpm r30, Z
 5437               		
 5438               	 ;  0 "" 2
 5439               	.LVL357:
 626:quantum/rgblight.c **** }
 5440               		.loc 1 626 29 is_stmt 1 view .LVU1312
 626:quantum/rgblight.c **** }
 5441               		.loc 1 626 29 is_stmt 0 view .LVU1313
 5442               	/* #NOAPP */
 5443               	.LBE282:
 5444               	.LBE284:
 943:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 5445               		.loc 1 943 27 view .LVU1314
 5446 002e CE2F      		mov r28,r30
 5447 0030 D0E0      		ldi r29,0
 5448               	.LVL358:
 944:quantum/rgblight.c ****         }
 5449               		.loc 1 944 13 is_stmt 1 view .LVU1315
 944:quantum/rgblight.c ****         }
 5450               		.loc 1 944 27 is_stmt 0 view .LVU1316
 5451 0032 00E0      		ldi r16,lo8(gs(rgblight_effect_breathing))
 5452 0034 10E0      		ldi r17,hi8(gs(rgblight_effect_breathing))
 5453               	.LVL359:
 5454               	.L260:
1001:quantum/rgblight.c ****             animation_status.restart    = false;
 5455               		.loc 1 1001 9 is_stmt 1 view .LVU1317
1001:quantum/rgblight.c ****             animation_status.restart    = false;
 5456               		.loc 1 1001 12 is_stmt 0 view .LVU1318
 5457 0036 8091 0000 		lds r24,animation_status+3
 5458 003a 8823      		tst r24
 5459 003c 01F0      		breq .L266
1002:quantum/rgblight.c ****             animation_status.last_timer = sync_timer_read();
 5460               		.loc 1 1002 13 is_stmt 1 view .LVU1319
1002:quantum/rgblight.c ****             animation_status.last_timer = sync_timer_read();
 5461               		.loc 1 1002 41 is_stmt 0 view .LVU1320
 5462 003e 1092 0000 		sts animation_status+3,__zero_reg__
1003:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 5463               		.loc 1 1003 13 is_stmt 1 view .LVU1321
1003:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 5464               		.loc 1 1003 43 is_stmt 0 view .LVU1322
 5465 0042 0E94 0000 		call timer_read
 5466               	.LVL360:
1003:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 5467               		.loc 1 1003 41 view .LVU1323
 5468 0046 9093 0000 		sts animation_status+1,r25
 5469 004a 8093 0000 		sts animation_status,r24
1004:quantum/rgblight.c ****         }
 5470               		.loc 1 1004 13 is_stmt 1 view .LVU1324
1004:quantum/rgblight.c ****         }
 5471               		.loc 1 1004 41 is_stmt 0 view .LVU1325
 5472 004e 1092 0000 		sts animation_status+4+1,__zero_reg__
 5473 0052 1092 0000 		sts animation_status+4,__zero_reg__
 5474               	.L266:
1006:quantum/rgblight.c ****         if (timer_expired(now, animation_status.last_timer)) {
 5475               		.loc 1 1006 9 is_stmt 1 view .LVU1326
1006:quantum/rgblight.c ****         if (timer_expired(now, animation_status.last_timer)) {
 5476               		.loc 1 1006 24 is_stmt 0 view .LVU1327
 5477 0056 0E94 0000 		call timer_read
 5478               	.LVL361:
1007:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5479               		.loc 1 1007 9 is_stmt 1 view .LVU1328
1007:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5480               		.loc 1 1007 13 is_stmt 0 view .LVU1329
 5481 005a E091 0000 		lds r30,animation_status
 5482 005e F091 0000 		lds r31,animation_status+1
 5483 0062 8E1B      		sub r24,r30
 5484 0064 9F0B      		sbc r25,r31
 5485               	.LVL362:
1007:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5486               		.loc 1 1007 12 view .LVU1330
 5487 0066 8F3F      		cpi r24,-1
 5488 0068 9F47      		sbci r25,127
 5489 006a 00F0      		brlo .+2
 5490 006c 00C0      		rjmp .L256
1022:quantum/rgblight.c ****             effect_func(&animation_status);
 5491               		.loc 1 1022 13 is_stmt 1 view .LVU1331
1022:quantum/rgblight.c ****             effect_func(&animation_status);
 5492               		.loc 1 1022 41 is_stmt 0 view .LVU1332
 5493 006e EC0F      		add r30,r28
 5494 0070 FD1F      		adc r31,r29
 5495 0072 F093 0000 		sts animation_status+1,r31
 5496 0076 E093 0000 		sts animation_status,r30
1023:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5497               		.loc 1 1023 13 is_stmt 1 view .LVU1333
 5498 007a 80E0      		ldi r24,lo8(animation_status)
 5499 007c 90E0      		ldi r25,hi8(animation_status)
 5500 007e F801      		movw r30,r16
 5501               	/* epilogue start */
 5502               	.LBE311:
1035:quantum/rgblight.c **** 
 5503               		.loc 1 1035 1 is_stmt 0 view .LVU1334
 5504 0080 DF91      		pop r29
 5505 0082 CF91      		pop r28
 5506               	.LVL363:
1035:quantum/rgblight.c **** 
 5507               		.loc 1 1035 1 view .LVU1335
 5508 0084 1F91      		pop r17
 5509 0086 0F91      		pop r16
 5510               	.LVL364:
 5511               	.LBB312:
1023:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5512               		.loc 1 1023 13 view .LVU1336
 5513 0088 0994      		ijmp
 5514               	.LVL365:
 5515               	.L259:
 948:quantum/rgblight.c ****             // rainbow mood mode
 5516               		.loc 1 948 14 is_stmt 1 view .LVU1337
 948:quantum/rgblight.c ****             // rainbow mood mode
 5517               		.loc 1 948 17 is_stmt 0 view .LVU1338
 5518 008a 8630      		cpi r24,lo8(6)
 5519 008c 01F4      		brne .L261
 950:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 5520               		.loc 1 950 13 is_stmt 1 view .LVU1339
 5521               	.LVL366:
 5522               	.LBB285:
 5523               	.LBI285:
 621:quantum/rgblight.c ****     return
 5524               		.loc 1 621 16 view .LVU1340
 621:quantum/rgblight.c ****     return
 5525               		.loc 1 621 16 is_stmt 0 view .LVU1341
 5526               	.LBE285:
 5527               	.LBE312:
 622:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5528               		.loc 1 622 5 is_stmt 1 view .LVU1342
 5529               	.LBB313:
 5530               	.LBB288:
 5531               	.LBB286:
 626:quantum/rgblight.c **** }
 5532               		.loc 1 626 29 view .LVU1343
 626:quantum/rgblight.c **** }
 5533               		.loc 1 626 29 view .LVU1344
 626:quantum/rgblight.c **** }
 5534               		.loc 1 626 29 view .LVU1345
 5535               	.LBE286:
 5536               	.LBE288:
 950:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 5537               		.loc 1 950 29 is_stmt 0 view .LVU1346
 5538 008e F0E0      		ldi r31,0
 5539 0090 E050      		subi r30,lo8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 5540 0092 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 5541               	.LVL367:
 5542               	.LBB289:
 5543               	.LBB287:
 626:quantum/rgblight.c **** }
 5544               		.loc 1 626 29 view .LVU1347
 5545               	/* #APP */
 5546               	 ;  626 "quantum/rgblight.c" 1
 5547 0094 E491      		lpm r30, Z
 5548               		
 5549               	 ;  0 "" 2
 5550               	.LVL368:
 626:quantum/rgblight.c **** }
 5551               		.loc 1 626 29 is_stmt 1 view .LVU1348
 626:quantum/rgblight.c **** }
 5552               		.loc 1 626 29 is_stmt 0 view .LVU1349
 5553               	/* #NOAPP */
 5554               	.LBE287:
 5555               	.LBE289:
 950:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 5556               		.loc 1 950 27 view .LVU1350
 5557 0096 CE2F      		mov r28,r30
 5558 0098 D0E0      		ldi r29,0
 5559               	.LVL369:
 951:quantum/rgblight.c ****         }
 5560               		.loc 1 951 13 is_stmt 1 view .LVU1351
 951:quantum/rgblight.c ****         }
 5561               		.loc 1 951 27 is_stmt 0 view .LVU1352
 5562 009a 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_mood))
 5563 009c 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_mood))
 5564 009e 00C0      		rjmp .L260
 5565               	.LVL370:
 5566               	.L261:
 955:quantum/rgblight.c ****             // rainbow swirl mode
 5567               		.loc 1 955 14 is_stmt 1 view .LVU1353
 955:quantum/rgblight.c ****             // rainbow swirl mode
 5568               		.loc 1 955 17 is_stmt 0 view .LVU1354
 5569 00a0 8930      		cpi r24,lo8(9)
 5570 00a2 01F4      		brne .L262
 957:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5571               		.loc 1 957 13 is_stmt 1 view .LVU1355
 5572               	.LVL371:
 5573               	.LBB290:
 5574               	.LBI290:
 621:quantum/rgblight.c ****     return
 5575               		.loc 1 621 16 view .LVU1356
 621:quantum/rgblight.c ****     return
 5576               		.loc 1 621 16 is_stmt 0 view .LVU1357
 5577               	.LBE290:
 5578               	.LBE313:
 622:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5579               		.loc 1 622 5 is_stmt 1 view .LVU1358
 5580               	.LBB314:
 5581               	.LBB293:
 5582               	.LBB291:
 626:quantum/rgblight.c **** }
 5583               		.loc 1 626 29 view .LVU1359
 626:quantum/rgblight.c **** }
 5584               		.loc 1 626 29 view .LVU1360
 626:quantum/rgblight.c **** }
 5585               		.loc 1 626 29 view .LVU1361
 5586               	.LBE291:
 5587               	.LBE293:
 957:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5588               		.loc 1 957 85 is_stmt 0 view .LVU1362
 5589 00a4 E695      		lsr r30
 5590               	.LVL372:
 957:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5591               		.loc 1 957 29 view .LVU1363
 5592 00a6 F0E0      		ldi r31,0
 5593 00a8 E050      		subi r30,lo8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 5594 00aa F040      		sbci r31,hi8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 5595               	.LBB294:
 5596               	.LBB292:
 626:quantum/rgblight.c **** }
 5597               		.loc 1 626 29 view .LVU1364
 5598               	/* #APP */
 5599               	 ;  626 "quantum/rgblight.c" 1
 5600 00ac E491      		lpm r30, Z
 5601               		
 5602               	 ;  0 "" 2
 5603               	.LVL373:
 626:quantum/rgblight.c **** }
 5604               		.loc 1 626 29 is_stmt 1 view .LVU1365
 626:quantum/rgblight.c **** }
 5605               		.loc 1 626 29 is_stmt 0 view .LVU1366
 5606               	/* #NOAPP */
 5607               	.LBE292:
 5608               	.LBE294:
 957:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5609               		.loc 1 957 27 view .LVU1367
 5610 00ae CE2F      		mov r28,r30
 5611 00b0 D0E0      		ldi r29,0
 5612               	.LVL374:
 958:quantum/rgblight.c ****         }
 5613               		.loc 1 958 13 is_stmt 1 view .LVU1368
 958:quantum/rgblight.c ****         }
 5614               		.loc 1 958 27 is_stmt 0 view .LVU1369
 5615 00b2 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_swirl))
 5616 00b4 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_swirl))
 5617 00b6 00C0      		rjmp .L260
 5618               	.LVL375:
 5619               	.L262:
 962:quantum/rgblight.c ****             // snake mode
 5620               		.loc 1 962 14 is_stmt 1 view .LVU1370
 962:quantum/rgblight.c ****             // snake mode
 5621               		.loc 1 962 17 is_stmt 0 view .LVU1371
 5622 00b8 8F30      		cpi r24,lo8(15)
 5623 00ba 01F4      		brne .L263
 964:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5624               		.loc 1 964 13 is_stmt 1 view .LVU1372
 5625               	.LVL376:
 5626               	.LBB295:
 5627               	.LBI295:
 621:quantum/rgblight.c ****     return
 5628               		.loc 1 621 16 view .LVU1373
 621:quantum/rgblight.c ****     return
 5629               		.loc 1 621 16 is_stmt 0 view .LVU1374
 5630               	.LBE295:
 5631               	.LBE314:
 622:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5632               		.loc 1 622 5 is_stmt 1 view .LVU1375
 5633               	.LBB315:
 5634               	.LBB298:
 5635               	.LBB296:
 626:quantum/rgblight.c **** }
 5636               		.loc 1 626 29 view .LVU1376
 626:quantum/rgblight.c **** }
 5637               		.loc 1 626 29 view .LVU1377
 626:quantum/rgblight.c **** }
 5638               		.loc 1 626 29 view .LVU1378
 5639               	.LBE296:
 5640               	.LBE298:
 964:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5641               		.loc 1 964 77 is_stmt 0 view .LVU1379
 5642 00bc E695      		lsr r30
 5643               	.LVL377:
 964:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5644               		.loc 1 964 29 view .LVU1380
 5645 00be F0E0      		ldi r31,0
 5646 00c0 E050      		subi r30,lo8(-(RGBLED_SNAKE_INTERVALS))
 5647 00c2 F040      		sbci r31,hi8(-(RGBLED_SNAKE_INTERVALS))
 5648               	.LBB299:
 5649               	.LBB297:
 626:quantum/rgblight.c **** }
 5650               		.loc 1 626 29 view .LVU1381
 5651               	/* #APP */
 5652               	 ;  626 "quantum/rgblight.c" 1
 5653 00c4 E491      		lpm r30, Z
 5654               		
 5655               	 ;  0 "" 2
 5656               	.LVL378:
 626:quantum/rgblight.c **** }
 5657               		.loc 1 626 29 is_stmt 1 view .LVU1382
 626:quantum/rgblight.c **** }
 5658               		.loc 1 626 29 is_stmt 0 view .LVU1383
 5659               	/* #NOAPP */
 5660               	.LBE297:
 5661               	.LBE299:
 964:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5662               		.loc 1 964 27 view .LVU1384
 5663 00c6 CE2F      		mov r28,r30
 5664 00c8 D0E0      		ldi r29,0
 5665               	.LVL379:
 965:quantum/rgblight.c ****         }
 5666               		.loc 1 965 13 is_stmt 1 view .LVU1385
 965:quantum/rgblight.c ****         }
 5667               		.loc 1 965 27 is_stmt 0 view .LVU1386
 5668 00ca 00E0      		ldi r16,lo8(gs(rgblight_effect_snake))
 5669 00cc 10E0      		ldi r17,hi8(gs(rgblight_effect_snake))
 5670 00ce 00C0      		rjmp .L260
 5671               	.LVL380:
 5672               	.L263:
 969:quantum/rgblight.c ****             // knight mode
 5673               		.loc 1 969 14 is_stmt 1 view .LVU1387
 969:quantum/rgblight.c ****             // knight mode
 5674               		.loc 1 969 17 is_stmt 0 view .LVU1388
 5675 00d0 8531      		cpi r24,lo8(21)
 5676 00d2 01F4      		brne .L264
 971:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 5677               		.loc 1 971 13 is_stmt 1 view .LVU1389
 5678               	.LVL381:
 5679               	.LBB300:
 5680               	.LBI300:
 621:quantum/rgblight.c ****     return
 5681               		.loc 1 621 16 view .LVU1390
 621:quantum/rgblight.c ****     return
 5682               		.loc 1 621 16 is_stmt 0 view .LVU1391
 5683               	.LBE300:
 5684               	.LBE315:
 622:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5685               		.loc 1 622 5 is_stmt 1 view .LVU1392
 5686               	.LBB316:
 5687               	.LBB303:
 5688               	.LBB301:
 626:quantum/rgblight.c **** }
 5689               		.loc 1 626 29 view .LVU1393
 626:quantum/rgblight.c **** }
 5690               		.loc 1 626 29 view .LVU1394
 626:quantum/rgblight.c **** }
 5691               		.loc 1 626 29 view .LVU1395
 5692               	.LBE301:
 5693               	.LBE303:
 971:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 5694               		.loc 1 971 29 is_stmt 0 view .LVU1396
 5695 00d4 F0E0      		ldi r31,0
 5696 00d6 E050      		subi r30,lo8(-(RGBLED_KNIGHT_INTERVALS))
 5697 00d8 F040      		sbci r31,hi8(-(RGBLED_KNIGHT_INTERVALS))
 5698               	.LVL382:
 5699               	.LBB304:
 5700               	.LBB302:
 626:quantum/rgblight.c **** }
 5701               		.loc 1 626 29 view .LVU1397
 5702               	/* #APP */
 5703               	 ;  626 "quantum/rgblight.c" 1
 5704 00da E491      		lpm r30, Z
 5705               		
 5706               	 ;  0 "" 2
 5707               	.LVL383:
 626:quantum/rgblight.c **** }
 5708               		.loc 1 626 29 is_stmt 1 view .LVU1398
 626:quantum/rgblight.c **** }
 5709               		.loc 1 626 29 is_stmt 0 view .LVU1399
 5710               	/* #NOAPP */
 5711               	.LBE302:
 5712               	.LBE304:
 971:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 5713               		.loc 1 971 27 view .LVU1400
 5714 00dc CE2F      		mov r28,r30
 5715 00de D0E0      		ldi r29,0
 5716               	.LVL384:
 972:quantum/rgblight.c ****         }
 5717               		.loc 1 972 13 is_stmt 1 view .LVU1401
 972:quantum/rgblight.c ****         }
 5718               		.loc 1 972 27 is_stmt 0 view .LVU1402
 5719 00e0 00E0      		ldi r16,lo8(gs(rgblight_effect_knight))
 5720 00e2 10E0      		ldi r17,hi8(gs(rgblight_effect_knight))
 5721 00e4 00C0      		rjmp .L260
 5722               	.LVL385:
 5723               	.L264:
 976:quantum/rgblight.c ****             // christmas mode
 5724               		.loc 1 976 14 is_stmt 1 view .LVU1403
 978:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 5725               		.loc 1 978 27 is_stmt 0 view .LVU1404
 5726 00e6 C8E2      		ldi r28,lo8(40)
 5727 00e8 D0E0      		ldi r29,0
 979:quantum/rgblight.c ****         }
 5728               		.loc 1 979 27 view .LVU1405
 5729 00ea 00E0      		ldi r16,lo8(gs(rgblight_effect_christmas))
 5730 00ec 10E0      		ldi r17,hi8(gs(rgblight_effect_christmas))
 976:quantum/rgblight.c ****             // christmas mode
 5731               		.loc 1 976 17 view .LVU1406
 5732 00ee 8831      		cpi r24,lo8(24)
 5733 00f0 01F4      		brne .+2
 5734 00f2 00C0      		rjmp .L260
 983:quantum/rgblight.c ****             // RGB test mode
 5735               		.loc 1 983 14 is_stmt 1 view .LVU1407
 983:quantum/rgblight.c ****             // RGB test mode
 5736               		.loc 1 983 17 is_stmt 0 view .LVU1408
 5737 00f4 8332      		cpi r24,lo8(35)
 5738 00f6 01F4      		brne .L265
 985:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5739               		.loc 1 985 13 is_stmt 1 view .LVU1409
 5740               	.LBB305:
 985:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5741               		.loc 1 985 29 view .LVU1410
 5742               	.LVL386:
 985:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5743               		.loc 1 985 29 view .LVU1411
 985:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5744               		.loc 1 985 29 view .LVU1412
 5745 00f8 E0E0      		ldi r30,lo8(RGBLED_RGBTEST_INTERVALS)
 5746 00fa F0E0      		ldi r31,hi8(RGBLED_RGBTEST_INTERVALS)
 5747               	.LVL387:
 985:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5748               		.loc 1 985 29 is_stmt 0 view .LVU1413
 5749               	/* #APP */
 5750               	 ;  985 "quantum/rgblight.c" 1
 5751 00fc C591      		lpm r28, Z+
 5752 00fe D491      		lpm r29, Z
 5753               		
 5754               	 ;  0 "" 2
 5755               	.LVL388:
 985:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5756               		.loc 1 985 29 is_stmt 1 view .LVU1414
 985:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5757               		.loc 1 985 29 is_stmt 0 view .LVU1415
 5758               	/* #NOAPP */
 5759               	.LBE305:
 986:quantum/rgblight.c ****         }
 5760               		.loc 1 986 13 is_stmt 1 view .LVU1416
 986:quantum/rgblight.c ****         }
 5761               		.loc 1 986 27 is_stmt 0 view .LVU1417
 5762 0100 00E0      		ldi r16,lo8(gs(rgblight_effect_rgbtest))
 5763 0102 10E0      		ldi r17,hi8(gs(rgblight_effect_rgbtest))
 5764 0104 00C0      		rjmp .L260
 5765               	.LVL389:
 5766               	.L265:
 990:quantum/rgblight.c ****             interval_time = 500;
 5767               		.loc 1 990 14 is_stmt 1 view .LVU1418
 991:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_alternating;
 5768               		.loc 1 991 27 is_stmt 0 view .LVU1419
 5769 0106 C4EF      		ldi r28,lo8(-12)
 5770 0108 D1E0      		ldi r29,lo8(1)
 992:quantum/rgblight.c ****         }
 5771               		.loc 1 992 27 view .LVU1420
 5772 010a 00E0      		ldi r16,lo8(gs(rgblight_effect_alternating))
 5773 010c 10E0      		ldi r17,hi8(gs(rgblight_effect_alternating))
 990:quantum/rgblight.c ****             interval_time = 500;
 5774               		.loc 1 990 17 view .LVU1421
 5775 010e 8432      		cpi r24,lo8(36)
 5776 0110 01F4      		brne .+2
 5777 0112 00C0      		rjmp .L260
 996:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_TWINKLE_INTERVALS[delta % 3], 5, 30);
 5778               		.loc 1 996 14 is_stmt 1 view .LVU1422
 933:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 5779               		.loc 1 933 23 is_stmt 0 view .LVU1423
 5780 0114 C0ED      		ldi r28,lo8(-48)
 5781 0116 D7E0      		ldi r29,lo8(7)
 932:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 5782               		.loc 1 932 23 view .LVU1424
 5783 0118 00E0      		ldi r16,lo8(gs(rgblight_effect_dummy))
 5784 011a 10E0      		ldi r17,hi8(gs(rgblight_effect_dummy))
 996:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_TWINKLE_INTERVALS[delta % 3], 5, 30);
 5785               		.loc 1 996 17 view .LVU1425
 5786 011c 8532      		cpi r24,lo8(37)
 5787 011e 01F0      		breq .+2
 5788 0120 00C0      		rjmp .L260
 997:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5789               		.loc 1 997 13 is_stmt 1 view .LVU1426
 5790               	.LVL390:
 5791               	.LBB306:
 5792               	.LBI306:
 621:quantum/rgblight.c ****     return
 5793               		.loc 1 621 16 view .LVU1427
 621:quantum/rgblight.c ****     return
 5794               		.loc 1 621 16 is_stmt 0 view .LVU1428
 5795               	.LBE306:
 5796               	.LBE316:
 622:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5797               		.loc 1 622 5 is_stmt 1 view .LVU1429
 5798               	.LBB317:
 5799               	.LBB309:
 5800               	.LBB307:
 626:quantum/rgblight.c **** }
 5801               		.loc 1 626 29 view .LVU1430
 626:quantum/rgblight.c **** }
 5802               		.loc 1 626 29 view .LVU1431
 626:quantum/rgblight.c **** }
 5803               		.loc 1 626 29 view .LVU1432
 5804               	.LBE307:
 5805               	.LBE309:
 997:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5806               		.loc 1 997 79 is_stmt 0 view .LVU1433
 5807 0122 8E2F      		mov r24,r30
 5808 0124 63E0      		ldi r22,lo8(3)
 5809 0126 0E94 0000 		call __udivmodqi4
 997:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5810               		.loc 1 997 29 view .LVU1434
 5811 012a E92F      		mov r30,r25
 5812               	.LVL391:
 997:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5813               		.loc 1 997 29 view .LVU1435
 5814 012c F0E0      		ldi r31,0
 5815 012e E050      		subi r30,lo8(-(RGBLED_TWINKLE_INTERVALS))
 5816 0130 F040      		sbci r31,hi8(-(RGBLED_TWINKLE_INTERVALS))
 5817               	.LBB310:
 5818               	.LBB308:
 626:quantum/rgblight.c **** }
 5819               		.loc 1 626 29 view .LVU1436
 5820               	/* #APP */
 5821               	 ;  626 "quantum/rgblight.c" 1
 5822 0132 E491      		lpm r30, Z
 5823               		
 5824               	 ;  0 "" 2
 5825               	.LVL392:
 626:quantum/rgblight.c **** }
 5826               		.loc 1 626 29 is_stmt 1 view .LVU1437
 626:quantum/rgblight.c **** }
 5827               		.loc 1 626 29 is_stmt 0 view .LVU1438
 5828               	/* #NOAPP */
 5829               	.LBE308:
 5830               	.LBE310:
 997:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5831               		.loc 1 997 27 view .LVU1439
 5832 0134 CE2F      		mov r28,r30
 5833 0136 D0E0      		ldi r29,0
 5834               	.LVL393:
 998:quantum/rgblight.c ****         }
 5835               		.loc 1 998 13 is_stmt 1 view .LVU1440
 998:quantum/rgblight.c ****         }
 5836               		.loc 1 998 27 is_stmt 0 view .LVU1441
 5837 0138 00E0      		ldi r16,lo8(gs(rgblight_effect_twinkle))
 5838 013a 10E0      		ldi r17,hi8(gs(rgblight_effect_twinkle))
 5839 013c 00C0      		rjmp .L260
 5840               	.LVL394:
 5841               	.L256:
 5842               	/* epilogue start */
 998:quantum/rgblight.c ****         }
 5843               		.loc 1 998 27 view .LVU1442
 5844               	.LBE317:
1035:quantum/rgblight.c **** 
 5845               		.loc 1 1035 1 view .LVU1443
 5846 013e DF91      		pop r29
 5847 0140 CF91      		pop r28
 5848 0142 1F91      		pop r17
 5849 0144 0F91      		pop r16
 5850 0146 0895      		ret
 5851               		.cfi_endproc
 5852               	.LFE175:
 5854               		.section	.bss.maxval.3481,"aw",@nobits
 5857               	maxval.3481:
 5858 0000 00        		.zero	1
 5859               		.section	.data.increment.3466,"aw"
 5862               	increment.3466:
 5863 0000 01        		.byte	1
 5864               		.section	.data.increment.3454,"aw"
 5867               	increment.3454:
 5868 0000 01        		.byte	1
 5869               		.section	.data.high_bound.3453,"aw"
 5872               	high_bound.3453:
 5873 0000 02        		.byte	2
 5874               		.section	.bss.low_bound.3452,"aw",@nobits
 5877               	low_bound.3452:
 5878 0000 00        		.zero	1
 5879               		.section	.bss.pos.3436,"aw",@nobits
 5882               	pos.3436:
 5883 0000 00        		.zero	1
 5884               		.section	.bss.led_twinkle_state,"aw",@nobits
 5887               	led_twinkle_state:
 5888 0000 0000 0000 		.zero	80
 5888      0000 0000 
 5888      0000 0000 
 5888      0000 0000 
 5888      0000 0000 
 5889               		.weak	RGBLED_TWINKLE_INTERVALS
 5890               		.section	.progmem.data.RGBLED_TWINKLE_INTERVALS,"a"
 5893               	RGBLED_TWINKLE_INTERVALS:
 5894 0000 1E        		.byte	30
 5895 0001 0F        		.byte	15
 5896 0002 05        		.byte	5
 5897               		.weak	RGBLED_RGBTEST_INTERVALS
 5898               		.section	.progmem.data.RGBLED_RGBTEST_INTERVALS,"a"
 5901               	RGBLED_RGBTEST_INTERVALS:
 5902 0000 0004      		.word	1024
 5903               		.weak	RGBLED_KNIGHT_INTERVALS
 5904               		.section	.progmem.data.RGBLED_KNIGHT_INTERVALS,"a"
 5907               	RGBLED_KNIGHT_INTERVALS:
 5908 0000 7F        		.byte	127
 5909 0001 3F        		.byte	63
 5910 0002 1F        		.byte	31
 5911               		.weak	RGBLED_SNAKE_INTERVALS
 5912               		.section	.progmem.data.RGBLED_SNAKE_INTERVALS,"a"
 5915               	RGBLED_SNAKE_INTERVALS:
 5916 0000 64        		.byte	100
 5917 0001 32        		.byte	50
 5918 0002 14        		.byte	20
 5919               		.weak	RGBLED_RAINBOW_SWIRL_INTERVALS
 5920               		.section	.progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS,"a"
 5923               	RGBLED_RAINBOW_SWIRL_INTERVALS:
 5924 0000 64        		.byte	100
 5925 0001 32        		.byte	50
 5926 0002 14        		.byte	20
 5927               		.weak	RGBLED_RAINBOW_MOOD_INTERVALS
 5928               		.section	.progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS,"a"
 5931               	RGBLED_RAINBOW_MOOD_INTERVALS:
 5932 0000 78        		.byte	120
 5933 0001 3C        		.byte	60
 5934 0002 1E        		.byte	30
 5935               		.weak	RGBLED_BREATHING_INTERVALS
 5936               		.section	.progmem.data.RGBLED_BREATHING_INTERVALS,"a"
 5939               	RGBLED_BREATHING_INTERVALS:
 5940 0000 1E        		.byte	30
 5941 0001 14        		.byte	20
 5942 0002 0A        		.byte	10
 5943 0003 05        		.byte	5
 5944               	.global	rgblight_effect_breathe_table
 5945               		.section	.progmem.data.rgblight_effect_breathe_table,"a"
 5948               	rgblight_effect_breathe_table:
 5949 0000 22        		.byte	34
 5950 0001 23        		.byte	35
 5951 0002 25        		.byte	37
 5952 0003 26        		.byte	38
 5953 0004 28        		.byte	40
 5954 0005 29        		.byte	41
 5955 0006 2A        		.byte	42
 5956 0007 2C        		.byte	44
 5957 0008 2D        		.byte	45
 5958 0009 2F        		.byte	47
 5959 000a 30        		.byte	48
 5960 000b 32        		.byte	50
 5961 000c 33        		.byte	51
 5962 000d 35        		.byte	53
 5963 000e 36        		.byte	54
 5964 000f 38        		.byte	56
 5965 0010 3A        		.byte	58
 5966 0011 3B        		.byte	59
 5967 0012 3D        		.byte	61
 5968 0013 3E        		.byte	62
 5969 0014 40        		.byte	64
 5970 0015 42        		.byte	66
 5971 0016 43        		.byte	67
 5972 0017 45        		.byte	69
 5973 0018 47        		.byte	71
 5974 0019 49        		.byte	73
 5975 001a 4A        		.byte	74
 5976 001b 4C        		.byte	76
 5977 001c 4E        		.byte	78
 5978 001d 50        		.byte	80
 5979 001e 51        		.byte	81
 5980 001f 53        		.byte	83
 5981 0020 55        		.byte	85
 5982 0021 57        		.byte	87
 5983 0022 59        		.byte	89
 5984 0023 5A        		.byte	90
 5985 0024 5C        		.byte	92
 5986 0025 5E        		.byte	94
 5987 0026 60        		.byte	96
 5988 0027 62        		.byte	98
 5989 0028 64        		.byte	100
 5990 0029 66        		.byte	102
 5991 002a 68        		.byte	104
 5992 002b 69        		.byte	105
 5993 002c 6B        		.byte	107
 5994 002d 6D        		.byte	109
 5995 002e 6F        		.byte	111
 5996 002f 71        		.byte	113
 5997 0030 73        		.byte	115
 5998 0031 75        		.byte	117
 5999 0032 77        		.byte	119
 6000 0033 79        		.byte	121
 6001 0034 7B        		.byte	123
 6002 0035 7D        		.byte	125
 6003 0036 7F        		.byte	127
 6004 0037 81        		.byte	-127
 6005 0038 83        		.byte	-125
 6006 0039 85        		.byte	-123
 6007 003a 87        		.byte	-121
 6008 003b 89        		.byte	-119
 6009 003c 8A        		.byte	-118
 6010 003d 8C        		.byte	-116
 6011 003e 8E        		.byte	-114
 6012 003f 90        		.byte	-112
 6013 0040 92        		.byte	-110
 6014 0041 94        		.byte	-108
 6015 0042 96        		.byte	-106
 6016 0043 98        		.byte	-104
 6017 0044 9A        		.byte	-102
 6018 0045 9C        		.byte	-100
 6019 0046 9E        		.byte	-98
 6020 0047 9F        		.byte	-97
 6021 0048 A1        		.byte	-95
 6022 0049 A3        		.byte	-93
 6023 004a A5        		.byte	-91
 6024 004b A7        		.byte	-89
 6025 004c A8        		.byte	-88
 6026 004d AA        		.byte	-86
 6027 004e AC        		.byte	-84
 6028 004f AE        		.byte	-82
 6029 0050 AF        		.byte	-81
 6030 0051 B1        		.byte	-79
 6031 0052 B3        		.byte	-77
 6032 0053 B4        		.byte	-76
 6033 0054 B6        		.byte	-74
 6034 0055 B8        		.byte	-72
 6035 0056 B9        		.byte	-71
 6036 0057 BB        		.byte	-69
 6037 0058 BC        		.byte	-68
 6038 0059 BE        		.byte	-66
 6039 005a BF        		.byte	-65
 6040 005b C1        		.byte	-63
 6041 005c C2        		.byte	-62
 6042 005d C3        		.byte	-61
 6043 005e C5        		.byte	-59
 6044 005f C6        		.byte	-58
 6045 0060 C7        		.byte	-57
 6046 0061 C9        		.byte	-55
 6047 0062 CA        		.byte	-54
 6048 0063 CB        		.byte	-53
 6049 0064 CC        		.byte	-52
 6050 0065 CD        		.byte	-51
 6051 0066 CE        		.byte	-50
 6052 0067 D0        		.byte	-48
 6053 0068 D1        		.byte	-47
 6054 0069 D2        		.byte	-46
 6055 006a D2        		.byte	-46
 6056 006b D3        		.byte	-45
 6057 006c D4        		.byte	-44
 6058 006d D5        		.byte	-43
 6059 006e D6        		.byte	-42
 6060 006f D7        		.byte	-41
 6061 0070 D7        		.byte	-41
 6062 0071 D8        		.byte	-40
 6063 0072 D9        		.byte	-39
 6064 0073 D9        		.byte	-39
 6065 0074 DA        		.byte	-38
 6066 0075 DA        		.byte	-38
 6067 0076 DB        		.byte	-37
 6068 0077 DB        		.byte	-37
 6069 0078 DB        		.byte	-37
 6070 0079 DC        		.byte	-36
 6071 007a DC        		.byte	-36
 6072 007b DC        		.byte	-36
 6073 007c DC        		.byte	-36
 6074 007d DC        		.byte	-36
 6075 007e DD        		.byte	-35
 6076 007f DD        		.byte	-35
 6077 0080 DD        		.byte	-35
 6078 0081 DD        		.byte	-35
 6079 0082 DC        		.byte	-36
 6080 0083 DC        		.byte	-36
 6081 0084 DC        		.byte	-36
 6082 0085 DC        		.byte	-36
 6083 0086 DC        		.byte	-36
 6084 0087 DB        		.byte	-37
 6085 0088 DB        		.byte	-37
 6086 0089 DB        		.byte	-37
 6087 008a DA        		.byte	-38
 6088 008b DA        		.byte	-38
 6089 008c D9        		.byte	-39
 6090 008d D9        		.byte	-39
 6091 008e D8        		.byte	-40
 6092 008f D7        		.byte	-41
 6093 0090 D7        		.byte	-41
 6094 0091 D6        		.byte	-42
 6095 0092 D5        		.byte	-43
 6096 0093 D4        		.byte	-44
 6097 0094 D3        		.byte	-45
 6098 0095 D2        		.byte	-46
 6099 0096 D2        		.byte	-46
 6100 0097 D1        		.byte	-47
 6101 0098 D0        		.byte	-48
 6102 0099 CE        		.byte	-50
 6103 009a CD        		.byte	-51
 6104 009b CC        		.byte	-52
 6105 009c CB        		.byte	-53
 6106 009d CA        		.byte	-54
 6107 009e C9        		.byte	-55
 6108 009f C7        		.byte	-57
 6109 00a0 C6        		.byte	-58
 6110 00a1 C5        		.byte	-59
 6111 00a2 C3        		.byte	-61
 6112 00a3 C2        		.byte	-62
 6113 00a4 C1        		.byte	-63
 6114 00a5 BF        		.byte	-65
 6115 00a6 BE        		.byte	-66
 6116 00a7 BC        		.byte	-68
 6117 00a8 BB        		.byte	-69
 6118 00a9 B9        		.byte	-71
 6119 00aa B8        		.byte	-72
 6120 00ab B6        		.byte	-74
 6121 00ac B4        		.byte	-76
 6122 00ad B3        		.byte	-77
 6123 00ae B1        		.byte	-79
 6124 00af AF        		.byte	-81
 6125 00b0 AE        		.byte	-82
 6126 00b1 AC        		.byte	-84
 6127 00b2 AA        		.byte	-86
 6128 00b3 A8        		.byte	-88
 6129 00b4 A7        		.byte	-89
 6130 00b5 A5        		.byte	-91
 6131 00b6 A3        		.byte	-93
 6132 00b7 A1        		.byte	-95
 6133 00b8 9F        		.byte	-97
 6134 00b9 9E        		.byte	-98
 6135 00ba 9C        		.byte	-100
 6136 00bb 9A        		.byte	-102
 6137 00bc 98        		.byte	-104
 6138 00bd 96        		.byte	-106
 6139 00be 94        		.byte	-108
 6140 00bf 92        		.byte	-110
 6141 00c0 90        		.byte	-112
 6142 00c1 8E        		.byte	-114
 6143 00c2 8C        		.byte	-116
 6144 00c3 8A        		.byte	-118
 6145 00c4 89        		.byte	-119
 6146 00c5 87        		.byte	-121
 6147 00c6 85        		.byte	-123
 6148 00c7 83        		.byte	-125
 6149 00c8 81        		.byte	-127
 6150 00c9 7F        		.byte	127
 6151 00ca 7D        		.byte	125
 6152 00cb 7B        		.byte	123
 6153 00cc 79        		.byte	121
 6154 00cd 77        		.byte	119
 6155 00ce 75        		.byte	117
 6156 00cf 73        		.byte	115
 6157 00d0 71        		.byte	113
 6158 00d1 6F        		.byte	111
 6159 00d2 6D        		.byte	109
 6160 00d3 6B        		.byte	107
 6161 00d4 69        		.byte	105
 6162 00d5 68        		.byte	104
 6163 00d6 66        		.byte	102
 6164 00d7 64        		.byte	100
 6165 00d8 62        		.byte	98
 6166 00d9 60        		.byte	96
 6167 00da 5E        		.byte	94
 6168 00db 5C        		.byte	92
 6169 00dc 5A        		.byte	90
 6170 00dd 59        		.byte	89
 6171 00de 57        		.byte	87
 6172 00df 55        		.byte	85
 6173 00e0 53        		.byte	83
 6174 00e1 51        		.byte	81
 6175 00e2 50        		.byte	80
 6176 00e3 4E        		.byte	78
 6177 00e4 4C        		.byte	76
 6178 00e5 4A        		.byte	74
 6179 00e6 49        		.byte	73
 6180 00e7 47        		.byte	71
 6181 00e8 45        		.byte	69
 6182 00e9 43        		.byte	67
 6183 00ea 42        		.byte	66
 6184 00eb 40        		.byte	64
 6185 00ec 3E        		.byte	62
 6186 00ed 3D        		.byte	61
 6187 00ee 3B        		.byte	59
 6188 00ef 3A        		.byte	58
 6189 00f0 38        		.byte	56
 6190 00f1 36        		.byte	54
 6191 00f2 35        		.byte	53
 6192 00f3 33        		.byte	51
 6193 00f4 32        		.byte	50
 6194 00f5 30        		.byte	48
 6195 00f6 2F        		.byte	47
 6196 00f7 2D        		.byte	45
 6197 00f8 2C        		.byte	44
 6198 00f9 2A        		.byte	42
 6199 00fa 29        		.byte	41
 6200 00fb 28        		.byte	40
 6201 00fc 26        		.byte	38
 6202 00fd 25        		.byte	37
 6203 00fe 23        		.byte	35
 6204 00ff 22        		.byte	34
 6205               	.global	rgblight_ranges
 6206               		.section	.data.rgblight_ranges,"aw"
 6209               	rgblight_ranges:
 6210 0000 00        		.byte	0
 6211 0001 10        		.byte	16
 6212 0002 00        		.byte	0
 6213 0003 10        		.byte	16
 6214 0004 10        		.byte	16
 6215               		.comm	led,48,1
 6216               	.global	animation_status
 6217               		.section	.bss.animation_status,"aw",@nobits
 6220               	animation_status:
 6221 0000 0000 0000 		.zero	6
 6221      0000 
 6222               		.section	.bss.pre_suspend_enabled,"aw",@nobits
 6225               	pre_suspend_enabled:
 6226 0000 00        		.zero	1
 6227               		.section	.bss.is_suspended,"aw",@nobits
 6230               	is_suspended:
 6231 0000 00        		.zero	1
 6232               	.global	is_rgblight_initialized
 6233               		.section	.bss.is_rgblight_initialized,"aw",@nobits
 6236               	is_rgblight_initialized:
 6237 0000 00        		.zero	1
 6238               	.global	rgblight_status
 6239               		.section	.bss.rgblight_status,"aw",@nobits
 6242               	rgblight_status:
 6243 0000 0000      		.zero	2
 6244               		.comm	rgblight_config,5,1
 6245               		.weak	RGBLED_GRADIENT_RANGES
 6246               		.section	.progmem.data.RGBLED_GRADIENT_RANGES,"a"
 6249               	RGBLED_GRADIENT_RANGES:
 6250 0000 FF        		.byte	-1
 6251 0001 AA        		.byte	-86
 6252 0002 7F        		.byte	127
 6253 0003 55        		.byte	85
 6254 0004 40        		.byte	64
 6255               		.section	.rodata.mode_base_table,"a"
 6258               	mode_base_table:
 6259 0000 00        		.byte	0
 6260 0001 01        		.byte	1
 6261 0002 02        		.byte	2
 6262 0003 02        		.byte	2
 6263 0004 02        		.byte	2
 6264 0005 02        		.byte	2
 6265 0006 06        		.byte	6
 6266 0007 06        		.byte	6
 6267 0008 06        		.byte	6
 6268 0009 09        		.byte	9
 6269 000a 09        		.byte	9
 6270 000b 09        		.byte	9
 6271 000c 09        		.byte	9
 6272 000d 09        		.byte	9
 6273 000e 09        		.byte	9
 6274 000f 0F        		.byte	15
 6275 0010 0F        		.byte	15
 6276 0011 0F        		.byte	15
 6277 0012 0F        		.byte	15
 6278 0013 0F        		.byte	15
 6279 0014 0F        		.byte	15
 6280 0015 15        		.byte	21
 6281 0016 15        		.byte	21
 6282 0017 15        		.byte	21
 6283 0018 18        		.byte	24
 6284 0019 19        		.byte	25
 6285 001a 19        		.byte	25
 6286 001b 19        		.byte	25
 6287 001c 19        		.byte	25
 6288 001d 19        		.byte	25
 6289 001e 19        		.byte	25
 6290 001f 19        		.byte	25
 6291 0020 19        		.byte	25
 6292 0021 19        		.byte	25
 6293 0022 19        		.byte	25
 6294 0023 23        		.byte	35
 6295 0024 24        		.byte	36
 6296 0025 25        		.byte	37
 6297 0026 25        		.byte	37
 6298 0027 25        		.byte	37
 6299 0028 25        		.byte	37
 6300 0029 25        		.byte	37
 6301 002a 25        		.byte	37
 6302               		.section	.data.static_effect_table,"aw"
 6305               	static_effect_table:
 6306 0000 01        		.byte	1
 6307 0001 19        		.byte	25
 6308 0002 1A        		.byte	26
 6309 0003 1B        		.byte	27
 6310 0004 1C        		.byte	28
 6311 0005 1D        		.byte	29
 6312 0006 1E        		.byte	30
 6313 0007 1F        		.byte	31
 6314 0008 20        		.byte	32
 6315 0009 21        		.byte	33
 6316 000a 22        		.byte	34
 6317               		.text
 6318               	.Letext0:
 6319               		.file 4 "/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/stdint.h"
 6320               		.file 5 "/usr/local/Cellar/avr-gcc@8/8.4.0_1/lib/avr-gcc/8/gcc/avr/8.4.0/include/stddef.h"
 6321               		.file 6 "/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/stdlib.h"
 6322               		.file 7 "tmk_core/common/timer.h"
 6323               		.file 8 "./quantum/color.h"
 6324               		.file 9 "quantum/rgblight.h"
 6325               		.file 10 "tmk_core/common/debug.h"
 6326               		.file 11 "quantum/led_tables.h"
 6327               		.file 12 "./lib/lib8tion/random8.h"
 6328               		.file 13 "./lib/lib8tion/trig8.h"
 6329               		.file 14 "quantum/rgblight_breathe_table.h"
 6330               		.file 15 "/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/string.h"
 6331               		.file 16 "drivers/ws2812.h"
 6332               		.file 17 "tmk_core/common/eeconfig.h"
 6333               		.file 18 "/usr/local/Cellar/avr-gcc@8/8.4.0_1/avr/include/avr/eeprom.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rgblight.c
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:12     .text.rgblight_effect_dummy:0000000000000000 rgblight_effect_dummy
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:31     .text.rgblight_set_clipping_range:0000000000000000 rgblight_set_clipping_range
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:6209   .data.rgblight_ranges:0000000000000000 rgblight_ranges
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:57     .text.rgblight_set_effect_range:0000000000000000 rgblight_set_effect_range
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:103    .text.rgblight_hsv_to_rgb:0000000000000000 rgblight_hsv_to_rgb
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:123    .text.sethsv_raw:0000000000000000 sethsv_raw
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:185    .text.sethsv:0000000000000000 sethsv
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:204    .text.setrgb:0000000000000000 setrgb
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:233    .text.rgblight_check_config:0000000000000000 rgblight_check_config
                            *COM*:0000000000000005 rgblight_config
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:276    .text.eeconfig_read_rgblight:0000000000000000 eeconfig_read_rgblight
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:296    .text.eeconfig_update_rgblight:0000000000000000 eeconfig_update_rgblight
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:347    .text.eeconfig_update_rgblight_current:0000000000000000 eeconfig_update_rgblight_current
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:368    .text.eeconfig_update_rgblight_default:0000000000000000 eeconfig_update_rgblight_default
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:410    .text.eeconfig_debug_rgblight:0000000000000000 eeconfig_debug_rgblight
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:434    .text.rgblight_read_dword:0000000000000000 rgblight_read_dword
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:457    .text.rgblight_get_mode:0000000000000000 rgblight_get_mode
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:487    .text.rgblight_is_enabled:0000000000000000 rgblight_is_enabled
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:508    .text.rgblight_increase_speed_helper:0000000000000000 rgblight_increase_speed_helper
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:549    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:567    .text.rgblight_increase_speed_noeeprom:0000000000000000 rgblight_increase_speed_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:585    .text.rgblight_decrease_speed_helper:0000000000000000 rgblight_decrease_speed_helper
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:626    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:644    .text.rgblight_decrease_speed_noeeprom:0000000000000000 rgblight_decrease_speed_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:662    .text.rgblight_get_speed:0000000000000000 rgblight_get_speed
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:681    .text.rgblight_set_speed_eeprom_helper:0000000000000000 rgblight_set_speed_eeprom_helper
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:716    .text.rgblight_set_speed:0000000000000000 rgblight_set_speed
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:736    .text.rgblight_set_speed_noeeprom:0000000000000000 rgblight_set_speed_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:756    .text.rgblight_get_hue:0000000000000000 rgblight_get_hue
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:775    .text.rgblight_get_sat:0000000000000000 rgblight_get_sat
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:794    .text.rgblight_get_val:0000000000000000 rgblight_get_val
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:813    .text.rgblight_get_hsv:0000000000000000 rgblight_get_hsv
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:838    .text.rgblight_call_driver:0000000000000000 rgblight_call_driver
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:858    .text.rgblight_set:0000000000000000 rgblight_set
                            *COM*:0000000000000030 led
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:935    .text.rgblight_setrgb:0000000000000000 rgblight_setrgb
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1005   .text.rgblight_sethsv_noeeprom_old:0000000000000000 rgblight_sethsv_noeeprom_old
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1076   .text.rgblight_effect_breathing:0000000000000000 rgblight_effect_breathing
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5948   .progmem.data.rgblight_effect_breathe_table:0000000000000000 rgblight_effect_breathe_table
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1150   .text.rgblight_effect_rainbow_mood:0000000000000000 rgblight_effect_rainbow_mood
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1197   .text.rgblight_effect_rgbtest:0000000000000000 rgblight_effect_rgbtest
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5857   .bss.maxval.3481:0000000000000000 maxval.3481
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1351   .text.rgblight_sethsv_eeprom_helper:0000000000000000 rgblight_sethsv_eeprom_helper
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:6258   .rodata.mode_base_table:0000000000000000 mode_base_table
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:6242   .bss.rgblight_status:0000000000000000 rgblight_status
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:6249   .progmem.data.RGBLED_GRADIENT_RANGES:0000000000000000 RGBLED_GRADIENT_RANGES
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1694   .text.rgblight_increase_hue_helper:0000000000000000 rgblight_increase_hue_helper
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1728   .text.rgblight_increase_hue_noeeprom:0000000000000000 rgblight_increase_hue_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1746   .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1764   .text.rgblight_decrease_hue_helper:0000000000000000 rgblight_decrease_hue_helper
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1798   .text.rgblight_decrease_hue_noeeprom:0000000000000000 rgblight_decrease_hue_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1816   .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1834   .text.rgblight_increase_sat_helper:0000000000000000 rgblight_increase_sat_helper
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1865   .text.rgblight_increase_sat_helper:000000000000000e L_1447
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1888   .text.rgblight_increase_sat_noeeprom:0000000000000000 rgblight_increase_sat_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1906   .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1924   .text.rgblight_decrease_sat_helper:0000000000000000 rgblight_decrease_sat_helper
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1954   .text.rgblight_decrease_sat_helper:000000000000000e L_1503
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1977   .text.rgblight_decrease_sat_noeeprom:0000000000000000 rgblight_decrease_sat_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:1995   .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2013   .text.rgblight_increase_val_helper:0000000000000000 rgblight_increase_val_helper
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2043   .text.rgblight_increase_val_helper:000000000000000e L_1559
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2066   .text.rgblight_increase_val_noeeprom:0000000000000000 rgblight_increase_val_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2084   .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2102   .text.rgblight_decrease_val_helper:0000000000000000 rgblight_decrease_val_helper
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2132   .text.rgblight_decrease_val_helper:000000000000000e L_1615
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2155   .text.rgblight_decrease_val_noeeprom:0000000000000000 rgblight_decrease_val_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2173   .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2191   .text.rgblight_sethsv:0000000000000000 rgblight_sethsv
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2211   .text.rgblight_sethsv_noeeprom:0000000000000000 rgblight_sethsv_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2231   .text.rgblight_setrgb_at:0000000000000000 rgblight_setrgb_at
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2280   .text.rgblight_sethsv_at:0000000000000000 rgblight_sethsv_at
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2360   .text.rgblight_setrgb_range:0000000000000000 rgblight_setrgb_range
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2453   .text.rgblight_sethsv_range:0000000000000000 rgblight_sethsv_range
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2540   .text.rgblight_sethsv_master:0000000000000000 rgblight_sethsv_master
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2569   .text.rgblight_sethsv_slave:0000000000000000 rgblight_sethsv_slave
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2598   .text.rgblight_setrgb_master:0000000000000000 rgblight_setrgb_master
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2627   .text.rgblight_setrgb_slave:0000000000000000 rgblight_setrgb_slave
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2656   .text.rgblight_effect_rainbow_swirl:0000000000000000 rgblight_effect_rainbow_swirl
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:2800   .text.rgblight_effect_snake:0000000000000000 rgblight_effect_snake
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5882   .bss.pos.3436:0000000000000000 pos.3436
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:3060   .text.rgblight_effect_knight:0000000000000000 rgblight_effect_knight
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5867   .data.increment.3454:0000000000000000 increment.3454
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5877   .bss.low_bound.3452:0000000000000000 low_bound.3452
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5872   .data.high_bound.3453:0000000000000000 high_bound.3453
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:3280   .text.rgblight_effect_christmas:0000000000000000 rgblight_effect_christmas
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5862   .data.increment.3466:0000000000000000 increment.3466
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:3566   .text.rgblight_effect_alternating:0000000000000000 rgblight_effect_alternating
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:3725   .text.rgblight_effect_twinkle:0000000000000000 rgblight_effect_twinkle
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5887   .bss.led_twinkle_state:0000000000000000 led_twinkle_state
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4278   .text.rgblight_disable:0000000000000000 rgblight_disable
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4347   .text.rgblight_disable_noeeprom:0000000000000000 rgblight_disable_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4409   .text.rgblight_suspend:0000000000000000 rgblight_suspend
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:6230   .bss.is_suspended:0000000000000000 is_suspended
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:6225   .bss.pre_suspend_enabled:0000000000000000 pre_suspend_enabled
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4456   .text.rgblight_timer_init:0000000000000000 rgblight_timer_init
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4477   .text.rgblight_timer_enable:0000000000000000 rgblight_timer_enable
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:6305   .data.static_effect_table:0000000000000000 static_effect_table
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:6220   .bss.animation_status:0000000000000000 animation_status
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4536   .text.rgblight_mode_eeprom_helper:0000000000000000 rgblight_mode_eeprom_helper
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4663   .text.rgblight_step_helper:0000000000000000 rgblight_step_helper
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4704   .text.rgblight_step_noeeprom:0000000000000000 rgblight_step_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4722   .text.rgblight_step:0000000000000000 rgblight_step
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4740   .text.rgblight_step_reverse_helper:0000000000000000 rgblight_step_reverse_helper
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4780   .text.rgblight_step_reverse_noeeprom:0000000000000000 rgblight_step_reverse_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4798   .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4816   .text.rgblight_mode:0000000000000000 rgblight_mode
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4836   .text.rgblight_increase:0000000000000000 rgblight_increase
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4871   .text.rgblight_decrease:0000000000000000 rgblight_decrease
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4906   .text.rgblight_enable:0000000000000000 rgblight_enable
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4932   .text.rgblight_toggle:0000000000000000 rgblight_toggle
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4959   .text.rgblight_mode_noeeprom:0000000000000000 rgblight_mode_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:4979   .text.rgblight_init:0000000000000000 rgblight_init
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:6236   .bss.is_rgblight_initialized:0000000000000000 is_rgblight_initialized
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5078   .text.rgblight_reload_from_eeprom:0000000000000000 rgblight_reload_from_eeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5120   .text.rgblight_enable_noeeprom:0000000000000000 rgblight_enable_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5146   .text.rgblight_toggle_noeeprom:0000000000000000 rgblight_toggle_noeeprom
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5173   .text.rgblight_update_dword:0000000000000000 rgblight_update_dword
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5220   .text.rgblight_wakeup:0000000000000000 rgblight_wakeup
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5248   .text.rgblight_timer_disable:0000000000000000 rgblight_timer_disable
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5264   .text.rgblight_timer_toggle:0000000000000000 rgblight_timer_toggle
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5302   .text.rgblight_show_solid_color:0000000000000000 rgblight_show_solid_color
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5358   .text.rgblight_task:0000000000000000 rgblight_task
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5939   .progmem.data.RGBLED_BREATHING_INTERVALS:0000000000000000 RGBLED_BREATHING_INTERVALS
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5931   .progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS:0000000000000000 RGBLED_RAINBOW_MOOD_INTERVALS
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5923   .progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS:0000000000000000 RGBLED_RAINBOW_SWIRL_INTERVALS
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5915   .progmem.data.RGBLED_SNAKE_INTERVALS:0000000000000000 RGBLED_SNAKE_INTERVALS
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5907   .progmem.data.RGBLED_KNIGHT_INTERVALS:0000000000000000 RGBLED_KNIGHT_INTERVALS
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5901   .progmem.data.RGBLED_RGBTEST_INTERVALS:0000000000000000 RGBLED_RGBTEST_INTERVALS
/var/folders/_7/b1vvw0zx42g3yw9l_q10bzth0000gn/T//cclWimXD.s:5893   .progmem.data.RGBLED_TWINKLE_INTERVALS:0000000000000000 RGBLED_TWINKLE_INTERVALS

UNDEFINED SYMBOLS
hsv_to_rgb
eeprom_read_dword
eeprom_update_dword
ws2812_setleds
__divmodhi4
__udivmodhi4
__umulhisi3
__muluhisi3
__mulhisi3
__mulshisi3
__udivmodsi4
rand
memchr
timer_read
eeconfig_is_enabled
eeconfig_init
__udivmodqi4
__do_copy_data
__do_clear_bss
